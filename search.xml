<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>每日早报--认识世界</title>
    <url>/2024/10/21/ad715d53afba/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1><center>今日新闻</center></h1>
<center><span id="date"></span></center>
<script>document.getElementById('date').textContent = new Date().toLocaleDateString();</script>
<div style="">
  <canvas id="canvas" style="width:60%;">当前浏览器不支持canvas，请更换浏览器后再试</canvas>
</div>
<script>
(function(){
<p>var digit=<br>
[<br>
[<br>
[0,0,1,1,1,0,0],<br>
[0,1,1,0,1,1,0],<br>
[1,1,0,0,0,1,1],<br>
[1,1,0,0,0,1,1],<br>
[1,1,0,0,0,1,1],<br>
[1,1,0,0,0,1,1],<br>
[1,1,0,0,0,1,1],<br>
[1,1,0,0,0,1,1],<br>
[0,1,1,0,1,1,0],<br>
[0,0,1,1,1,0,0]<br>
],//0<br>
[<br>
[0,0,0,1,1,0,0],<br>
[0,1,1,1,1,0,0],<br>
[0,0,0,1,1,0,0],<br>
[0,0,0,1,1,0,0],<br>
[0,0,0,1,1,0,0],<br>
[0,0,0,1,1,0,0],<br>
[0,0,0,1,1,0,0],<br>
[0,0,0,1,1,0,0],<br>
[0,0,0,1,1,0,0],<br>
[1,1,1,1,1,1,1]<br>
],//1<br>
[<br>
[0,1,1,1,1,1,0],<br>
[1,1,0,0,0,1,1],<br>
[0,0,0,0,0,1,1],<br>
[0,0,0,0,1,1,0],<br>
[0,0,0,1,1,0,0],<br>
[0,0,1,1,0,0,0],<br>
[0,1,1,0,0,0,0],<br>
[1,1,0,0,0,0,0],<br>
[1,1,0,0,0,1,1],<br>
[1,1,1,1,1,1,1]<br>
],//2<br>
[<br>
[1,1,1,1,1,1,1],<br>
[0,0,0,0,0,1,1],<br>
[0,0,0,0,1,1,0],<br>
[0,0,0,1,1,0,0],<br>
[0,0,1,1,1,0,0],<br>
[0,0,0,0,1,1,0],<br>
[0,0,0,0,0,1,1],<br>
[0,0,0,0,0,1,1],<br>
[1,1,0,0,0,1,1],<br>
[0,1,1,1,1,1,0]<br>
],//3<br>
[<br>
[0,0,0,0,1,1,0],<br>
[0,0,0,1,1,1,0],<br>
[0,0,1,1,1,1,0],<br>
[0,1,1,0,1,1,0],<br>
[1,1,0,0,1,1,0],<br>
[1,1,1,1,1,1,1],<br>
[0,0,0,0,1,1,0],<br>
[0,0,0,0,1,1,0],<br>
[0,0,0,0,1,1,0],<br>
[0,0,0,1,1,1,1]<br>
],//4<br>
[<br>
[1,1,1,1,1,1,1],<br>
[1,1,0,0,0,0,0],<br>
[1,1,0,0,0,0,0],<br>
[1,1,1,1,1,1,0],<br>
[0,0,0,0,0,1,1],<br>
[0,0,0,0,0,1,1],<br>
[0,0,0,0,0,1,1],<br>
[0,0,0,0,0,1,1],<br>
[1,1,0,0,0,1,1],<br>
[0,1,1,1,1,1,0]<br>
],//5<br>
[<br>
[0,0,0,0,1,1,0],<br>
[0,0,1,1,0,0,0],<br>
[0,1,1,0,0,0,0],<br>
[1,1,0,0,0,0,0],<br>
[1,1,0,1,1,1,0],<br>
[1,1,0,0,0,1,1],<br>
[1,1,0,0,0,1,1],<br>
[1,1,0,0,0,1,1],<br>
[1,1,0,0,0,1,1],<br>
[0,1,1,1,1,1,0]<br>
],//6<br>
[<br>
[1,1,1,1,1,1,1],<br>
[1,1,0,0,0,1,1],<br>
[0,0,0,0,1,1,0],<br>
[0,0,0,0,1,1,0],<br>
[0,0,0,1,1,0,0],<br>
[0,0,0,1,1,0,0],<br>
[0,0,1,1,0,0,0],<br>
[0,0,1,1,0,0,0],<br>
[0,0,1,1,0,0,0],<br>
[0,0,1,1,0,0,0]<br>
],//7<br>
[<br>
[0,1,1,1,1,1,0],<br>
[1,1,0,0,0,1,1],<br>
[1,1,0,0,0,1,1],<br>
[1,1,0,0,0,1,1],<br>
[0,1,1,1,1,1,0],<br>
[1,1,0,0,0,1,1],<br>
[1,1,0,0,0,1,1],<br>
[1,1,0,0,0,1,1],<br>
[1,1,0,0,0,1,1],<br>
[0,1,1,1,1,1,0]<br>
],//8<br>
[<br>
[0,1,1,1,1,1,0],<br>
[1,1,0,0,0,1,1],<br>
[1,1,0,0,0,1,1],<br>
[1,1,0,0,0,1,1],<br>
[0,1,1,1,0,1,1],<br>
[0,0,0,0,0,1,1],<br>
[0,0,0,0,0,1,1],<br>
[0,0,0,0,1,1,0],<br>
[0,0,0,1,1,0,0],<br>
[0,1,1,0,0,0,0]<br>
],//9<br>
[<br>
[0,0,0,0,0,0,0],<br>
[0,0,1,1,1,0,0],<br>
[0,0,1,1,1,0,0],<br>
[0,0,1,1,1,0,0],<br>
[0,0,0,0,0,0,0],<br>
[0,0,0,0,0,0,0],<br>
[0,0,1,1,1,0,0],<br>
[0,0,1,1,1,0,0],<br>
[0,0,1,1,1,0,0],<br>
[0,0,0,0,0,0,0]<br>
]//:<br>
];</p>
<p>var canvas = document.getElementById(‘canvas’);</p>
<p>if(canvas.getContext){<br>
var cxt = canvas.getContext(‘2d’);<br>
//声明canvas的宽高<br>
var H = 100,W = 700;<br>
canvas.height = H;<br>
canvas.width = W;<br>
cxt.fillStyle = ‘#f00’;<br>
cxt.fillRect(10,10,50,50);</p>
<pre><code>//存储时间数据
var data = [];
//存储运动的小球
var balls = [];
//设置粒子半径
var R = canvas.height/20-1;
(function()&#123;
    var temp = /(\d)(\d):(\d)(\d):(\d)(\d)/.exec(new Date());
    //存储时间数字，由十位小时、个位小时、冒号、十位分钟、个位分钟、冒号、十位秒钟、个位秒钟这7个数字组成
    data.push(temp[1],temp[2],10,temp[3],temp[4],10,temp[5],temp[6]);
&#125;)();

/*生成点阵数字*/
function renderDigit(index,num)&#123;
    for(var i = 0; i &lt; digit[num].length; i++)&#123;
        for(var j = 0; j &lt; digit[num][i].length; j++)&#123;
            if(digit[num][i][j] == 1)&#123;
                cxt.beginPath();
                cxt.arc(14*(R+2)*index + j*2*(R+1)+(R+1),i*2*(R+1)+(R+1),R,0,2*Math.PI);
                cxt.closePath();
                cxt.fill();
            &#125;
        &#125;
    &#125;
&#125;

/*更新时钟*/
function updateDigitTime()&#123;
    var changeNumArray = [];
    var temp = /(\d)(\d):(\d)(\d):(\d)(\d)/.exec(new Date());
    var NewData = [];
    NewData.push(temp[1],temp[2],10,temp[3],temp[4],10,temp[5],temp[6]);
    for(var i = data.length-1; i &gt;=0 ; i--)&#123;
        //时间发生变化
        if(NewData[i] !== data[i])&#123;
            //将变化的数字值和在data数组中的索引存储在changeNumArray数组中
            changeNumArray.push(i+'_'+(Number(data[i])+1)%10);
        &#125;
    &#125;
    //增加小球
    for(var i = 0; i&lt; changeNumArray.length; i++)&#123;
        addBalls.apply(this,changeNumArray[i].split('_'));
    &#125;
    data = NewData.concat();
&#125;

/*更新小球状态*/
function updateBalls()&#123;
    for(var i = 0; i &lt; balls.length; i++)&#123;
        balls[i].stepY += balls[i].disY;
        balls[i].x += balls[i].stepX;
        balls[i].y += balls[i].stepY;
        if(balls[i].x &gt; W + R || balls[i].y &gt; H + R)&#123;
            balls.splice(i,1);
            i--;
        &#125;
    &#125;
&#125;

/*增加要运动的小球*/
function addBalls(index,num)&#123;
    var numArray = [1,2,3];
    var colorArray =  [&quot;#3BE&quot;,&quot;#09C&quot;,&quot;#A6C&quot;,&quot;#93C&quot;,&quot;#9C0&quot;,&quot;#690&quot;,&quot;#FB3&quot;,&quot;#F80&quot;,&quot;#F44&quot;,&quot;#C00&quot;];
    for(var i = 0; i &lt; digit[num].length; i++)&#123;
        for(var j = 0; j &lt; digit[num][i].length; j++)&#123;
            if(digit[num][i][j] == 1)&#123;
                var ball = &#123;
                    x:14*(R+2)*index + j*2*(R+1)+(R+1),
                    y:i*2*(R+1)+(R+1),
                    stepX:Math.floor(Math.random() * 4 -2),
                    stepY:-2*numArray[Math.floor(Math.random()*numArray.length)],
                    color:colorArray[Math.floor(Math.random()*colorArray.length)],
                    disY:1
                &#125;;
                balls.push(ball);
            &#125;
        &#125;
    &#125;
&#125;

/*渲染*/
function render()&#123;
    //重置画布宽度，达到清空画布的效果
    canvas.height = 100;
    //渲染时钟
    for(var i = 0; i &lt; data.length; i++)&#123;
        renderDigit(i,data[i]);
    &#125;
    //渲染小球
    for(var i = 0; i &lt; balls.length; i++)&#123;
        cxt.beginPath();
        cxt.arc(balls[i].x,balls[i].y,R,0,2*Math.PI);
        cxt.fillStyle = balls[i].color;
        cxt.closePath();
        cxt.fill();
    &#125;
&#125;

clearInterval(oTimer);
var oTimer = setInterval(function()&#123;
    //更新时钟
    updateDigitTime();
    //更新小球状态
    updateBalls();
    //渲染
    render();
&#125;,50);
</code></pre>
<p>}</p>
<p>})();<br>
</script></p>
<span id="more"></span>
<p><img src="https://v2.alapi.cn/api/zaobao?token=PjSXcfOsbFbutaW9&amp;format=image" alt=""></p>
]]></content>
      <categories>
        <category>笔记</category>
        <category>其他</category>
      </categories>
      <tags>
        <tag>新闻</tag>
        <tag>API</tag>
        <tag>今日</tag>
        <tag>热点</tag>
        <tag>全球</tag>
      </tags>
  </entry>
  <entry>
    <title>【转载】Hexo博客Next主题添加暗黑夜间模式切换</title>
    <url>/2024/10/22/2cc7acb57128/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>使用<code>hexo-next-darkmode</code>​插件实现夜间模式切换。</p>
<span id="more"></span>
<h1>安装</h1>
<p>暗黑/夜间模式切换插件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-next-darkmode --save</span><br></pre></td></tr></table></figure>
<h1>配置</h1>
<p>往 NexT 主题的 <code>_config.yml</code>​ 配置文件里添加以下内容，必须确保 NexT 原生的 <code>darkmode</code>​ 选项设置为 <code>false</code>​</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># close NexT&#x27;s darkmode</span></span><br><span class="line"><span class="attr">darkmode:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Darkmode JS</span></span><br><span class="line"><span class="comment"># For more information: https://github.com/rqh656418510/hexo-next-darkmode, https://github.com/sandoche/Darkmode.js</span></span><br><span class="line"><span class="attr">darkmode_js:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">bottom:</span> <span class="string">&#x27;64px&#x27;</span> <span class="comment"># default: &#x27;32px&#x27;</span></span><br><span class="line">  <span class="attr">right:</span> <span class="string">&#x27;unset&#x27;</span> <span class="comment"># default: &#x27;32px&#x27;</span></span><br><span class="line">  <span class="attr">left:</span> <span class="string">&#x27;32px&#x27;</span> <span class="comment"># default: &#x27;unset&#x27;</span></span><br><span class="line">  <span class="attr">time:</span> <span class="string">&#x27;0.5s&#x27;</span> <span class="comment"># default: &#x27;0.3s&#x27;</span></span><br><span class="line">  <span class="attr">mixColor:</span> <span class="string">&#x27;transparent&#x27;</span> <span class="comment"># default: &#x27;#fff&#x27;</span></span><br><span class="line">  <span class="attr">backgroundColor:</span> <span class="string">&#x27;transparent&#x27;</span>  <span class="comment"># default: &#x27;#fff&#x27;</span></span><br><span class="line">  <span class="attr">buttonColorDark:</span> <span class="string">&#x27;#100f2c&#x27;</span>  <span class="comment"># default: &#x27;#100f2c&#x27;</span></span><br><span class="line">  <span class="attr">buttonColorLight:</span> <span class="string">&#x27;#dcdcdc&#x27;</span> <span class="comment"># default: &#x27;#fff&#x27;</span></span><br><span class="line">  <span class="attr">saveInCookies:</span> <span class="literal">true</span> <span class="comment"># default: true</span></span><br><span class="line">  <span class="attr">label:</span> <span class="string">&#x27;🌓&#x27;</span> <span class="comment"># default: &#x27;&#x27;</span></span><br><span class="line">  <span class="attr">autoMatchOsTheme:</span> <span class="literal">true</span> <span class="comment"># default: true</span></span><br><span class="line">  <span class="attr">libUrl:</span> <span class="comment"># Set custom library cdn url for Darkmode.js</span></span><br></pre></td></tr></table></figure>
<p>适用于 NexT 主题的暗黑/夜间模式切换插件，如果 NexT 的版本 &lt; 8.2.0，则需要额外安装 Nunjucks 渲染插件，否则 <code>hexo-next-darkmode</code>​ 插件无法正常运行。</p>
<hr>
<h2 id="自定义样式">自定义样式</h2>
<p>暗黑/夜间模式激活后，会将 <code>darkmode--activated</code>​ CSS 类添加到 <code>body</code>​ 标签，你可以利用它覆盖插件默认自带的样式（如下所示），这样就可以实现暗黑/夜间模式样式的高度自定义，包括代码块颜色自定义等。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.darkmode--activated &#123;</span><br><span class="line">  --body-bg-color: #282828;</span><br><span class="line">  --content-bg-color: #333;</span><br><span class="line">  --card-bg-color: #555;</span><br><span class="line">  --text-color: #ccc;</span><br><span class="line">  --blockquote-color: #bbb;</span><br><span class="line">  --link-color: #ccc;</span><br><span class="line">  --link-hover-color: #eee;</span><br><span class="line">  --brand-color: #ddd;</span><br><span class="line">  --brand-hover-color: #ddd;</span><br><span class="line">  --table-row-odd-bg-color: #282828;</span><br><span class="line">  --table-row-hover-bg-color: #363636;</span><br><span class="line">  --menu-item-bg-color: #555;</span><br><span class="line">  --btn-default-bg: #222;</span><br><span class="line">  --btn-default-color: #ccc;</span><br><span class="line">  --btn-default-border-color: #555;</span><br><span class="line">  --btn-default-hover-bg: #666;</span><br><span class="line">  --btn-default-hover-color: #ccc;</span><br><span class="line">  --btn-default-hover-border-color: #666;</span><br><span class="line">  --highlight-background: #282b2e;</span><br><span class="line">  --highlight-foreground: #a9b7c6;</span><br><span class="line">  --highlight-gutter-background: #34393d;</span><br><span class="line">  --highlight-gutter-foreground: #9ca9b6;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.darkmode--activated img &#123;</span><br><span class="line">  opacity: 0.75;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.darkmode--activated img:hover &#123;</span><br><span class="line">  opacity: 0.9;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.darkmode--activated code &#123;</span><br><span class="line">  color: #69dbdc;</span><br><span class="line">  background: transparent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul class="lvl-0">
<li class="lvl-2">
<p>当某个标签不想使用暗黑/夜间模式时，可以添加 <code>darkmode-ignore</code>​ CSS 类到标签上。</p>
</li>
</ul>
<p>&lt;span class=“darkmode-ignore”&gt;😬&lt;span&gt;</p>
<ul class="lvl-0">
<li class="lvl-2">
<p>当然你也可以使用 <code>isolation: isolate;</code>​ CSS 样式来忽略暗黑/夜间模式。</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.button &#123;</span><br><span class="line">  isolation: isolate;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul class="lvl-0">
<li class="lvl-2">
<p>也可以使用这种 <code>mix-blend-mode: difference</code>​ CSS 样式来还原暗黑/夜间模式。</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.button &#123;</span><br><span class="line">  mix-blend-mode: difference;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1>参考</h1>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3JxaDY1NjQxODUxMC9oZXhvLW5leHQtZGFya21vZGUvYmxvYi9hMmJjZTQxOGEzZGYzYTlhMzQwOWNlOTJlMzkzY2Y1NjY5NjQ3MTEwL1JFQURNRV9DTi5tZA==">hexo-next-darkmode/README_CN.md at a2bce418a3df3a9a3409ce92e393cf5669647110 · rqh656418510/hexo-next-darkmode<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>转载</category>
        <category>其他</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
        <tag>插件</tag>
        <tag>暗黑模式</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客Next主题添加动态标签词云</title>
    <url>/2024/10/22/4de2bfd9848b/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="效果">效果</h2>
<p><a href="https://leafminer.github.io/">损不足 - 奉有余 (leafminer.github.io)</a></p>
<span id="more"></span>
<h2 id="安装插件">安装插件</h2>
<ul class="lvl-0">
<li class="lvl-2">
<p>进入到 hexo 的根目录，然后在 package.json 中添加依赖: “hexo-tag-cloud”: “2.1.*”</p>
</li>
<li class="lvl-2">
<p>然后执行<code>npm install</code>命令</p>
</li>
<li class="lvl-2">
<p>或者<code>npm install --save hexo-tag-cloud</code>进行安装</p>
</li>
</ul>
<h2 id="配置主题">配置主题</h2>
<p>找到文件 hexo\node_modules\hexo-theme-next\layout\_macrosidebar.njk, 然后添加如下内容。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% if site.tags.length &gt; 1 %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> <span class="attr">src</span>=<span class="string">&quot;&#123;&#123; url_for(&#x27;/js/tagcloud.js&#x27;) &#125;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> <span class="attr">src</span>=<span class="string">&quot;&#123;&#123; url_for(&#x27;/js/tagcanvas.js&#x27;) &#125;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;widget-wrap&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;widget-title&quot;</span>&gt;</span>标签云<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;myCanvasContainer&quot;</span> <span class="attr">class</span>=<span class="string">&quot;widget tagcloud&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">width</span>=<span class="string">&quot;250&quot;</span> <span class="attr">height</span>=<span class="string">&quot;250&quot;</span> <span class="attr">id</span>=<span class="string">&quot;resCanvas&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:100%&quot;</span>&gt;</span></span><br><span class="line">      &#123;&#123; list_tags() &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>
<p>在你的Hexo博客根目录，找到 _config.yml 文件然后添加如下的配置项:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># hexo-tag-cloud</span></span><br><span class="line"><span class="attr">tag_cloud:</span></span><br><span class="line">    <span class="attr">textFont:</span> <span class="string">Trebuchet</span> <span class="string">MS,</span> <span class="string">Helvetica</span></span><br><span class="line">    <span class="attr">textColor:</span> <span class="string">&#x27;#333&#x27;</span></span><br><span class="line">    <span class="attr">textHeight:</span> <span class="number">25</span></span><br><span class="line">    <span class="attr">outlineColor:</span> <span class="string">&#x27;#E2E1D1&#x27;</span></span><br><span class="line">    <span class="attr">maxSpeed:</span> <span class="number">0.5</span></span><br><span class="line">    <span class="attr">pauseOnSelected:</span> <span class="literal">false</span> <span class="comment"># true 意味着当选中对应 tag 时,停止转动</span></span><br></pre></td></tr></table></figure>
<h2 id="预览部署">预览部署</h2>
<ul class="lvl-0">
<li class="lvl-2">
<p>完成安装和显示，可以通过 <code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code> 来进行本地预览, <code>hexo clean</code>为必须选项。</p>
</li>
<li class="lvl-2">
<p>PS:不要使用<code>hexo g -d</code> 或者<code> hexo d -g</code>这类组合命令。</p>
</li>
</ul>
<h2 id="参考">参考</h2>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaGV4by10YWctY2xvdWQ=">hexo-tag-cloud - npm (npmjs.com)<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>笔记</category>
        <category>学习</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
        <tag>标签云</tag>
        <tag>动态</tag>
        <tag>tag_cloud</tag>
      </tags>
  </entry>
  <entry>
    <title>【转载】 鼠标点击特效</title>
    <url>/2024/10/22/c0d92f275632/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>原文地址：<span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vcXJrNjY2L3AvMTI4NzgzNjAuaHRtbA==">鼠标点击特效 - 凯哥xyz - 博客园<i class="fa fa-external-link-alt"></i></span></p>
<span id="more"></span>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">  <span class="keyword">var</span> a_idx = <span class="number">0</span>;</span><br><span class="line"><span class="title function_">jQuery</span>(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span>(<span class="params">$</span>) &#123;</span><br><span class="line">  $(<span class="string">&quot;body&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> a = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="string">&quot;富强&quot;</span>, <span class="string">&quot;民主&quot;</span>, <span class="string">&quot;文明&quot;</span>, <span class="string">&quot;和谐&quot;</span>, <span class="string">&quot;自由&quot;</span>, <span class="string">&quot;平等&quot;</span>, <span class="string">&quot;公正&quot;</span> ,<span class="string">&quot;法治&quot;</span>, <span class="string">&quot;爱国&quot;</span>, <span class="string">&quot;敬业&quot;</span>, <span class="string">&quot;诚信&quot;</span>, <span class="string">&quot;友善&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> $i = $(<span class="string">&quot;&lt;span/&gt;&quot;</span>).<span class="title function_">text</span>(a[a_idx]);</span><br><span class="line">    a_idx = (a_idx + <span class="number">1</span>) % a.<span class="property">length</span>;</span><br><span class="line">    <span class="keyword">var</span> x = e.<span class="property">pageX</span>,</span><br><span class="line">      y = e.<span class="property">pageY</span>;</span><br><span class="line">    $i.<span class="title function_">css</span>(&#123;</span><br><span class="line">      <span class="string">&quot;z-index&quot;</span>: <span class="number">999999999999999999999999999999999999999999999999999999999999999999999</span>,</span><br><span class="line">      <span class="string">&quot;top&quot;</span>: y - <span class="number">20</span>,</span><br><span class="line">      <span class="string">&quot;left&quot;</span>: x,</span><br><span class="line">      <span class="string">&quot;position&quot;</span>: <span class="string">&quot;absolute&quot;</span>,</span><br><span class="line">      <span class="string">&quot;font-weight&quot;</span>: <span class="string">&quot;bold&quot;</span>,</span><br><span class="line">      <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ff6651&quot;</span></span><br><span class="line">    &#125;);</span><br><span class="line">    $(<span class="string">&quot;body&quot;</span>).<span class="title function_">append</span>($i);</span><br><span class="line">    $i.<span class="title function_">animate</span>(&#123;</span><br><span class="line">      <span class="string">&quot;top&quot;</span>: y - <span class="number">180</span>,</span><br><span class="line">      <span class="string">&quot;opacity&quot;</span>: <span class="number">0</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="number">1500</span>,</span><br><span class="line"><span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">$i.<span class="title function_">remove</span>();</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p>接着插入一段引用js</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script language=<span class="string">&quot;javascript&quot;</span> type=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;&lt;a href=&quot;</span><span class="attr">https</span>:<span class="comment">//blog-static.cnblogs.com/files/qrk666/main.js&quot;&gt;https://blog-static.cnblogs.com/files/qrk666/main.js&lt;/a&gt;&quot;&gt;</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>转载</category>
        <category>其他</category>
      </categories>
      <tags>
        <tag>特效</tag>
        <tag>JavaScript</tag>
        <tag>鼠标</tag>
        <tag>今日</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客Next主题修改加载特效</title>
    <url>/2024/10/22/f85ae47c487c/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>修改主题配置文件<code>_config.next.yml</code></p>
<span id="more"></span>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">pace:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># All available colors:</span></span><br><span class="line">  <span class="comment"># black | blue | green | orange | pink | purple | red | silver | white | yellow</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">black</span></span><br><span class="line">  <span class="comment"># All available themes:</span></span><br><span class="line">  <span class="comment"># big-counter | bounce | barber-shop | center-atom | center-circle | center-radar | center-simple</span></span><br><span class="line">  <span class="comment"># corner-indicator | fill-left | flat-top | flash | loading-bar | mac-osx | material | minimal</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">loading-bar</span></span><br></pre></td></tr></table></figure>
<h1>参考</h1>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vamlud2VpMjYvYXJ0aWNsZXMvMTg0NjAzMTI=">hexo next8.20.0 主题美化 - 悠心不已 - 博客园 (cnblogs.com)<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>笔记</category>
        <category>其他</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
        <tag>加载</tag>
        <tag>pace</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客Next主题解决不显示外链图片的问题</title>
    <url>/2024/10/22/68f75ac070e2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1>问题描述</h1>
<p>Hexo文章中采用外链加载的图片无法显示。</p>
<span id="more"></span>
<h1>问题原因</h1>
<p>防盗链。部分网站不允许图片外链，只允许本网站才能显示图片，外部网站加载图片就会报错。通过对请求方的 <strong>Referer</strong> 进行判断过滤，确认是否可以访问。</p>
<h1>解决办法</h1>
<p>【Next主题】主题文件夹内的(hexo\node_modules\hexo-theme-next\layout\_partials\head) <strong>head.njk</strong>文件中，添加meta信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot; /&gt;</span><br></pre></td></tr></table></figure>
<p>​<img src="https://cdn.nlark.com/yuque/0/2024/png/12885947/1729527335903-a66b9a72-3937-4216-b2b0-8e4cc9b392a7.png" alt="">​</p>
<h1>参考</h1>
<p><span class="exturl" data-url="aHR0cHM6Ly9saXhpYW95YW45OTkuZ2l0aHViLmlvLzIwMjQvMDQvMDIvJUU4JUE3JUEzJUU1JTg2JUIzaGV4byVFNSVCQyU5NSVFNSU4NSVBNSVFNSU5QiVCRSVFNSVCQSU4QSVFRiVCQyU4QyVFNiU4OSU4QiVFNiU5QyVCQSVFNSU5MiU4Q3dlYiVFNCVCOCU4RCVFNiU5OCVCRSVFNyVBNCVCQSVFNSU5QiVCRSVFNyU4OSU4NyVFNyU5QSU4NCVFOSU5NyVBRSVFOSVBMiU5OC8j">解决hexo引入图床，不显示图片的问题 - 一叶知秋<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>笔记</category>
        <category>学习</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
        <tag>图片显示</tag>
        <tag>防盗链</tag>
        <tag>meta</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客Next主题添加动态标题</title>
    <url>/2024/10/21/8803d6a9e06d/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>直接在<code>hexo\node_modules\hexo-theme-next\layout\_layout.njk</code>​文件中添加如下代码：</p>
<span id="more"></span>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">    <span class="keyword">var</span> <span class="title class_">OriginTitile</span>=<span class="variable language_">document</span>.<span class="property">title</span>,st;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;visibilitychange&quot;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">hidden</span>?(<span class="variable language_">document</span>.<span class="property">title</span>=<span class="string">&quot;ヽ(●-`Д´-)ノ别走啊！&quot;</span>,<span class="built_in">clearTimeout</span>(st)):(<span class="variable language_">document</span>.<span class="property">title</span>=<span class="string">&quot;(Ő∀Ő3)ノ来了啊！&quot;</span>,st=<span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">document</span>.<span class="property">title</span>=<span class="title class_">OriginTitile</span>&#125;,<span class="number">3e3</span>))</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p>​<img src="https://cdn.nlark.com/yuque/0/2024/png/12885947/1729158708074-c3c3fbe9-a4ea-45ae-8ba8-760cb5514c17.png" alt="">​</p>
<h2 id="参考">参考</h2>
<p><span class="exturl" data-url="aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL2EvMTE5MDAwMDAyMTYxNDMwNz9zb3J0PW5ld2VzdCNpdGVtLTctMTA=">hexo+github搭建博客(超级详细版，精细入微) - 个人文章 - SegmentFault 思否<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>笔记</category>
        <category>学习</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>Hexo</tag>
        <tag>主题</tag>
        <tag>Next</tag>
        <tag>动态标题</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客Next主题添加公众号二维码</title>
    <url>/2024/10/21/be743ddf561b/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="添加到Next主题侧边栏">添加到Next主题侧边栏</h2>
<ol>
<li class="lvl-3">将图片放入博客根目录下的./themes/next/source/images/目录中，并将图片改名为wechat_channel.png</li>
<li class="lvl-3">编辑<code>themes/next/layout/_macro/sidebar.njk</code>​文件。</li>
</ol>
<p>在里面搜索theme.back2top.enable，在这个if语句之后添加下面的代码</p>
<span id="more"></span> 
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wechat_channel&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 这里添加你的二维码图片 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span> =<span class="string">&quot;/images/wechat_channel.png&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- &lt;span&gt;公众号&lt;/span&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>​<img src="https://cdn.nlark.com/yuque/0/2024/png/12885947/1729194189399-62740420-6785-4412-ae43-3bc898002824.png" alt="">​</p>
<h2 id="添加到文章底部">添加到文章底部</h2>
<p>编辑themes/next/layout/_partials/post/post-copyright.njk文件，在底部的&lt;/div&gt;上面增加下述代码，</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wechat_channel&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 这里添加你的二维码图片 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span> =<span class="string">&quot;/images/wechat_channel.png&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="参考">参考</h2>
<p><span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80NjM1MzA4OTc=">hexo next主题新增微信公众号二维码显示 - 知乎 (zhihu.com)<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>笔记</category>
        <category>学习</category>
      </categories>
      <tags>
        <tag>公众号</tag>
        <tag>博客</tag>
        <tag>Hexo</tag>
        <tag>主题</tag>
        <tag>Next</tag>
        <tag>二维码</tag>
      </tags>
  </entry>
  <entry>
    <title>【转载】 Hexo 的一些冷门小问题——category_map和permalink</title>
    <url>/2024/10/21/b74b8ec7e417/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>初入 Hexo 模板开发，难免要熟悉 Hexo 程序本身的一些特性和使用操作，于是就立下了这篇博文，之后也会陆陆续续进行更新和完善。</p>
<span id="more"></span>
<h2 id="分类名改成英文">分类名改成英文</h2>
<p>分类名称默认是你在文章里面设置的，如果是中文分类名，那么路径名也是中文了，特别别扭。我在文档上查到了一个名为 <code>category_map</code>​ 的设置项，但文档上并没有详细的说明。直到我看到这个 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcy85MDg=">Issue<i class="fa fa-external-link-alt"></i></span> 之后瞬间明白，就是一个键值对嘛。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// Before</span><br><span class="line">http://localhost:4000/进击的码农/js-hover-dropdown-menu/</span><br><span class="line"></span><br><span class="line">// After</span><br><span class="line">http://localhost:4000/coding/js-hover-dropdown-menu/</span><br></pre></td></tr></table></figure>
<p>修改办法就是打开你的 Hexo 配置文件 <code>_config.yml</code>​，修改 <code>category_map</code>​ 属性，大概按照这样的格式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">category_map:</span><br><span class="line">  &#x27;随笔与杂谈&#x27;: essay</span><br><span class="line">  &#x27;做个技术宅&#x27;: tech</span><br><span class="line">  &#x27;进击的码农&#x27;: coding</span><br><span class="line">  &#x27;设计新视界&#x27;: design</span><br><span class="line">  &#x27;有趣的分享&#x27;: share</span><br></pre></td></tr></table></figure>
<p>还有一个类似的属性 <code>tag_map</code>​ 也是同理。</p>
<h2 id="文章链接生成">文章链接生成</h2>
<p>Hexo 默认根据文件名来生成博文的 URL，你也可以把它当作一个页面的形式去设置，在文章顶部添加 <code>permalink</code>​ 设置就可以了，但保罗觉得也许并不应该这么做。可以尝试把文件名写的短一些？</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// Before:</span><br><span class="line">http://localhost:4000/coding/js-hover-dropdown-menu/</span><br><span class="line"></span><br><span class="line">// After:</span><br><span class="line">http://localhost:4000/js-hover-dropdown-menu/</span><br></pre></td></tr></table></figure>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 使用原生 JS 写一个悬浮下拉菜单</span><br><span class="line">category: 进击的码农</span><br><span class="line">tags: JavaScript</span><br><span class="line"><span class="section">permalink: js-hover-dropdown-menu</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure>
<hr>
<h4 id="Paul">Paul</h4>
<p>特立独行的一只前端菜狗。本站未注明转载的文章均为原创，并采用 <span class="exturl" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC9kZWVkLnpo">CC BY-NC-SA 4.0<i class="fa fa-external-link-alt"></i></span> 授权协议，转载请注明来源，谢谢！如本站内容对你有所帮助的话，不妨 <span class="exturl" data-url="aHR0cHM6Ly9wYXVsLnJlbi9kb25hdGU=">捐助支持<i class="fa fa-external-link-alt"></i></span> 一下？同时欢迎订阅关注 <span class="exturl" data-url="aHR0cHM6Ly9wYXVsLnJlbi9ub3Rl">我的日记<i class="fa fa-external-link-alt"></i></span>，唠嗑（分享）每日的折腾经历。</p>
<h2 id="原文地址">原文地址</h2>
<p><span class="exturl" data-url="aHR0cHM6Ly9wYXVncmFtLmNvbS9jb2RpbmcvaGV4by1zZWNyZXQtdXNhZ2UuaHRtbA==">Hexo 的一些冷门小问题 - 保罗的小宇宙 (paugram.com)<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>转载</category>
        <category>其他</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>Hexo</tag>
        <tag>category_map</tag>
        <tag>permalink</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客Next主题添加每日早报</title>
    <url>/2024/10/21/1d2a6f85d3f7/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>通过Alapi提供的API实现每日早报的生成并在hexo博客中展示。</p>
<span id="more"></span>
<h1>Hexo博客Next主题添加每日早报</h1>
<p>​<img src="https://cdn.nlark.com/yuque/0/2024/png/12885947/1729504809997-7a6f9e65-e4bb-41fe-9f1e-8f87be2a1892.png?x-oss-process=image%2Fcrop%2Cx_0%2Cy_0%2Cw_658%2Ch_244" alt="">​</p>
<h1>Alapi官网注册</h1>
<p>Alapi官网地址 <span class="exturl" data-url="aHR0cHM6Ly93d3cuYWxhcGkuY24v">https://www.alapi.cn/<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="获得Token密钥">获得Token密钥</h2>
<p><strong>接口管理</strong>，<strong>更新Token密钥</strong></p>
<p>​<img src="https://cdn.nlark.com/yuque/0/2024/png/12885947/1729509991587-6f6a2973-9959-4a75-87cb-943936032ff3.png" alt="">​</p>
<h1>生成</h1>
<p>复制密钥放到下面的网址中：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">https://v2.alapi.cn/api/zaobao?token=你的token密钥&amp;format=image</span><br></pre></td></tr></table></figure>
<p>API文档：<span class="exturl" data-url="aHR0cHM6Ly93d3cuYWxhcGkuY24vYXBpL3ZpZXcvOTM=">每日60秒早报-ALAPI<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="插入文章">插入文章</h2>
<p>在Markdown文档中加入：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![](<span class="link">https://v2.alapi.cn/api/zaobao?token=你的token密钥&amp;format=image</span>)</span><br></pre></td></tr></table></figure>
<h2 id="Html页面">Html页面</h2>
<p>在html页面中加入：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>全屏图片展示<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">body</span>, <span class="selector-tag">html</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.full-screen-image</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">object-fit</span>: cover; <span class="comment">/* 图片将覆盖整个容器 */</span></span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://v2.alapi.cn/api/zaobao?token=你的token密钥&amp;format=image&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;全屏图片&quot;</span> <span class="attr">class</span>=<span class="string">&quot;full-screen-image&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1>参考</h1>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuYW9tYW5oYW8udG9wL2FyY2hpdmVzLzMxNi8=">博客新增每日早报api，网站增加每日早报功能 - AomanHao的博客空间<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>笔记</category>
        <category>其他</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>Hexo</tag>
        <tag>新闻</tag>
        <tag>API</tag>
        <tag>Html单页</tag>
      </tags>
  </entry>
  <entry>
    <title>【转载】Hexo博客添加背景动态效果</title>
    <url>/2024/10/19/dc63ecb1142e/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="方法">方法</h2>
<p>Next 8.0.2 之后，Canvas_nest不再被原生支持。所以需要在<code>hexo/source/_data/</code>​下创建<code>footer.njk</code>​文件<br>
在文件中添加</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script color=<span class="string">&quot;0,0,255&quot;</span> opacity=<span class="string">&quot;0.5&quot;</span> zIndex=<span class="string">&quot;-1&quot;</span> count=<span class="string">&quot;99&quot;</span> src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/canvas-nest.js@1/dist/canvas-nest.js&quot;</span>&gt;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<span id="more"></span> 
<p>​并将其中的参数修改为自己想要的值。<br>
最后再在主题配置文件<code>_config.next.yml</code>​中，修改<code>custom_file_path</code>​，将<code>footer: source/_data/footer.njk</code>​的注释删除即可。</p>
<h2 id="原文地址">原文地址</h2>
<p><span class="exturl" data-url="aHR0cHM6Ly91cHdub3RoaW5nLmdpdGh1Yi5pby96aC1DTi80NGJmOGRlZi8jJUU2JUI3JUJCJUU1JThBJUEwJUU4JTgzJThDJUU2JTk5JUFGJUU1JThBJUE4JUU2JTgwJTgxJUU2JTk1JTg4JUU2JTlFJTlD">Hexo + NexT 深度个性化配置 (2020.1 更新) | UPWNothing's Playground<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>转载</category>
        <category>其他</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>Hexo</tag>
        <tag>Next</tag>
        <tag>动态背景</tag>
      </tags>
  </entry>
  <entry>
    <title>用npm升级Hexo版本</title>
    <url>/2024/10/19/b90e47c7e5a0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>使用npm命令简单快捷的升级Hexo，主题和插件的版本。</p>
<h2 id="注意：">注意：</h2>
<p>更新主题和插件，会覆盖修改的内容，提前备份。Next主题配置文件’_config.next.yml’最好放在博客根目录下。</p>
<span id="more"></span> 
<h2 id="npm镜像服务器更换">npm镜像服务器更换</h2>
<p>国内的镜像服务器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 镜像服务器</span><br><span class="line">npm config set registry https://registry.npmmirror.com</span><br><span class="line"></span><br><span class="line"># 更新npm</span><br><span class="line">npm install -g npm@latest</span><br></pre></td></tr></table></figure>
<h2 id="查看当前Hexo版本">查看当前Hexo版本</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo --version</span><br></pre></td></tr></table></figure>
<h2 id="安装npm-check和npm-upgrade">安装npm-check和npm-upgrade</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g npm-check</span><br><span class="line">npm install -g npm-upgrade</span><br><span class="line">npm-check</span><br></pre></td></tr></table></figure>
<h2 id="升级Hexo">升级Hexo</h2>
<p>首先进入Hexo的主目录，执行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 更新package.json</span><br><span class="line">npm upgrade</span><br><span class="line"></span><br><span class="line">npm update</span><br></pre></td></tr></table></figure>
<h2 id="参考">参考</h2>
<ol>
<li class="lvl-3">
<p><span class="exturl" data-url="aHR0cHM6Ly91cHdub3RoaW5nLmdpdGh1Yi5pby96aC1DTi8zYmEzYmU5Lz9oaWdobGlnaHQ9aGV4bw==">Hexo版本升级指南 | UPWNothing's Playground<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li class="lvl-3">
<p><span class="exturl" data-url="aHR0cHM6Ly9ucG1taXJyb3IuY29tLw==">npmmirror 镜像站<i class="fa fa-external-link-alt"></i></span></p>
</li>
</ol>
]]></content>
      <categories>
        <category>笔记</category>
        <category>学习</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>Hexo</tag>
        <tag>Next</tag>
        <tag>笔记</tag>
        <tag>升级</tag>
      </tags>
  </entry>
  <entry>
    <title>对博客内文章进行分类(categories)和添加标签(tags)</title>
    <url>/2024/10/19/4625d0b7ed27/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>之前在博文没有对分类和标签进行过有序整理，基本上想到什么，就随便写一下。随着博文数量的增多，这种随意性会带来很多麻烦。因此在这里对其定义一下，以整理好当前及之后的博文。</p>
<span id="more"></span> 
<h2 id="原则">原则</h2>
<table>
<thead>
<tr>
<th style="text-align:left"></th>
<th style="text-align:left"><strong><font style="color:rgb(0, 0, 0);">分类</font></strong></th>
<th style="text-align:left"><strong><font style="color:rgb(0, 0, 0);">标签</font></strong></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><font style="color:rgb(0, 0, 0);">排他性</font></td>
<td style="text-align:left"><font style="color:rgb(0, 0, 0);">是</font></td>
<td style="text-align:left"><font style="color:rgb(0, 0, 0);">否</font></td>
</tr>
<tr>
<td style="text-align:left"><font style="color:rgb(0, 0, 0);">关系</font></td>
<td style="text-align:left"><font style="color:rgb(0, 0, 0);">从属</font></td>
<td style="text-align:left"><font style="color:rgb(0, 0, 0);">相关(关联）</font></td>
</tr>
<tr>
<td style="text-align:left"><font style="color:rgb(0, 0, 0);">创建</font></td>
<td style="text-align:left"><font style="color:rgb(0, 0, 0);">事先规划</font></td>
<td style="text-align:left"><font style="color:rgb(0, 0, 0);">随时增加</font></td>
</tr>
<tr>
<td style="text-align:left"><font style="color:rgb(0, 0, 0);">代价</font></td>
<td style="text-align:left"><font style="color:rgb(0, 0, 0);">高</font></td>
<td style="text-align:left"><font style="color:rgb(0, 0, 0);">低</font></td>
</tr>
</tbody>
</table>
<h2 id="分类-categories">分类(categories)</h2>
<p>文章<strong>类型</strong>或者文章<strong>涉及的主题</strong>。</p>
<ol>
<li class="lvl-3">
<p><strong>定义</strong>：</p>
<ul class="lvl-2">
<li class="lvl-6">分类是对内容进行分组的一种更为结构化的方式。</li>
<li class="lvl-6">它们通常按照预定义的层次结构进行排列。</li>
</ul>
</li>
<li class="lvl-3">
<p><strong>用途</strong>：</p>
<ul class="lvl-2">
<li class="lvl-6">用于将相关内容聚合在一起，形成有逻辑的导航路径。</li>
<li class="lvl-6">有助于用户理解网站的整体结构和内容布局。</li>
</ul>
</li>
<li class="lvl-3">
<p><strong>特点</strong>：</p>
<ul class="lvl-2">
<li class="lvl-6">通常是<font style="color:#DF2A3F;">有限的且固定的</font>数量。</li>
<li class="lvl-6">具有明确的<font style="color:#DF2A3F;">层级关系</font>，例如大类下面有小类。</li>
</ul>
</li>
<li class="lvl-3">
<p><strong>示例</strong>：</p>
<ul class="lvl-2">
<li class="lvl-6">在电商网站上，商品可能会被分为“电子产品”、“服装”、“家居用品”等大类。</li>
</ul>
</li>
</ol>
<h2 id="标签-tags">标签(tags)</h2>
<p>文章<strong>内容的关键词</strong>。</p>
<ol>
<li class="lvl-3">
<p><strong>定义</strong>：</p>
<ul class="lvl-2">
<li class="lvl-6">标签是对内容进行描述的小型关键字或短语。</li>
<li class="lvl-6">它们通常是自由形式的，可以根据内容的特定方面或主题进行标记。</li>
</ul>
</li>
<li class="lvl-3">
<p><strong>用途</strong>：</p>
<ul class="lvl-2">
<li class="lvl-6">用于帮助用户快速找到相关内容。</li>
<li class="lvl-6">可以应用于单个项目或多个项目，支持交叉引用。</li>
</ul>
</li>
<li class="lvl-3">
<p><strong>特点</strong>：</p>
<ul class="lvl-2">
<li class="lvl-6">灵活性高，数量不限。</li>
<li class="lvl-6">不需要严格的层次结构。</li>
</ul>
</li>
<li class="lvl-3">
<p><strong>示例</strong>：</p>
<ul class="lvl-2">
<li class="lvl-6">在一篇文章中可能会使用“科技”、“创新”、“人工智能”等标签。</li>
</ul>
</li>
</ol>
<p>在实际应用中，许多网站会同时使用标签和分类来优化内容的组织和检索。例如，一篇文章可能会被归类到一个主分类下，同时附带多个相关的标签，这样既保留了整体的结构性，又能提供细致的搜索选项。</p>
<h2 id="我的分类">我的分类</h2>
<p><img src="https://cdn.nlark.com/yuque/0/2024/png/12885947/1729274560504-9a417359-1ecc-43af-8894-4ffdf6aab2c6.png" alt=""></p>
<h2 id="参考">参考</h2>
<ol>
<li class="lvl-3">
<p><span class="exturl" data-url="aHR0cHM6Ly9ub29kbGVmaWdodGVyLmNvbS9wb3N0cy8yODM2Lw==">个人博客的分类划分 (noodlefighter.com)<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li class="lvl-3">
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vaG9sYnJvb2svYXJjaGl2ZS8yMDEyLzExLzA1LzI3NTUyNjguaHRtbA==">如何规划blog的标签（tag）和分类 - 心内求法 - 博客园 (cnblogs.com)<i class="fa fa-external-link-alt"></i></span></p>
</li>
</ol>
]]></content>
      <categories>
        <category>原创</category>
        <category>其他</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>Hexo</tag>
        <tag>分类</tag>
        <tag>标签</tag>
      </tags>
  </entry>
  <entry>
    <title>平时使用的字体讲究还挺多</title>
    <url>/2024/10/19/391b7a4df277/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>字体，作为文字的外观形式，具有特定的风格和设计。在计算机领域中，字体是指由一系列具有相同风格或主题的字符（如字母、数字、标点等）所组成的集合，这些字符通常被设计为一个特定的尺寸，但也可以进行缩放以适应不同的显示或打印需求。</p>
<span id="more"></span> 
<p>从设计角度看，字体不仅仅是文字的外观，更是文化和艺术的一种表现形式。每一种字体都反映了其设计者的审美观念、创作意图和时代背景。字体还承载着信息的传递功能。不同的字体风格可以传达不同的情感和信息。此外，字体的大小、颜色、行距等排版因素也会影响信息的可读性和视觉效果。在排版和设计中，选择合适的字体至关重要。不同的字体适用于不同的场景和目的。例如，在正式的文档或报告中，通常使用简洁、易读的字体，以确保信息的清晰传递；而在广告或宣传材料中，则可能使用更具个性和吸引力的字体来吸引观众的注意力。</p>
<p><strong>Microsoft office Word 中的字体列表</strong></p>
<p><img src="https://cdn.nlark.com/yuque/0/2024/png/12885947/1729266033771-31be0017-4aae-4ffa-815a-4ab89aa08d27.png" alt=""></p>
<hr>
<h2 id="font-style-color-0f4761-字体的种类-font"><font style="color:#0f4761;">字体的种类</font></h2>
<p>分为6种</p>
<h4 id="font-style-color-0f4761-1-font-font-style-color-0f4761-serif-font-font-style-color-0f4761-（衬线类）-font"><em><font style="color:#0f4761;">1. </font><strong><strong><font style="color:#0f4761;">serif </font></strong></strong><strong><font style="color:#0f4761;">（衬线类）</font></strong></em></h4>
<p>字母末段带有装饰线的是serif。</p>
<p>左边的就是衬线类字体Georgia，右边的就是无衬线类字体Verdana</p>
<p>&quot;一般来说，serif比较庄重，sans-serif相对活泼。因为serif带有衬线，在小字号下，不如sans-serif清晰，所以serif字体可以用作标题，sans-serif字体可以用作正文。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">font-family:</span> <span class="string">Garamond,</span> <span class="string">serif;</span></span><br><span class="line"><span class="attr">font-family:</span> <span class="string">Georgia,</span> <span class="string">serif;</span></span><br><span class="line"><span class="attr">font-family:</span> <span class="string">&#x27;Times New Roman&#x27;</span><span class="string">,</span> <span class="string">Times,</span> <span class="string">serif;</span></span><br><span class="line"><span class="attr">font-family:</span> <span class="string">&#x27;Bookman Old Style&#x27;</span><span class="string">,</span> <span class="string">serif;</span></span><br><span class="line"><span class="attr">font-family:</span> <span class="string">&#x27;Palatino Linotype&#x27;</span><span class="string">,</span> <span class="string">&#x27;Book Antiqua&#x27;</span><span class="string">,</span> <span class="string">Palatino,</span> <span class="string">serif;</span></span><br></pre></td></tr></table></figure>
<h4 id="font-style-color-0f4761-2-font-font-style-color-0f4761-sans-serif-font-font-style-color-0f4761-（无衬线类）-font"><em><font style="color:#0f4761;">2. </font><strong><strong><font style="color:#0f4761;">sans-serif</font></strong></strong><strong><font style="color:#0f4761;">（无衬线类）</font></strong></em></h4>
<p>字母末段无装饰线的就是sans-serif。</p>
<p><strong>1. Verdana</strong></p>
<p>Verdana几乎在所有平台上都预装了，所以是sans-serif字体的第一选择。它的特点就是字母间距比较宽，字母本身的宽度也比较大，所以比较容易阅读。</p>
<p><strong>2. Trebuchet</strong></p>
<p>Trebuchet的特点也是宽度大，形状清晰。</p>
<p><strong>3. Helvetica</strong></p>
<p>Helvetica的特点是小写字母比较大。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">font-family:</span> <span class="string">Arial,</span> <span class="string">Helvetica,</span> <span class="string">sans-serif;</span></span><br><span class="line"><span class="attr">font-family:</span> <span class="string">&#x27;Arial Black&#x27;</span><span class="string">,</span> <span class="string">Gadget,</span> <span class="string">sans-serif;</span></span><br><span class="line"><span class="attr">font-family:</span> <span class="string">Impact,</span> <span class="string">Charcoal,</span> <span class="string">sans-serif;</span></span><br><span class="line"><span class="attr">font-family:</span> <span class="string">&#x27;Lucida Sans Unicode&#x27;</span><span class="string">,</span> <span class="string">&#x27;Lucida Grande&#x27;</span><span class="string">,</span> <span class="string">sans-serif;</span></span><br><span class="line"><span class="attr">font-family:</span> <span class="string">&#x27;MS Sans Serif&#x27;</span><span class="string">,</span> <span class="string">Geneva,</span> <span class="string">sans-serif;</span></span><br><span class="line"><span class="attr">font-family:</span> <span class="string">&#x27;MS Serif&#x27;</span><span class="string">,</span> <span class="string">&#x27;New York&#x27;</span><span class="string">,</span> <span class="string">sans-serif;</span></span><br><span class="line"><span class="attr">font-family:</span> <span class="string">Symbol,</span> <span class="string">sans-serif;</span></span><br><span class="line"><span class="attr">font-family:</span> <span class="string">Tahoma,</span> <span class="string">Geneva,</span> <span class="string">sans-serif;</span></span><br><span class="line"><span class="attr">font-family:</span> <span class="string">&#x27;Trebuchet MS&#x27;</span><span class="string">,</span> <span class="string">Helvetica,</span> <span class="string">sans-serif;</span></span><br><span class="line"><span class="attr">font-family:</span> <span class="string">Verdana,</span> <span class="string">Geneva,</span> <span class="string">sans-serif;</span></span><br><span class="line"><span class="attr">font-family:</span> <span class="string">Webdings,</span> <span class="string">sans-serif;</span></span><br><span class="line"><span class="attr">font-family:</span> <span class="string">Wingdings,</span> <span class="string">&#x27;Zapf Dingbats&#x27;</span><span class="string">,</span> <span class="string">sans-serif;</span></span><br></pre></td></tr></table></figure>
<h4 id="font-style-color-0f4761-3-font-font-style-color-0f4761-Handwritten-Fonts-font-font-style-color-0f4761-（手写类字体）-font"><em><font style="color:#0f4761;">3. </font><strong><strong><font style="color:#0f4761;">Handwritten Fonts</font></strong></strong><strong><font style="color:#0f4761;">（手写类字体）</font></strong></em></h4>
<p>模仿人的笔迹，一般只在体现某种艺术效果时使用。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">font-family:</span> <span class="string">&#x27;Comic Sans MS&#x27;</span><span class="string">,</span> <span class="string">cursive;</span></span><br></pre></td></tr></table></figure>
<h4 id="font-style-color-0f4761-4-font-font-style-color-0f4761-Fixed-width-Fonts-font-font-style-color-0f4761-（等宽字体）-font"><em><font style="color:#0f4761;">4. </font><strong><strong><font style="color:#0f4761;">Fixed-width Fonts</font></strong></strong><strong><font style="color:#0f4761;">（等宽字体）</font></strong></em></h4>
<p>每个字母的宽度相等，一般用来模拟命令行输入和打字机效果，现在多用于展现程序源码。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">font-family:</span> <span class="string">Courier,</span> <span class="string">monospace;</span></span><br><span class="line"><span class="attr">font-family:</span> <span class="string">&#x27;Courier New&#x27;</span><span class="string">,</span> <span class="string">Courier,</span> <span class="string">monospace;</span></span><br><span class="line"><span class="attr">font-family:</span> <span class="string">&#x27;Lucida Console&#x27;</span><span class="string">,</span> <span class="string">Monaco,</span> <span class="string">monospace;</span></span><br></pre></td></tr></table></figure>
<h4 id="font-style-color-0f4761-5-font-font-style-color-0f4761-Novelty-Fonts-font-font-style-color-0f4761-（花式字体）-font"><em><font style="color:#0f4761;">5. </font><strong><strong><font style="color:#0f4761;">Novelty Fonts</font></strong></strong><strong><font style="color:#0f4761;">（花式字体）</font></strong></em></h4>
<p>追求装饰性，20世纪之前的印刷品都用这类字体。</p>
<p><img src="https://cdn.nlark.com/yuque/0/2024/png/12885947/1729265739797-45b8755a-e97a-4967-a409-d3db2d5068ce.png" alt=""></p>
<h4 id="font-style-color-0f4761-6-font-font-style-color-0f4761-Dingbat-Fonts-font-font-style-color-0f4761-（符号字体）-font"><em><font style="color:#0f4761;">6. </font><strong><strong><font style="color:#0f4761;">Dingbat Fonts</font></strong></strong><strong><font style="color:#0f4761;">（符号字体）</font></strong></em></h4>
<p>这类字体不是字母，而是输出各种各样的符号。</p>
<p><img src="https://cdn.nlark.com/yuque/0/2024/png/12885947/1729265676563-2e86558e-6051-474d-a0f0-1dcdae728bc7.png" alt=""></p>
<hr>
<h2 id="font-style-color-0f4761-互联网安全字体（-font-font-style-color-0f4761-web-safe-fonts-font-font-style-color-0f4761-）-font"><strong><font style="color:#0f4761;">互联网安全字体（</font><strong><strong><font style="color:#0f4761;">web safe fonts</font></strong></strong><font style="color:#0f4761;">）</font></strong></h2>
<p>所有平台都预装的字体，被称为&quot;安全字体&quot;，因为它可以保证所有用户的视觉效果是一样的。以下九种字体就是&quot;安全字体&quot;：Arial、Arial Black、Comic Sans MS、Courier New、Georgia、Impact、Times New Roman、Trebuchet MS和Verdana。</p>
<hr>
<h2 id="font-style-color-0f4761-学术与字体-font"><font style="color:#0f4761;">学术与字体</font></h2>
<p>一般来说，顶级学术期刊在正式发表时会采用专业且易读的字体，如Times New Roman、Calibri或Arial等。Nature期刊有自己设计的Harding字体，用于正文和标题等。同时，其子刊的标题和图题可能会使用不同的字体，如Whitney Book等。</p>
<p>以下是排名前10的学术期刊及其所使用的字体：</p>
<ol>
<li class="lvl-3">
<p><strong>Nature</strong></p>
<ul class="lvl-2">
<li class="lvl-6">字体：Anita Harding</li>
</ul>
</li>
<li class="lvl-3">
<p><strong>New England Journal of Medicine (NEJM)</strong></p>
<ul class="lvl-2">
<li class="lvl-6">字体：Georgia</li>
</ul>
</li>
<li class="lvl-3">
<p><strong>Science</strong></p>
<ul class="lvl-2">
<li class="lvl-6">字体：Arial 或 Helvetica</li>
</ul>
</li>
<li class="lvl-3">
<p><strong>Cell</strong></p>
<ul class="lvl-2">
<li class="lvl-6">字体：Helvetica 或 Arial</li>
</ul>
</li>
<li class="lvl-3">
<p><strong>Nature Reviews Molecular Cell Biology</strong></p>
<ul class="lvl-2">
<li class="lvl-6">字体：Times New Roman</li>
</ul>
</li>
<li class="lvl-3">
<p><strong>Nature Reviews Cancer</strong></p>
<ul class="lvl-2">
<li class="lvl-6">字体：Times New Roman</li>
</ul>
</li>
<li class="lvl-3">
<p><strong>Nature Reviews Drug Discovery</strong></p>
<ul class="lvl-2">
<li class="lvl-6">字体：Times New Roman 和 Arial</li>
</ul>
</li>
<li class="lvl-3">
<p><strong>Quarterly Journal of Economics</strong></p>
<ul class="lvl-2">
<li class="lvl-6">字体：Times New Roman（正文字体），Symbol（用于希腊和特殊字符）</li>
</ul>
</li>
<li class="lvl-3">
<p><strong>Nature Reviews Materials</strong></p>
<ul class="lvl-2">
<li class="lvl-6">字体：未明确提及，建议查看期刊的官方指南</li>
</ul>
</li>
<li class="lvl-4">
<p><strong>Nature Reviews Clinical Oncology</strong></p>
<ul class="lvl-2">
<li class="lvl-6">字体：未明确提及，建议查看期刊的投稿指南</li>
</ul>
</li>
</ol>
<p>‍</p>
<h2 id="font-style-color-0f4761-毕业论文常用的字体-font"><font style="color:#0f4761;">毕业论文常用的字体</font></h2>
<ol>
<li class="lvl-3">
<p>Times New Roman</p>
<ol>
<li class="lvl-7">常用于正文，因为它易于阅读，并且在打印时看起来清晰。</li>
<li class="lvl-7">字号：通常使用12号字体。</li>
</ol>
</li>
<li class="lvl-3">
<p>Arial</p>
<ol>
<li class="lvl-7">另一个常用的选择，特别是当论文需要在线提交或电子阅读时。</li>
<li class="lvl-7">字号：通常使用11或12号字体。</li>
</ol>
</li>
<li class="lvl-3">
<p>Helvetica</p>
<ol>
<li class="lvl-7">在一些设计或艺术相关的论文中可能会用到，因为它具有现代感。</li>
</ol>
</li>
</ol>
<hr>
<h2 id="font-style-color-0f4761-简历如何选字体选择-font"><font style="color:#0f4761;">简历如何选字体选择</font></h2>
<p>你的<strong>字体必须在大小或格式上易于阅读</strong></p>
<h3 id="font-style-color-0f4761-撰写简历推荐字体-font-font-style-color-0f4761-–-font-font-style-color-0f4761-英文简历-font"><font style="color:#0f4761;">撰写简历推荐字体</font><font style="color:#0f4761;">–</font><font style="color:#0f4761;">英文简历</font></h3>
<ul class="lvl-0">
<li class="lvl-2">
<p><strong>Arial</strong> 线条简洁，易于阅读</p>
</li>
<li class="lvl-2">
<p><strong>Calibri</strong> 安全、易读性高的字体</p>
</li>
<li class="lvl-2">
<p><strong>Cambria</strong> 同样安全可靠</p>
</li>
<li class="lvl-2">
<p><strong>Didot</strong> 适合用在简历标题上</p>
</li>
<li class="lvl-2">
<p><strong>Garamond</strong> 在印刷品和屏幕中看起来很精致</p>
</li>
<li class="lvl-2">
<p><strong>Georgia</strong> 具有在小字下仍能清晰辨识的特性，可读性十分优良</p>
</li>
<li class="lvl-2">
<p><strong>Helvetica</strong> “专业、轻松、真诚”并且“商业性强”</p>
</li>
<li class="lvl-2">
<p><strong>Times New Roman</strong> 干净、易于阅读</p>
</li>
<li class="lvl-2">
<p><strong>Trebuchet MS</strong> 有质感，且更具现代风格</p>
</li>
</ul>
<hr>
<h2 id="font-style-color-0f4761-参考-font"><font style="color:#0f4761;">参考</font></h2>
<ol>
<li class="lvl-3">
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cucnVhbnlpZmVuZy5jb20vYmxvZy8yMDA4LzA2L2hlbHZldGljYV81MHRoX2Fubml2ZXJzYXJ5Lmh0bWw=">Helvetica 字体的      50 年 - 阮一峰的网络日志 (ruanyifeng.com)<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li class="lvl-3">
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cucnVhbnlpZmVuZy5jb20vYmxvZy8yMDA4LzA2L3R5cG9ncmFwaHlfbm90ZXMuaHRtbA==">字体笔记 - 阮一峰的网络日志      (ruanyifeng.com)<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li class="lvl-3">
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuc2l0ZXBvaW50LmNvbS9wcmluY2lwbGVzLWJlYXV0aWZ1bC10eXBvZ3JhcGh5Lw==">The      Principles of Beautiful Typography — SitePoint<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li class="lvl-3">
<p><span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zODAxMDc2MQ==">英文简历如何选择字体？      - 知乎 (zhihu.com)<i class="fa fa-external-link-alt"></i></span></p>
</li>
</ol>
]]></content>
      <categories>
        <category>笔记</category>
        <category>学习</category>
      </categories>
      <tags>
        <tag>字体</tag>
        <tag>种类</tag>
        <tag>易读</tag>
        <tag>简历</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客Next主题添加algolia搜索</title>
    <url>/2024/10/18/c5cd3b3780fc/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>为Hexo博客系统中的Next主题添加Algolia搜索功能</p>
<span id="more"></span> 
<h2 id="注册Sign-in-Algolia">注册<span class="exturl" data-url="aHR0cHM6Ly9kYXNoYm9hcmQuYWxnb2xpYS5jb20vdXNlcnMvc2lnbl9pbg==">Sign in | Algolia<i class="fa fa-external-link-alt"></i></span></h2>
<p>​<img src="https://cdn.nlark.com/yuque/0/2024/png/12885947/1729186832132-e842bb62-33ef-4af4-816a-6ff74a4e093e.png" alt="">​</p>
<p>新建一个Index，这里创建了一个名为leafminer-blog的索引。</p>
<p>​<img src="https://cdn.nlark.com/yuque/0/2024/png/12885947/1729189311007-77eb9bbf-d16e-447f-9277-2e6a72d826c2.png" alt="">​</p>
<h2 id="安装hexo-algolia">安装hexo-algolia</h2>
<p>hexo-algolia 是一个由社区提供的 Hexo 插件。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-algolia</span><br></pre></td></tr></table></figure>
<p>配置文件放在根目录下的<code>_config.yml</code>​中，而不是主题文件夹下的<code>_config.yml</code>​, 否则博客的搜索是搜索不到任何内容的，我们需要通过 <code>Hexo Aloglia</code>​ 获取站点数据。</p>
<p>Hexo博客根目录下的<code>_config.yml</code>​中，配置如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">algolia:</span></span><br><span class="line">  <span class="attr">applicationID:</span> <span class="string">&#x27;applicationID&#x27;</span> <span class="comment">#Algolia Application ID</span></span><br><span class="line">  <span class="attr">apiKey:</span> <span class="string">&#x27;apiKey&#x27;</span> <span class="comment">#A Search-Only API key</span></span><br><span class="line">  <span class="attr">indexName:</span> <span class="string">&#x27;...&#x27;</span> <span class="comment">#The name of the Algolia index to use</span></span><br></pre></td></tr></table></figure>
<p>​<img src="https://cdn.nlark.com/yuque/0/2024/png/12885947/1729189864115-05ef9ed2-2109-404e-9873-944be5d7d9ba.png" alt="">​</p>
<h2 id="Hexo-Aloglia获取站点数据">Hexo Aloglia获取站点数据</h2>
<p>必须提供一个名为 <code>HEXO_ALGOLIA_INDEXING_KEY</code>​ 的环境变量作为单独的 API 密钥。创建它并赋予其以下有限的写访问权限：添加记录、删除记录、列出索引、删除索引。</p>
<p>​<code>HEXO_ALGOLIA_INDEXING_KEY=[Write API Key]</code>​</p>
<p>​<img src="https://cdn.nlark.com/yuque/0/2024/png/12885947/1729189817603-52e8f420-c000-440c-a885-3fd647366d62.png" alt="">​</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> HEXO_ALGOLIA_INDEXING_KEY=</span><br></pre></td></tr></table></figure>
<p>​<img src="https://cdn.nlark.com/yuque/0/2024/png/12885947/1729190141176-9d66d152-ee3e-483c-8634-e9fb0064ba57.png" alt="">​</p>
<p>使用插件提供的命令来推送你的内容到Algolia。在 <code>hexo</code>​站点根目录下执行<code>hexo algolia</code>​ 来搜集数据更新到我们刚创建的 <code>Index</code>​ 中,我们可以在网页中看到所有的数据，如下图：</p>
<p>​<img src="https://cdn.nlark.com/yuque/0/2024/png/12885947/1729190857880-bf3194d8-0f7a-4db7-a81a-106321db1147.png" alt="">​</p>
<h2 id="在Next主题中启用搜索功能">在Next主题中启用搜索功能</h2>
<p>确保在Next主题的配置文件中启用了Algolia搜索功能。这通常涉及到在<code>theme_config.yml</code>​中设置<code>algolia_search.enable</code>​为<code>true</code>​。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在 NexT 主题的配置文件里</span></span><br><span class="line"><span class="attr">algolia_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hits:</span></span><br><span class="line">    <span class="attr">per_page:</span> <span class="number">10</span></span><br></pre></td></tr></table></figure>
<h2 id="重新部署">重新部署</h2>
<p>执行<code>hexo clean &amp;&amp; hexo g -d</code>​重新部署，部署完成后再次访问，即可看到搜索功能已经配置完成。</p>
<h2 id="参考">参考</h2>
<ol>
<li class="lvl-3">
<p><span class="exturl" data-url="aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9kZXZlbG9wZXIvYXJ0aWNsZS8yMzQxNzU1">hexo博客添加algolia搜索-腾讯云开发者社区-腾讯云 (tencent.com)<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li class="lvl-3">
<p><span class="exturl" data-url="aHR0cHM6Ly9ucG1qcy5jb20vaGV4by1hbGdvbGlhI2FwaS1rZXk=">https://npmjs.com/hexo-algolia#api-key<i class="fa fa-external-link-alt"></i></span></p>
</li>
</ol>
]]></content>
      <categories>
        <category>笔记</category>
        <category>其他</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>Hexo</tag>
        <tag>Next</tag>
        <tag>搜索</tag>
        <tag>笔记</tag>
        <tag>algolia</tag>
      </tags>
  </entry>
  <entry>
    <title>【文献阅读】药食两用的枸杞属</title>
    <url>/2024/10/15/74a70a62f3b4/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>枸杞(<em>Lycium barbarum</em> and <em>Lycium chinense</em>)作为国内的保健品，深受人们喜爱。它既是中药，也是饮食中常用的调料。很多人也将枸杞饮品，当做养生职务。尽管它如此受欢迎，但是现有研究仍缺少对枸杞完整而严格的价值评估。</p>
<span id="more"></span> 
<hr>
<h4 id="研究目的">研究目的</h4>
<ul class="lvl-0">
<li class="lvl-2">
<p><input type="checkbox" id="checkbox0" checked="true"><label for="checkbox0">使用了哪些品种，以及枸杞的用途在空间和时间上是如何发展的。</label></p>
</li>
<li class="lvl-2">
<p><input type="checkbox" id="checkbox1" checked="true"><label for="checkbox1">不同文化背景的地区之间的用途如何不同。</label></p>
</li>
<li class="lvl-2">
<p><input type="checkbox" id="checkbox2" checked="true"><label for="checkbox2">传统和当前的治疗和预防性健康主张与药理学发现之间的关系。</label></p>
</li>
</ul>
<h4 id="研究方法">研究方法</h4>
<p>从植物区系、分类学、植物学和民族植物学数据库、研究文章、近2000年历史中草药的最新版本以及药典中检索信息。</p>
<h4 id="研究结果">研究结果</h4>
<p>在总共97个物种中，有31个在世界范围内被用作食物和/或药物。通常使用。虽然85%的枸杞品种出现在美洲和非洲，但26%的枸杞被使用，但14种枸杞中有9种在欧亚大陆。在中国，枸杞属有七种两变种，其中四种已被不同民族使用。只有L. barbarum和L. chinense被转化为全球贸易商品。在中国，基于“名字”枸杞”, 它们的使用可以追溯到过去两千年。枸杞果实用于抗衰老、改善视力和营养，早在公元前500年就有记载。最近的发现解释了传统用途的药理学基础。特别是枸杞多糖、玉米黄质双棕榈酸酯、维生素、甜菜碱和混合提取物被报道具有抗衰老、改善视力和抗疲劳的作用。</p>
<h4 id="结论">结论</h4>
<p>历史、民族植物学、植物学、植物化学和药理学数据的整合使人们能够详细了解枸杞及其更广泛的潜力。它强调，到目前为止，人们只关注了两个物种，该属植物可能会产生多种不同性质的其他产品。</p>
<hr>
<p>参考资料：</p>
<p>Ruyu, Yao, Michael, et al. The genus Lycium as food and medicine: A botanical, ethnobotanical and historical review.[J]. Journal of ethnopharmacology, 2018.</p>
]]></content>
      <categories>
        <category>笔记</category>
        <category>科研</category>
      </categories>
      <tags>
        <tag>生物</tag>
        <tag>中药</tag>
        <tag>枸杞</tag>
        <tag>评估</tag>
        <tag>药理</tag>
      </tags>
  </entry>
  <entry>
    <title>“病”的来历——病是个体与环境的冲突</title>
    <url>/2024/10/10/ec06eeb0adff/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><font style="color:rgb(37, 66, 100);">对于“疾病”，新华字典和汉语词典的解释有：</font></p>
<blockquote>
<p><strong><font style="color:rgb(37, 66, 100);">疾</font></strong><font style="color:rgb(37, 66, 100);">： 病，身体不舒适</font></p>
<p><strong><font style="color:rgb(37, 66, 100);">病</font></strong><font style="color:rgb(37, 66, 100);">：生物体发生不健康的现象</font></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9kaWN0LmJhaWR1LmNvbS9zP3dkPSVFNyU5NiVCRSVFNyU5NyU4NSZwdHlwZT16aWNp">疾病  [ jí bìng ]<i class="fa fa-external-link-alt"></i></span>：<font style="color:rgb(51, 51, 51);">病的总称</font></p>
</blockquote>
<span id="more"></span> 
<hr>
<h4 id="先说说那些心理上的“病”，它们也符合字典对疾病的解释——不舒适">先说说那些心理上的“病”，它们也符合字典对疾病的解释——不舒适</h4>
<p>《好妈妈胜过好老师》有一节描述“多动症”，提到多动症不是一种病，更像是给人的“正常行为现象”创造出来的。那些注意力不集中，坐不住的儿童，往往会被“诊断”为多动症。这样去看很多病的产生，是先定下了“果”，之后去凑“因”。这种情况下，往往不是因产生了果，而是果产生的因，所谓的因果倒置。心理上的疾病，真的存在么？我想是存在的！因为那种不舒适每个人都会有，或在不同时间、不同地点，与不同的人相处。</p>
<p>很多病的由来是由一个权威人定义的，而非客观的依据定义的。权威的“正常人”不容忍周围与自己格格不入的异常，不想去理解他们想不通的行为，就会将那个异常定义为“病”。这让我又想到最近看的电影《刺猬》，两个主角——<font style="color:rgb(113, 119, 125);">“精神病人”王战团和自闭口吃少年周正</font>。他们的病也像是多动症的来历意义在来历一样，一种不被周围人认可状态。他们不是主流，他们不迎合主流的设定，在周围人看来那就是病。如果说电影中的两个人是一种不融于当前环境的“病”，我们站在观察者的角度去看主角周围的人，发现这些周围人也处于有“病”的状态。被主流排斥在外的，被定义成了病。</p>
<blockquote>
<p><font style="color:rgb(17, 17, 17);">我从荒野来，</font></p>
<p><font style="color:rgb(17, 17, 17);">要到大海去，</font></p>
<p><font style="color:rgb(17, 17, 17);">远方的汽笛已经响起，</font></p>
<p><font style="color:rgb(17, 17, 17);">生活却拦住了我的去路。</font></p>
<p><font style="color:rgb(17, 17, 17);">她赠予我故事，</font></p>
<p><font style="color:rgb(17, 17, 17);">我为她写诗。</font></p>
<p><font style="color:rgb(17, 17, 17);">–《刺猬-情诗》</font></p>
</blockquote>
<p>正如《天才在左疯子在右》这本书描述的精神病人的“世界”，他们的世界观、人生观和价值观，不同于主流，所以他们是病人。大环境下的疯子，他们自己的观点往往“疯狂”而且“天才”。他们也有自己的逻辑链，在自己的世界中融洽得很。如果你放弃主流观念，你会很认同他们，因为他们的观念在一定角度上也是合理的。王战团不就是这样么，被主流卡住的人。</p>
<p>如果我们周围的人都一样，也就不存在所谓的病了吧，即便有些客观定义下的病。我们想脱离不舒适的氛围，在没有能力改变环境的条件下，会让自己去迎合环境获得舒适感。有能力改变周围环境的人，能够从心理和认知上摆脱不舒适，往往导致与他格格不入的周围人处于不舒适状态，这些周围人也就有了“病”。这样的病或大或小，或长或短，环境在变，那么病也一直在变。有些时候是我们创造了“病”的环境，不同的环境不同的病。有主流的环境，少部分不容的人会病。没主流的环境呢？都是病人吧，对立的双方互不相容，大家都有病。</p>
<p>生而为人，想没有病真的好难啊！让人感觉心理上的病，多是主观的，不是客观的。就像精神病人，他们在自己的“世界”里大概也是舒适的，悲剧的是他们来错了世界，这个主流世界与他们的世界并不重合。这些疾病多来自于个体与周围的不和谐，不和谐了当然就不会舒适。</p>
<h4 id="再说说生理上的那些“病”，一种导致生物体不健康的现象。">再说说生理上的那些“病”，一种导致生物体不健康的现象。</h4>
<p>很多年前看过一本书《病者生存》，它对于病的描述，让我从另一个角度理解了一些生理上的病存在的意义。就比如高血压、高血糖在寒冷环境下能更好地存活，镰刀型贫血症让人在疟疾肆虐的地方生存下来。当然这适应都是有代价的，对于个体来说往往是不利的–寿命短，对于种群的延续则功不可没–保证繁衍。免疫力过度的红斑狼疮、过敏，是否也有一种适应的环境，这种环境需要极端强的免疫力才能存活。就好像所谓的心理疾病，生理疾病也和生存环境息息相关。生理疾病是一种体内环境的不稳定，也是一种个体与环境的不相容。</p>
<p>生理上有内环境，也有外环境。个体与环境交流的不畅，就会引发疾病。内环境的稳态，外环境的安全，才会远离不健康。</p>
<p><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/12885947/1728445408595-ba834bd3-96fc-4318-8989-56e0a5003211.jpeg" alt=""></p>
]]></content>
      <categories>
        <category>原创</category>
        <category>生活</category>
      </categories>
      <tags>
        <tag>疾病</tag>
        <tag>心理</tag>
        <tag>情诗</tag>
        <tag>生存</tag>
      </tags>
  </entry>
  <entry>
    <title>大模型读文献之腾讯元宝--深度阅读</title>
    <url>/2024/09/25/e2a7186bc189/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="font-style-color-rgba-0-0-0-0-9-简介-font"><font style="color:rgba(0, 0, 0, 0.9);">简介</font></h2>
<p><font style="color:rgba(0, 0, 0, 0.9);">腾讯元宝的深度阅读模式是一种创新的阅读方式，它利用人工智能技术，为用户提供了一种全新的长文阅读体验。这种模式不仅能够处理大量文本，还能生成图文并茂的内容，极大地提升了阅读效率和理解深度。</font></p>
<span id="more"></span> 
<h2 id="font-style-color-rgba-0-0-0-0-9-深度阅读模式的特点-font"><font style="color:rgba(0, 0, 0, 0.9);">深度阅读模式的特点</font></h2>
<blockquote>
<ul class="lvl-1">
<li class="lvl-2"><strong><font style="color:rgba(0, 0, 0, 0.9);">长文阅读支持</font></strong><font style="color:rgba(0, 0, 0, 0.9);">：深度阅读模式支持长达近50万字的专业文档，适用于学术研究、市场分析、财务报告等领域。</font></li>
<li class="lvl-2"><strong><font style="color:rgba(0, 0, 0, 0.9);">图文并茂的内容重塑</font></strong><font style="color:rgba(0, 0, 0, 0.9);">：通过多模态内容生成技术，深度阅读模式能够展示原始插图或通过算法生成的高级分析图表，使信息传达更加直观</font><strong><font style="color:rgb(0, 108, 69);"></font></strong><font style="color:rgba(0, 0, 0, 0.9);">。</font></li>
<li class="lvl-2"><strong><font style="color:rgba(0, 0, 0, 0.9);">智慧导航</font></strong><font style="color:rgba(0, 0, 0, 0.9);">：配备划词搜索和翻译功能，帮助用户无缝理解专业术语，特别适用于跨语言研究</font><strong><font style="color:rgb(0, 108, 69);"></font></strong><font style="color:rgba(0, 0, 0, 0.9);">。</font></li>
<li class="lvl-2"><strong><font style="color:rgba(0, 0, 0, 0.9);">专业图表的智能生成</font></strong><font style="color:rgba(0, 0, 0, 0.9);">：针对财报和研究报告，能够自动识别关键数据，生成杜邦分析图等专业图表，并结合内置的计算器功能确保数值的精准计算。</font></li>
</ul>
</blockquote>
<hr>
<h2 id="font-style-color-rgba-0-0-0-0-9-示例-font"><font style="color:rgba(0, 0, 0, 0.9);">示例</font></h2>
<ol>
<li class="lvl-3">
<p>打开元宝 (<span class="exturl" data-url="aHR0cHM6Ly95dWFuYmFvLnRlbmNlbnQuY29tLw==">https://yuanbao.tencent.com/<i class="fa fa-external-link-alt"></i></span>) ，需要登录使用。界面很简洁，点击输入框上面的“深度阅读”</p>
</li>
</ol>
<p><img src="https://cdn.nlark.com/yuque/0/2024/png/12885947/1727148366978-9197a9b6-3a07-49a5-b024-bc040c20e728.png" alt=""></p>
<p>弹出文件上传框，拖动pdf到上传框。</p>
<p><img src="https://cdn.nlark.com/yuque/0/2024/png/12885947/1727148779600-dc1262f2-bbc8-4f93-9ce1-95030e09ce71.png" alt=""></p>
<ol start="2">
<li class="lvl-3">
<p>阅读界面如下，可以看到总结、精度、翻译、脑图功能。还可以直接根据文献内容生成学术海报。所有生成结果均可下载。下载格式为图片和pdf，生成的pdf对公示显示不友好。</p>
</li>
</ol>
<p><img src="https://cdn.nlark.com/yuque/0/2024/png/12885947/1727149414741-c6bd376e-bfe1-486a-841e-e88a8095194d.png" alt=""></p>
<p><img src="https://cdn.nlark.com/yuque/0/2024/png/12885947/1727149297794-9f6db9eb-bf09-4031-b4b2-525bf64f81ca.png" alt=""></p>
<ol start="3">
<li class="lvl-3">
<p>文献阅读部分结果展示：</p>
</li>
</ol>
<p><img src="https://cdn.nlark.com/yuque/0/2024/png/12885947/1727149668025-30b36304-7464-4c88-b302-8f782e68c89c.png" alt=""><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/12885947/1727149709429-88f0498e-804d-4287-82ed-d80a96e7813e.jpeg" alt=""></p>
]]></content>
      <categories>
        <category>原创</category>
        <category>科研</category>
      </categories>
      <tags>
        <tag>阅读</tag>
        <tag>腾讯</tag>
        <tag>大模型</tag>
        <tag>元宝</tag>
      </tags>
  </entry>
  <entry>
    <title>蛋白互作网络PPI分析流程示例</title>
    <url>/2024/09/25/35832a441121/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><font style="color:rgb(25, 27, 31);">蛋白互作网络（PPI, Protein-Protein Interaction Networks）可以查看基因之间的联系，进而锁定关键基因。一般使用STRING数据库获取蛋白互作信息。</font></p>
<span id="more"></span> 
<p><font style="color:rgb(25, 27, 31);">STRING数据库：</font><span class="exturl" data-url="aHR0cHM6Ly9jbi5zdHJpbmctZGIub3JnL2NnaS9pbnB1dD9zZXNzaW9uSWQ9YmRiUXh1UjdWZjFJJmlucHV0X3BhZ2Vfc2hvd19zZWFyY2g9b24=">STRING: functional protein association networks (string-db.org)<i class="fa fa-external-link-alt"></i></span></p>
<p><img src="https://cdn.nlark.com/yuque/0/2024/png/12885947/1726236168597-fa4b7dc9-3e68-4f4a-a1c4-791d5b326152.png" alt=""></p>
<hr>
<h2 id="KnEId">数据准备</h2>
要分析蛋白的名称列表，例如：
<p><img src="https://cdn.nlark.com/yuque/0/2024/png/12885947/1726236540343-3aa2552f-62b4-43d7-be97-2fb54ca1847f.png" alt=""></p>
<h2 id="hdfCg">使用STRING数据库获取PPI结果</h2>
1. 选择Multiple proteins，将蛋白名称粘贴到List Of Names框中。我这里使用的是果蝇的相关蛋白，因此Organisms选择了Drosophila。点击search。
<p><img src="https://cdn.nlark.com/yuque/0/2024/png/12885947/1726236801356-1779aa35-2c61-4581-a206-4591430c849c.png" alt=""></p>
<ol start="2">
<li class="lvl-3">
<p>通过复选框选择对应的蛋白（默认选择的有时候不一定对），点击MAPPING可以下载当前查询到的蛋白信息，点击CONTINUE可以获得蛋白互作结果。</p>
</li>
</ol>
<p><img src="https://cdn.nlark.com/yuque/0/2024/png/12885947/1726237115167-5b3a04dd-d4c5-429f-958b-3ee7a9f2726b.png" alt=""></p>
<ol start="3">
<li class="lvl-3">
<p>蛋白互作网络图如下</p>
</li>
</ol>
<p><img src="https://cdn.nlark.com/yuque/0/2024/png/12885947/1726237331664-344fada0-da40-403b-9e2e-7a2d8fed7740.png" alt=""></p>
<ol start="4">
<li class="lvl-3">
<p>图例信息在Legend中</p>
</li>
</ol>
<p><img src="https://cdn.nlark.com/yuque/0/2024/png/12885947/1726237463565-20d7d1dc-04c3-43d7-8983-a7ccd38f8787.png" alt=""></p>
<ol start="5">
<li class="lvl-3">
<p>Settings中可以根据需要改变网络样式。</p>
</li>
</ol>
<p><img src="https://cdn.nlark.com/yuque/0/2024/png/12885947/1726237695058-0f548c7f-755c-4d4f-b363-cb0df29028c9.png" alt=""></p>
<ol start="6">
<li class="lvl-3">
<p>Exports可以将图片和蛋白互作信息导出。</p>
</li>
</ol>
<p><img src="https://cdn.nlark.com/yuque/0/2024/png/12885947/1726237789676-78fab9a7-f1da-4c25-8db2-71fc95e00c67.png" alt=""></p>
<ul class="lvl-0">
<li class="lvl-2">
<p>在网页界面，可以通过鼠标拖动改变蛋白分布。</p>
</li>
<li class="lvl-2">
<p>点击对应的蛋白节点能够查看蛋白结构信息。<img src="https://cdn.nlark.com/yuque/0/2024/png/12885947/1726238035654-78ea00d9-9ba6-4d7a-9f63-35502f62146e.png" alt=""></p>
</li>
<li class="lvl-2">
<p>点击连接线可以获得详细的连接数据<img src="https://cdn.nlark.com/yuque/0/2024/png/12885947/1726238149300-1600416f-39de-452f-98e8-cf1c2b172cdc.png" alt=""></p>
</li>
</ul>
<p><font style="color:rgb(26, 32, 41);">PPI（Protein-Protein Interaction，蛋白质-蛋白质相互作用）网络图是生物信息学中的一种图形表示，它展示了细胞内不同蛋白质之间的相互作用关系。</font></p>
<ul class="lvl-0">
<li class="lvl-2">
<p><strong><font style="color:rgb(26, 32, 41);">网络布局</font></strong><font style="color:rgb(26, 32, 41);">：</font></p>
<ul class="lvl-2">
<li class="lvl-6"><strong><font style="color:rgb(26, 32, 41);">节点（Node）</font></strong><font style="color:rgb(26, 32, 41);">：通常代表一个蛋白质。节点的大小可能表示蛋白质的度（与多少其他蛋白质相互作用）或者其他属性，如表达水平。</font></li>
<li class="lvl-6"><strong><font style="color:rgb(26, 32, 41);">边（Edge）</font></strong><font style="color:rgb(26, 32, 41);">：代表两个蛋白质之间的相互作用。边的粗细可能表示相互作用的强度或者置信度。</font></li>
</ul>
</li>
<li class="lvl-2">
<p><strong><font style="color:rgb(26, 32, 41);">节点属性</font></strong><font style="color:rgb(26, 32, 41);">：</font></p>
<ul class="lvl-2">
<li class="lvl-6"><strong><font style="color:rgb(26, 32, 41);">颜色</font></strong><font style="color:rgb(26, 32, 41);">：可以表示蛋白质的属性，如功能分类、亚细胞定位、是否为已知疾病相关蛋白等。</font></li>
<li class="lvl-6"><strong><font style="color:rgb(26, 32, 41);">形状</font></strong><font style="color:rgb(26, 32, 41);">：不同的形状可以代表不同的蛋白质属性，如是否为酶、受体或其他类型。</font></li>
</ul>
</li>
<li class="lvl-2">
<p><strong><font style="color:rgb(26, 32, 41);">网络特性</font></strong><font style="color:rgb(26, 32, 41);">：</font></p>
<ul class="lvl-2">
<li class="lvl-6"><strong><font style="color:rgb(26, 32, 41);">连通性</font></strong><font style="color:rgb(26, 32, 41);">：高连通性的节点通常是网络中的关键蛋白，它们的缺失可能导致网络功能的显著变化。</font></li>
<li class="lvl-6"><strong><font style="color:rgb(26, 32, 41);">模块性</font></strong><font style="color:rgb(26, 32, 41);">：网络中可能存在几个紧密连接的节点群，这些群被称为模块，可能代表特定的生物学过程。</font></li>
</ul>
</li>
<li class="lvl-2">
<p><strong><font style="color:rgb(26, 32, 41);">功能分析</font></strong><font style="color:rgb(26, 32, 41);">：</font></p>
<ul class="lvl-2">
<li class="lvl-6"><font style="color:rgb(26, 32, 41);">使用GO（Gene Ontology）注释或其他功能数据库，对网络中的蛋白质进行功能富集分析，以识别网络中的主要生物学功能。</font></li>
</ul>
</li>
<li class="lvl-2">
<p><strong><font style="color:rgb(26, 32, 41);">路径分析</font></strong><font style="color:rgb(26, 32, 41);">：</font></p>
<ul class="lvl-2">
<li class="lvl-6"><font style="color:rgb(26, 32, 41);">寻找网络中的关键路径，这些路径可能代表信号传导、代谢途径或其他生物学过程。</font></li>
</ul>
</li>
<li class="lvl-2">
<p><strong><font style="color:rgb(26, 32, 41);">动态变化</font></strong><font style="color:rgb(26, 32, 41);">：</font></p>
<ul class="lvl-2">
<li class="lvl-6"><font style="color:rgb(26, 32, 41);">如果PPI网络图展示的是随时间或不同条件下变化的数据，分析这些动态变化可以帮助理解生物学过程如何响应外部刺激。</font></li>
</ul>
</li>
<li class="lvl-2">
<p><strong><font style="color:rgb(26, 32, 41);">实验验证</font></strong><font style="color:rgb(26, 32, 41);">：</font></p>
<ul class="lvl-2">
<li class="lvl-6"><font style="color:rgb(26, 32, 41);">PPI网络图通常是基于高通量实验数据（如酵母双杂交、质谱分析）构建的，因此实验验证是解读结果的关键步骤。</font></li>
</ul>
</li>
</ul>
<h2 id="axzNC">参考：</h2>
[RNA-seq入门实战（九）：PPI蛋白互作网络构建（上）——STRING数据库的使用 - 知乎 (zhihu.com)](https://zhuanlan.zhihu.com/p/532037554)
]]></content>
      <categories>
        <category>原创</category>
        <category>科研</category>
      </categories>
      <tags>
        <tag>STRING</tag>
        <tag>分析</tag>
        <tag>PPI</tag>
        <tag>蛋白互作网络</tag>
      </tags>
  </entry>
  <entry>
    <title>【翻译】什么是兔子洞效应？--为什么上网有瘾</title>
    <url>/2024/09/07/916f7cda781a/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>原文链接：<span class="exturl" data-url="aHR0cHM6Ly9hd2llYmUub3JnL2VuL3JhYmJpdC1ob2xlLWVmZmVjdC8=">What is the rabbit hole effect? (awiebe.org)<i class="fa fa-external-link-alt"></i></span></p>
<p>&quot;兔子洞效应&quot;一词在当今数字世界中被广泛使用，它描述了这样一种现象：当一个人原本只是在寻找一条简单的信息时，却往往不自觉地深入到一个或一组特定的主题中去。这种现象得名于刘易斯-卡罗尔的《爱丽丝梦游仙境》中著名的兔子洞，爱丽丝掉进兔子洞后，突然发现自己置身于一个奇异而迷人的世界。<u>在数字时代，我们经常在网上体验到这种现象，因为我们会从一个话题转到下一个话题，从而忘记了时间。</u></p>
<span id="more"></span> 
<h2 id="起源和意义">起源和意义</h2>
<p>兔子洞效应起源于互联网，尤其是 YouTube、维基百科和 Facebook 等社交媒体和平台造成的数字信息超载。这些平台旨在吸引用户不断深入相关内容。点击一个有趣的链接或视频，就会得到进一步的推荐，从而进一步激发用户的兴趣。例如，搜索一个简单的问题，如 “如何烹饪意大利面？”，几个小时后就能让你深入了解一部关于意大利美食历史的纪录片。</p>
<h2 id="其背后的机制和心理学原理">其背后的机制和心理学原理</h2>
<p>兔子洞效应基于各种心理机制。其中一个主要驱动力就是人类的 <strong>好奇心</strong>。人脑追求知识，并在吸收新信息时通过释放多巴胺来奖励自己。这促使我们不断搜索和点击，以了解更多信息。</p>
<p>另一个重要方面是许多 <strong>平台的算法</strong>工作方式。它们会分析网站访问者的行为，并不断推荐与之前的点击和兴趣相匹配的新内容。这就形成了一个相关内容的个性化无休止循环，很难打断这一过程。</p>
<h2 id="兔子洞效应的积极方面">兔子洞效应的积极方面</h2>
<p>除了一些消极方面，兔子洞效应也有积极方面。一方面，它能促进学习和获取知识。通过深入研究一个主题，用户可以大大扩展自己的知识面，发现新的兴趣和爱好。另一个积极的方面是有机会获得灵感。通过结合不同的信息来源和视角，可以产生许多创造性的想法，而这些都可以通过进入数字兔子洞来找到。</p>
<h2 id="危险和消极方面">危险和消极方面</h2>
<p>尽管有这些积极方面，但兔子洞效应也隐藏着一些危险。最大的挑战之一就是时间的损失。由于无意识地上网冲浪，原本计划用于其他任务的时间很快就会丢失。这会导致任务无休止地推迟，降低工作效率。另一个负面影响是有可能成为虚假信息的牺牲品。互联网深处潜伏着大量错误信息和不可靠的信息来源。如果用户遇到这些信息并信以为真，就会导致错误的信念和错误的信息。最后但并非最不重要的一点是，兔子洞效应也会造成社会隔离。当人们花太多时间上网时，会影响他们在现实生活中的社交互动和人际关系。</p>
<h2 id="应对兔子洞效应的策略">应对兔子洞效应的策略</h2>
<p>可以使用多种策略来控制兔子洞效应，将其负面影响降到最低：</p>
<ul class="lvl-0">
<li class="lvl-2">
<p><strong>时间管理</strong>：为自己设定明确的在线研究时间限制，并严格遵守。</p>
</li>
<li class="lvl-2">
<p><strong>有意识地浏览</strong>：意识到自己何时以及为何进入数字兔子洞，并尝试有针对性地搜索信息。</p>
</li>
<li class="lvl-2">
<p><strong>批判性思维</strong>：仔细检查信息来源，确保其可靠可信。</p>
</li>
<li class="lvl-2">
<p><strong>休息</strong>：从屏幕时间中定期休息，放松眼睛和精神，专注于其他活动。<br>
定期自我反思是控制兔子洞效应的重要工具。网民应不断质疑自己，目前访问的内容是否真的与最初的目标相关，或者是否偏离了主题。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>笔记</category>
        <category>其他</category>
      </categories>
      <tags>
        <tag>效应</tag>
        <tag>网络</tag>
        <tag>算法</tag>
        <tag>兔子洞</tag>
        <tag>成瘾</tag>
      </tags>
  </entry>
  <entry>
    <title>《高效阅读》--渡边康弘</title>
    <url>/2024/08/20/51029141b91f/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><table>
<thead>
<tr>
<th><strong>书名</strong></th>
<th>高效阅读</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>作者</strong></td>
<td>渡边康弘</td>
</tr>
<tr>
<td><strong>状态</strong></td>
<td>读完</td>
</tr>
<tr>
<td><strong>简介</strong></td>
<td>本书介绍了“共振阅读法”。用最少的时间，读更多的书。</td>
</tr>
</tbody>
</table>
<span id="more"></span> 
<h2 id="思维导图">思维导图</h2>
<blockquote>
<p>用思维导图，结构化记录本书的核心观点。</p>
</blockquote>
<p><img src="https://cdn.nlark.com/yuque/0/2024/jpeg/12885947/1724074312408-484048b2-1fd2-4322-be26-c3146e64c211.jpeg" alt=""></p>
<h2 id="读后感">读后感</h2>
<h3 id="观点1">观点1</h3>
<blockquote>
<p>读书前的准备，环境要适合，通过深呼吸使身体放松，保持稳定的呼吸频率。</p>
</blockquote>
<h3 id="观点2">观点2</h3>
<blockquote>
<p>明确阅读目的，可以随意翻阅，找感兴趣的词汇，要重视输出，制定行动计划。</p>
</blockquote>
<h3 id="观点3">观点3</h3>
<blockquote>
<p>输出，回顾，交流–》加深记忆。</p>
</blockquote>
<h3 id="观点4">观点4</h3>
<blockquote>
<p>为什么年收入越高的人越喜欢阅读？收入越高的人，用在赚钱上的时间越少，有更多的时间支配。或者他们阅读就是在赚钱。没钱的人需要花费更多的时间在生存上，没有更多的精力去充实自己。</p>
</blockquote>
<h2 id="书摘">书摘</h2>
<ul class="lvl-0">
<li class="lvl-2">
<p>先从自己被感动的内容开始分享（作者，书名；作者的观点；自己所感动的内容）。</p>
</li>
<li class="lvl-2">
<p>真的像是“在与书籍进行对话”的这样一种阅读体验。</p>
</li>
<li class="lvl-2">
<p>无论是收获成功也好，还是改变自己的人生也罢，都不可能只通过“阅读”就能实现，关键还在于你之后能否有实际的行动。</p>
</li>
<li class="lvl-2">
<p>所谓的“行动”，就是指让我们的想法在现实中以某种形式留存下来。</p>
</li>
<li class="lvl-2">
<p>只有将书中的知识转化为金钱的人，才能更好地生存。在信息化社会，“速度”意味着一切。而如今，我们正在从“信息化社会”向“知识创造型社会”过渡。</p>
</li>
<li class="lvl-2">
<p>只要有“进步”的想法，无论何时都能重塑人生。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>笔记</category>
        <category>学习</category>
      </categories>
      <tags>
        <tag>阅读</tag>
        <tag>方法</tag>
        <tag>共振阅读法</tag>
        <tag>行动</tag>
      </tags>
  </entry>
  <entry>
    <title>R语言--果蝇攀爬--ImageJ测量数据处理</title>
    <url>/2024/07/03/c8db0b087a94/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="目的">目的</h2>
<p>处理ImageJ测量的果蝇攀爬数据</p>
<span id="more"></span> 
<h2 id="实例">实例</h2>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">library<span class="punctuation">(</span>cluster<span class="punctuation">)</span> </span><br><span class="line"><span class="comment"># 设定工作目录</span></span><br><span class="line">setwd<span class="punctuation">(</span><span class="string">&quot;E:/Desktop/&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入数据</span></span><br><span class="line">X20180609_WF_IF <span class="operator">&lt;-</span> read.csv<span class="punctuation">(</span><span class="string">&quot;E:/Desktop/20180609-WF-IF.csv&quot;</span><span class="punctuation">)</span></span><br><span class="line">X20180609_CM_AM <span class="operator">&lt;-</span> read.csv<span class="punctuation">(</span><span class="string">&quot;E:/Desktop/20180609-CM-AM.csv&quot;</span><span class="punctuation">)</span></span><br><span class="line">X20180609_CF_AF <span class="operator">&lt;-</span> read.csv<span class="punctuation">(</span><span class="string">&quot;E:/Desktop/20180609-CF-AF.csv&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">clusGap<span class="punctuation">(</span>X20180609_WF_IF<span class="operator">$</span>X<span class="punctuation">[</span>which<span class="punctuation">(</span>X20180609_WF_IF<span class="operator">$</span>Slice<span class="operator">==</span><span class="number">1</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">,</span>FUN<span class="operator">=</span>kmeans<span class="punctuation">,</span>nstart<span class="operator">=</span><span class="number">25</span><span class="punctuation">,</span>K.max<span class="operator">=</span><span class="number">10</span><span class="punctuation">,</span>B<span class="operator">=</span><span class="number">500</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">## 自定义函数，获取每管果蝇的攀爬指数----</span></span><br><span class="line">ppindex <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>X<span class="punctuation">)</span><span class="punctuation">&#123;</span></span><br><span class="line">g1 <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">g2 <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">g3 <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">g4 <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">g5 <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">g6 <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="keyword">for</span> <span class="punctuation">(</span>i <span class="keyword">in</span> <span class="number">1</span><span class="operator">:</span><span class="built_in">max</span><span class="punctuation">(</span>X<span class="operator">$</span>Slice<span class="punctuation">)</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  slice_x <span class="operator">&lt;-</span> X<span class="operator">$</span>X<span class="punctuation">[</span>which<span class="punctuation">(</span>X<span class="operator">$</span>Slice<span class="operator">==</span>i<span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line">  slice_y <span class="operator">&lt;-</span> X<span class="operator">$</span>Y<span class="punctuation">[</span>which<span class="punctuation">(</span>X<span class="operator">$</span>Slice<span class="operator">==</span>i<span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line">  slice_max <span class="operator">&lt;-</span> <span class="punctuation">(</span><span class="built_in">max</span><span class="punctuation">(</span>slice_x<span class="punctuation">)</span><span class="operator">+</span><span class="number">100</span><span class="punctuation">)</span><span class="operator">/</span><span class="number">6</span></span><br><span class="line">  par<span class="punctuation">(</span>mfrow <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">6</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  <span class="comment"># 管1</span></span><br><span class="line">  slice_x <span class="operator">&lt;-</span> slice_x<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_x <span class="operator">&lt;</span> slice_max<span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line">  slice_y <span class="operator">&lt;-</span> slice_y<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_x <span class="operator">&lt;</span> slice_max<span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line">  plot<span class="punctuation">(</span>slice_x<span class="punctuation">,</span>slice_y<span class="punctuation">)</span></span><br><span class="line">  slice_y_fq0 <span class="operator">&lt;-</span> <span class="built_in">length</span><span class="punctuation">(</span>slice_y<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_y <span class="operator">&lt;</span> <span class="number">200</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line">  slice_y_fq1 <span class="operator">&lt;-</span> <span class="built_in">length</span><span class="punctuation">(</span>slice_y<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_y <span class="operator">&gt;</span> <span class="number">200</span><span class="operator">&amp;</span>slice_y <span class="operator">&lt;</span> <span class="number">400</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line">  slice_y_fq2 <span class="operator">&lt;-</span> <span class="built_in">length</span><span class="punctuation">(</span>slice_y<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_y <span class="operator">&gt;</span> <span class="number">400</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">)</span><span class="operator">-</span><span class="number">2</span></span><br><span class="line">  index_1 <span class="operator">&lt;-</span> <span class="punctuation">(</span>slice_y_fq0<span class="operator">*</span><span class="number">0</span><span class="operator">+</span>slice_y_fq1<span class="operator">*</span><span class="number">1</span><span class="operator">+</span>slice_y_fq2<span class="operator">*</span><span class="number">2</span><span class="punctuation">)</span><span class="operator">/</span><span class="punctuation">(</span>slice_y_fq0<span class="operator">+</span>slice_y_fq1<span class="operator">+</span>slice_y_fq2<span class="punctuation">)</span></span><br><span class="line">  g1 <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span>g1<span class="punctuation">,</span>index_1<span class="punctuation">)</span></span><br><span class="line">  <span class="comment"># 管2</span></span><br><span class="line">  slice_x2 <span class="operator">&lt;-</span> slice_x<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_max <span class="operator">&lt;</span> slice_x<span class="operator">&amp;</span>slice_x <span class="operator">&lt;</span> slice_max<span class="operator">*</span><span class="number">2</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line">  slice_y2 <span class="operator">&lt;-</span> slice_y<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_max <span class="operator">&lt;</span> slice_x<span class="operator">&amp;</span>slice_x <span class="operator">&lt;</span> slice_max<span class="operator">*</span><span class="number">2</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line">  plot<span class="punctuation">(</span>slice_x2<span class="punctuation">,</span>slice_y2<span class="punctuation">)</span></span><br><span class="line">  slice_y2_fq0 <span class="operator">&lt;-</span> <span class="built_in">length</span><span class="punctuation">(</span>slice_y2<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_y2 <span class="operator">&lt;</span> <span class="number">200</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line">  slice_y2_fq1 <span class="operator">&lt;-</span> <span class="built_in">length</span><span class="punctuation">(</span>slice_y2<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_y2 <span class="operator">&gt;</span> <span class="number">200</span><span class="operator">&amp;</span>slice_y2 <span class="operator">&lt;</span> <span class="number">400</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line">  slice_y2_fq2 <span class="operator">&lt;-</span> <span class="built_in">length</span><span class="punctuation">(</span>slice_y2<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_y2 <span class="operator">&gt;</span> <span class="number">400</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">)</span><span class="operator">-</span><span class="number">2</span></span><br><span class="line">  index_2 <span class="operator">&lt;-</span> <span class="punctuation">(</span>slice_y2_fq0<span class="operator">*</span><span class="number">0</span><span class="operator">+</span>slice_y2_fq1<span class="operator">*</span><span class="number">1</span><span class="operator">+</span>slice_y2_fq2<span class="operator">*</span><span class="number">2</span><span class="punctuation">)</span><span class="operator">/</span><span class="punctuation">(</span>slice_y2_fq0<span class="operator">+</span>slice_y2_fq1<span class="operator">+</span>slice_y2_fq2<span class="punctuation">)</span></span><br><span class="line">  g2 <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span>g2<span class="punctuation">,</span>index_2<span class="punctuation">)</span></span><br><span class="line">  <span class="comment"># 管3</span></span><br><span class="line">  slice_x3 <span class="operator">&lt;-</span> slice_x<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_max<span class="operator">*</span><span class="number">2</span> <span class="operator">&lt;</span> slice_x<span class="operator">&amp;</span>slice_x <span class="operator">&lt;</span> slice_max<span class="operator">*</span><span class="number">3</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line">  slice_y3 <span class="operator">&lt;-</span> slice_y<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_max<span class="operator">*</span><span class="number">2</span> <span class="operator">&lt;</span> slice_x<span class="operator">&amp;</span>slice_x <span class="operator">&lt;</span> slice_max<span class="operator">*</span><span class="number">3</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line">  plot<span class="punctuation">(</span>slice_x3<span class="punctuation">,</span>slice_y3<span class="punctuation">)</span></span><br><span class="line">  slice_y3_fq0 <span class="operator">&lt;-</span> <span class="built_in">length</span><span class="punctuation">(</span>slice_y3<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_y3 <span class="operator">&lt;</span> <span class="number">200</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line">  slice_y3_fq1 <span class="operator">&lt;-</span> <span class="built_in">length</span><span class="punctuation">(</span>slice_y3<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_y3 <span class="operator">&gt;</span> <span class="number">200</span><span class="operator">&amp;</span>slice_y3 <span class="operator">&lt;</span> <span class="number">400</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line">  slice_y3_fq2 <span class="operator">&lt;-</span> <span class="built_in">length</span><span class="punctuation">(</span>slice_y3<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_y3 <span class="operator">&gt;</span> <span class="number">400</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">)</span><span class="operator">-</span><span class="number">2</span></span><br><span class="line">  index_3 <span class="operator">&lt;-</span> <span class="punctuation">(</span>slice_y3_fq0<span class="operator">*</span><span class="number">0</span><span class="operator">+</span>slice_y3_fq1<span class="operator">*</span><span class="number">1</span><span class="operator">+</span>slice_y3_fq2<span class="operator">*</span><span class="number">2</span><span class="punctuation">)</span><span class="operator">/</span><span class="punctuation">(</span>slice_y3_fq0<span class="operator">+</span>slice_y3_fq1<span class="operator">+</span>slice_y3_fq2<span class="punctuation">)</span></span><br><span class="line">  g3 <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span>g3<span class="punctuation">,</span>index_3<span class="punctuation">)</span></span><br><span class="line">  <span class="comment"># 管4</span></span><br><span class="line">  slice_x4 <span class="operator">&lt;-</span> slice_x<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_max<span class="operator">*</span><span class="number">3</span> <span class="operator">&lt;</span> slice_x<span class="operator">&amp;</span>slice_x <span class="operator">&lt;</span> slice_max<span class="operator">*</span><span class="number">4</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line">  slice_y4 <span class="operator">&lt;-</span> slice_y<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_max<span class="operator">*</span><span class="number">3</span> <span class="operator">&lt;</span> slice_x<span class="operator">&amp;</span>slice_x <span class="operator">&lt;</span> slice_max<span class="operator">*</span><span class="number">4</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line">  plot<span class="punctuation">(</span>slice_x4<span class="punctuation">,</span>slice_y4<span class="punctuation">)</span></span><br><span class="line">  slice_y4_fq0 <span class="operator">&lt;-</span> <span class="built_in">length</span><span class="punctuation">(</span>slice_y4<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_y4 <span class="operator">&lt;</span> <span class="number">200</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line">  slice_y4_fq1 <span class="operator">&lt;-</span> <span class="built_in">length</span><span class="punctuation">(</span>slice_y4<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_y4 <span class="operator">&gt;</span> <span class="number">200</span><span class="operator">&amp;</span>slice_y4 <span class="operator">&lt;</span> <span class="number">400</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line">  slice_y4_fq2 <span class="operator">&lt;-</span> <span class="built_in">length</span><span class="punctuation">(</span>slice_y4<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_y4 <span class="operator">&gt;</span> <span class="number">400</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">)</span><span class="operator">-</span><span class="number">2</span></span><br><span class="line">  index_4 <span class="operator">&lt;-</span> <span class="punctuation">(</span>slice_y4_fq0<span class="operator">*</span><span class="number">0</span><span class="operator">+</span>slice_y4_fq1<span class="operator">*</span><span class="number">1</span><span class="operator">+</span>slice_y4_fq2<span class="operator">*</span><span class="number">2</span><span class="punctuation">)</span><span class="operator">/</span><span class="punctuation">(</span>slice_y4_fq0<span class="operator">+</span>slice_y4_fq1<span class="operator">+</span>slice_y4_fq2<span class="punctuation">)</span></span><br><span class="line">  g4 <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span>g4<span class="punctuation">,</span>index_4<span class="punctuation">)</span></span><br><span class="line">  <span class="comment"># 管5</span></span><br><span class="line">  slice_x5 <span class="operator">&lt;-</span> slice_x<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_max<span class="operator">*</span><span class="number">4</span> <span class="operator">&lt;</span> slice_x<span class="operator">&amp;</span>slice_x <span class="operator">&lt;</span> slice_max<span class="operator">*</span><span class="number">5</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line">  slice_y5 <span class="operator">&lt;-</span> slice_y<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_max<span class="operator">*</span><span class="number">4</span> <span class="operator">&lt;</span> slice_x<span class="operator">&amp;</span>slice_x <span class="operator">&lt;</span> slice_max<span class="operator">*</span><span class="number">5</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line">  plot<span class="punctuation">(</span>slice_x5<span class="punctuation">,</span>slice_y5<span class="punctuation">)</span></span><br><span class="line">  slice_y5_fq0 <span class="operator">&lt;-</span> <span class="built_in">length</span><span class="punctuation">(</span>slice_y5<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_y5 <span class="operator">&lt;</span> <span class="number">200</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line">  slice_y5_fq1 <span class="operator">&lt;-</span> <span class="built_in">length</span><span class="punctuation">(</span>slice_y5<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_y5 <span class="operator">&gt;</span> <span class="number">200</span><span class="operator">&amp;</span>slice_y5 <span class="operator">&lt;</span> <span class="number">400</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line">  slice_y5_fq2 <span class="operator">&lt;-</span> <span class="built_in">length</span><span class="punctuation">(</span>slice_y5<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_y5 <span class="operator">&gt;</span> <span class="number">400</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">)</span><span class="operator">-</span><span class="number">2</span></span><br><span class="line">  index_5 <span class="operator">&lt;-</span> <span class="punctuation">(</span>slice_y5_fq0<span class="operator">*</span><span class="number">0</span><span class="operator">+</span>slice_y5_fq1<span class="operator">*</span><span class="number">1</span><span class="operator">+</span>slice_y5_fq2<span class="operator">*</span><span class="number">2</span><span class="punctuation">)</span><span class="operator">/</span><span class="punctuation">(</span>slice_y5_fq0<span class="operator">+</span>slice_y5_fq1<span class="operator">+</span>slice_y5_fq2<span class="punctuation">)</span></span><br><span class="line">  g5 <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span>g5<span class="punctuation">,</span>index_5<span class="punctuation">)</span></span><br><span class="line">  <span class="comment"># 管6</span></span><br><span class="line">  slice_x6 <span class="operator">&lt;-</span> slice_x<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_max<span class="operator">*</span><span class="number">5</span> <span class="operator">&lt;</span> slice_x<span class="operator">&amp;</span>slice_x <span class="operator">&lt;</span> slice_max<span class="operator">*</span><span class="number">6</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line">  slice_y6 <span class="operator">&lt;-</span> slice_y<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_max<span class="operator">*</span><span class="number">5</span> <span class="operator">&lt;</span> slice_x<span class="operator">&amp;</span>slice_x <span class="operator">&lt;</span> slice_max<span class="operator">*</span><span class="number">6</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line">  plot<span class="punctuation">(</span>slice_x6<span class="punctuation">,</span>slice_y6<span class="punctuation">)</span></span><br><span class="line">  slice_y6_fq0 <span class="operator">&lt;-</span> <span class="built_in">length</span><span class="punctuation">(</span>slice_y6<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_y6 <span class="operator">&lt;</span> <span class="number">200</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line">  slice_y6_fq1 <span class="operator">&lt;-</span> <span class="built_in">length</span><span class="punctuation">(</span>slice_y6<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_y6 <span class="operator">&gt;</span> <span class="number">200</span><span class="operator">&amp;</span>slice_y6 <span class="operator">&lt;</span> <span class="number">400</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line">  slice_y6_fq2 <span class="operator">&lt;-</span> <span class="built_in">length</span><span class="punctuation">(</span>slice_y6<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_y6 <span class="operator">&gt;</span> <span class="number">400</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">)</span><span class="operator">-</span><span class="number">2</span></span><br><span class="line">  index_6 <span class="operator">&lt;-</span> <span class="punctuation">(</span>slice_y6_fq0<span class="operator">*</span><span class="number">0</span><span class="operator">+</span>slice_y6_fq1<span class="operator">*</span><span class="number">1</span><span class="operator">+</span>slice_y6_fq2<span class="operator">*</span><span class="number">2</span><span class="punctuation">)</span><span class="operator">/</span><span class="punctuation">(</span>slice_y6_fq0<span class="operator">+</span>slice_y6_fq1<span class="operator">+</span>slice_y6_fq2<span class="punctuation">)</span></span><br><span class="line">  g6 <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span>g6<span class="punctuation">,</span>index_6<span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line">  flyindex <span class="operator">&lt;-</span> data.frame<span class="punctuation">(</span>g1<span class="punctuation">,</span>g2<span class="punctuation">,</span>g3<span class="punctuation">,</span>g4<span class="punctuation">,</span>g5<span class="punctuation">,</span>g6<span class="punctuation">)</span></span><br><span class="line">  <span class="built_in">return</span><span class="punctuation">(</span>flyindex<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#汇总----</span></span><br><span class="line">WI_F_Index <span class="operator">&lt;-</span> ppindex<span class="punctuation">(</span>X20180609_WF_IF<span class="punctuation">)</span> </span><br><span class="line"><span class="built_in">names</span><span class="punctuation">(</span>WI_F_Index<span class="punctuation">)</span> <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;WF1&quot;</span><span class="punctuation">,</span><span class="string">&quot;WF2&quot;</span><span class="punctuation">,</span><span class="string">&quot;WF3&quot;</span><span class="punctuation">,</span><span class="string">&quot;IF1&quot;</span><span class="punctuation">,</span><span class="string">&quot;IF2&quot;</span><span class="punctuation">,</span><span class="string">&quot;IF3&quot;</span><span class="punctuation">)</span></span><br><span class="line">WI_F_Index <span class="operator">&lt;-</span> ppindex<span class="punctuation">(</span>X20180609_CF_AF<span class="punctuation">)</span></span><br><span class="line"><span class="built_in">names</span><span class="punctuation">(</span>CA_F_Index<span class="punctuation">)</span> <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;CF1&quot;</span><span class="punctuation">,</span><span class="string">&quot;CF2&quot;</span><span class="punctuation">,</span><span class="string">&quot;CF3&quot;</span><span class="punctuation">,</span><span class="string">&quot;AF1&quot;</span><span class="punctuation">,</span><span class="string">&quot;AF2&quot;</span><span class="punctuation">,</span><span class="string">&quot;AF3&quot;</span><span class="punctuation">)</span></span><br><span class="line">CA_M_Index <span class="operator">&lt;-</span> ppindex<span class="punctuation">(</span>X20180609_CM_AM<span class="punctuation">)</span></span><br><span class="line"><span class="built_in">names</span><span class="punctuation">(</span>CA_M_Index<span class="punctuation">)</span> <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;CM1&quot;</span><span class="punctuation">,</span><span class="string">&quot;CM2&quot;</span><span class="punctuation">,</span><span class="string">&quot;CM3&quot;</span><span class="punctuation">,</span><span class="string">&quot;AM1&quot;</span><span class="punctuation">,</span><span class="string">&quot;AM2&quot;</span><span class="punctuation">,</span><span class="string">&quot;AM3&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存</span></span><br><span class="line">library<span class="punctuation">(</span>xlsx<span class="punctuation">)</span></span><br><span class="line">write.xlsx2<span class="punctuation">(</span>WI_F_Index<span class="punctuation">,</span> sheetName <span class="operator">=</span> <span class="string">&quot;WI_F_Index&quot;</span><span class="punctuation">,</span> file<span class="operator">=</span><span class="string">&#x27;flyIndex.xlsx&#x27;</span><span class="punctuation">,</span>append <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line">write.xlsx2<span class="punctuation">(</span>CA_F_Index<span class="punctuation">,</span> sheetName <span class="operator">=</span> <span class="string">&quot;CA_F_Index&quot;</span><span class="punctuation">,</span> file<span class="operator">=</span><span class="string">&#x27;flyIndex.xlsx&#x27;</span><span class="punctuation">,</span>append <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line">write.xlsx2<span class="punctuation">(</span>CA_M_Index<span class="punctuation">,</span> sheetName <span class="operator">=</span> <span class="string">&quot;CA_M_Index&quot;</span><span class="punctuation">,</span> file<span class="operator">=</span><span class="string">&#x27;flyIndex.xlsx&#x27;</span><span class="punctuation">,</span>append <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line">dev.off<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">###########################################################################################</span></span><br><span class="line"><span class="comment">#单管----</span></span><br><span class="line"><span class="comment"># 导入数据</span></span><br><span class="line">X20180609_IM3 <span class="operator">&lt;-</span> read.csv<span class="punctuation">(</span><span class="string">&quot;E:/Desktop/20180609-IM3.csv&quot;</span><span class="punctuation">)</span></span><br><span class="line">X20180609_IM2 <span class="operator">&lt;-</span> read.csv<span class="punctuation">(</span><span class="string">&quot;E:/Desktop/20180609-IM2.csv&quot;</span><span class="punctuation">)</span></span><br><span class="line">X20180609_IM1 <span class="operator">&lt;-</span> read.csv<span class="punctuation">(</span><span class="string">&quot;E:/Desktop/20180609-IM1.csv&quot;</span><span class="punctuation">)</span></span><br><span class="line">X20180609_WM3 <span class="operator">&lt;-</span> read.csv<span class="punctuation">(</span><span class="string">&quot;E:/Desktop/20180609-WM3.csv&quot;</span><span class="punctuation">)</span></span><br><span class="line">X20180609_WM2 <span class="operator">&lt;-</span> read.csv<span class="punctuation">(</span><span class="string">&quot;E:/Desktop/20180609-WM2.csv&quot;</span><span class="punctuation">)</span></span><br><span class="line">X20180609_WM1 <span class="operator">&lt;-</span> read.csv<span class="punctuation">(</span><span class="string">&quot;E:/Desktop/20180609-WM1.csv&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">pp2index <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>x<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  index <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">  <span class="keyword">for</span> <span class="punctuation">(</span>i <span class="keyword">in</span> <span class="number">1</span><span class="operator">:</span><span class="built_in">max</span><span class="punctuation">(</span>x<span class="operator">$</span>Slice<span class="punctuation">)</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">    slice_x <span class="operator">&lt;-</span> x<span class="operator">$</span>X<span class="punctuation">[</span>which<span class="punctuation">(</span>x<span class="operator">$</span>Slice <span class="operator">==</span> i<span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line">    slice_y <span class="operator">&lt;-</span> x<span class="operator">$</span>Y<span class="punctuation">[</span>which<span class="punctuation">(</span>x<span class="operator">$</span>Slice <span class="operator">==</span> i<span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line">    slice_y_fq0 <span class="operator">&lt;-</span> <span class="built_in">length</span><span class="punctuation">(</span>slice_y<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_y <span class="operator">&lt;</span> <span class="number">340</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line">    slice_y_fq1 <span class="operator">&lt;-</span> <span class="built_in">length</span><span class="punctuation">(</span>slice_y<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_y <span class="operator">&gt;</span> <span class="number">340</span> <span class="operator">&amp;</span></span><br><span class="line">                                          slice_y <span class="operator">&lt;</span> <span class="number">600</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line">    <span class="keyword">if</span> <span class="punctuation">(</span><span class="punctuation">(</span><span class="built_in">length</span><span class="punctuation">(</span>slice_y<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_y <span class="operator">&gt;</span> <span class="number">600</span> <span class="operator">&amp;</span></span><br><span class="line">                              slice_y <span class="operator">&lt;</span> <span class="number">900</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">)</span> <span class="operator">-</span> <span class="number">1</span><span class="punctuation">)</span> <span class="operator">&lt;</span> <span class="number">0</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">      slice_y_fq2 <span class="operator">&lt;-</span> 0</span><br><span class="line">    <span class="punctuation">&#125;</span> <span class="keyword">else</span> <span class="punctuation">&#123;</span></span><br><span class="line">      slice_y_fq2 <span class="operator">&lt;-</span> <span class="built_in">length</span><span class="punctuation">(</span>slice_y<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_y <span class="operator">&gt;</span> <span class="number">600</span> <span class="operator">&amp;</span></span><br><span class="line">                                            slice_y <span class="operator">&lt;</span> <span class="number">900</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">)</span> <span class="operator">-</span> <span class="number">1</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="punctuation">(</span><span class="punctuation">(</span><span class="built_in">length</span><span class="punctuation">(</span>slice_y<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_y <span class="operator">&gt;</span> <span class="number">900</span> <span class="operator">&amp;</span></span><br><span class="line">                              slice_y <span class="operator">&lt;</span> <span class="number">1200</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">)</span> <span class="operator">-</span> <span class="number">1</span><span class="punctuation">)</span> <span class="operator">&lt;</span> <span class="number">0</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">      slice_y_fq3 <span class="operator">&lt;-</span> 0</span><br><span class="line">    <span class="punctuation">&#125;</span> <span class="keyword">else</span> <span class="punctuation">&#123;</span></span><br><span class="line">      slice_y_fq3 <span class="operator">&lt;-</span> <span class="built_in">length</span><span class="punctuation">(</span>slice_y<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_y <span class="operator">&gt;</span> <span class="number">900</span> <span class="operator">&amp;</span></span><br><span class="line">                                            slice_y <span class="operator">&lt;</span> <span class="number">1200</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">)</span> <span class="operator">-</span> <span class="number">1</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="punctuation">(</span><span class="punctuation">(</span><span class="built_in">length</span><span class="punctuation">(</span>slice_y<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_y <span class="operator">&gt;</span> <span class="number">1200</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">)</span> <span class="operator">-</span> <span class="number">1</span><span class="punctuation">)</span> <span class="operator">&lt;</span> <span class="number">0</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">      slice_y_fq4 <span class="operator">&lt;-</span> 0</span><br><span class="line">    <span class="punctuation">&#125;</span> <span class="keyword">else</span> <span class="punctuation">&#123;</span></span><br><span class="line">      slice_y_fq4 <span class="operator">&lt;-</span> <span class="built_in">length</span><span class="punctuation">(</span>slice_y<span class="punctuation">[</span>which<span class="punctuation">(</span>slice_y <span class="operator">&gt;</span> <span class="number">1200</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">)</span> <span class="operator">-</span> <span class="number">1</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">    </span><br><span class="line">    index_1 <span class="operator">&lt;-</span> <span class="punctuation">(</span>slice_y_fq0 <span class="operator">*</span> <span class="number">0</span> <span class="operator">+</span> slice_y_fq1 <span class="operator">*</span> <span class="number">1</span> <span class="operator">+</span> slice_y_fq2 <span class="operator">*</span> <span class="number">2</span> <span class="operator">+</span> slice_y_fq3 <span class="operator">*</span></span><br><span class="line">                  <span class="number">3</span> <span class="operator">+</span> slice_y_fq4 <span class="operator">*</span> <span class="number">4</span><span class="punctuation">)</span> <span class="operator">/</span> <span class="punctuation">(</span>slice_y_fq0 <span class="operator">+</span> slice_y_fq1 <span class="operator">+</span> slice_y_fq2 <span class="operator">+</span> slice_y_fq3 <span class="operator">+</span></span><br><span class="line">                                            slice_y_fq4<span class="punctuation">)</span></span><br><span class="line">    index <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span>index<span class="punctuation">,</span>index_1<span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="built_in">return</span><span class="punctuation">(</span>index<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line">IM3 <span class="operator">&lt;-</span> pp2index<span class="punctuation">(</span>X20180609_IM3<span class="punctuation">)</span></span><br><span class="line">IM2 <span class="operator">&lt;-</span> pp2index<span class="punctuation">(</span>X20180609_IM2<span class="punctuation">)</span></span><br><span class="line">IM1 <span class="operator">&lt;-</span> pp2index<span class="punctuation">(</span>X20180609_IM1<span class="punctuation">)</span></span><br><span class="line">WM1 <span class="operator">&lt;-</span> pp2index<span class="punctuation">(</span>X20180609_WM1<span class="punctuation">)</span></span><br><span class="line">WM2 <span class="operator">&lt;-</span> pp2index<span class="punctuation">(</span>X20180609_WM3<span class="punctuation">)</span></span><br><span class="line">WM3 <span class="operator">&lt;-</span> pp2index<span class="punctuation">(</span>X20180609_WM2<span class="punctuation">)</span></span><br><span class="line">WI_M_Index <span class="operator">&lt;-</span> cbind<span class="punctuation">(</span>WM1<span class="operator">=</span>WM1<span class="punctuation">,</span>WM2<span class="operator">=</span>WM2<span class="punctuation">,</span>WM3<span class="operator">=</span>WM3<span class="punctuation">,</span>IM1<span class="operator">=</span>IM1<span class="punctuation">,</span>IM2<span class="operator">=</span>IM2<span class="punctuation">,</span>IM3<span class="operator">=</span>IM3<span class="punctuation">)</span></span><br><span class="line">write.xlsx2<span class="punctuation">(</span>WI_M_Index<span class="punctuation">,</span> sheetName <span class="operator">=</span> <span class="string">&quot;WI_M_Index&quot;</span><span class="punctuation">,</span> file<span class="operator">=</span><span class="string">&#x27;flyIndex.xlsx&#x27;</span><span class="punctuation">,</span>append <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>原创</category>
        <category>科研</category>
      </categories>
      <tags>
        <tag>ImageJ</tag>
        <tag>R语言</tag>
        <tag>批量</tag>
        <tag>数据处理</tag>
        <tag>实例</tag>
        <tag>果蝇</tag>
      </tags>
  </entry>
  <entry>
    <title>Process--&gt;Noise&#92;Filters笔记</title>
    <url>/2024/06/11/7890000bc707/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1>Process–&gt;Noise\Filters笔记</h1>
<h2 id="Noise">Noise</h2>
<p><img src="./imgs/20240605_223251_00000.png" alt=""><br>
<strong>Add noise</strong> 对图片增加随机噪声，噪声服从均值为0、标准差为25的高斯分布。<br>
<strong>Add Specified Noise</strong> 增加一个均值为0、手动输入标准差的高斯噪声。</p>
<span id="more"></span> 
<p><strong>Salt and Pepper</strong> 通过随机替换2.5%的黑色像素和2.5%的白色像素来增加椒盐噪声。该命令仅适用于8-bit图片。<br>
<strong>Despeckle</strong> 这是一种中值滤波器，它将像素值替换为它周围3*3的像素点的均值。中值滤波器对于去掉上面的椒盐噪声很有用。<br>
<strong>Remove Outliers</strong> 如果一个像素点离它周围点的均值超过一定数值，该命令就会去除这个像素点。该命令对CCD相机的hot pixels或dead pixels很有用。</p>
<ul class="lvl-0">
<li class="lvl-2"><strong>Radius</strong>：决定计算均值的范围（单位是像素）。使用Process-Filter-Show Circular Masks来显示半径是如何转变为面积的。</li>
<li class="lvl-2"><strong>Threshold</strong>：决定阈值（单位是像素）</li>
<li class="lvl-2"><strong>Which Outliers</strong>：决定比均值更亮还是更暗的像素点去除。</li>
</ul>
<p><strong>Remove NANs</strong> 该滤波器将32-bit图片中的NaN像素点替换成由Radius定义的圆形kernel区域内部的像素点的平均值。<br>
<strong>ROF Denoise</strong> 降噪</p>
<h2 id="Filters">Filters</h2>
<p>该菜单包含五花八门的滤波器。<br>
<strong>Convolve</strong> 使用填入文本区域的kernel进行空间卷积。一个kernel就是一个矩阵，它的中心是源像素，其他的元素是该像素的邻居。通过对像素点乘以相应的kernel中的系数然后相加得到结果。对kernel的尺寸没有限制，但它必须是方形，且必须是奇数宽度。勾选<code>Normalize Kernel</code>可以使得每个系数都除以所有系数的和，从而保持图片的亮度。<br>
<strong>Gaussian Blur</strong> 该过滤器使用一个高斯函数进行卷积，从而实现平滑效果。<br>
<strong>Gaussian Blur 3D</strong> 计算一个三维高斯低通滤波。<br>
<strong>Median</strong> 将像素替换为周围点的平均像素值，从而实现<strong>降噪</strong>效果。<br>
<strong>Mean</strong> 怎么感觉跟上面的Median是一个意思呢。<br>
<strong>Minimum</strong> 将像素替换为周围点的最小值，从而实现灰度腐蚀。<br>
<strong>Maximum</strong> 将像素替换为周围点的最大值，从而实现灰度膨胀。<br>
<strong>Unsharp Mas</strong>k 通过从原图片中提出一个模糊的版本，从而锐化和加强边缘。<br>
<strong>Variance</strong> 将每个像素替换为邻居的方差，从而高亮边缘。<br>
<strong>Show Circular Masks</strong> 产生一个包含上面Median、Mean、Minimum、Maximum和Variance滤波器使用的圆形mask产生的事例。</p>
<h2 id="参考">参考</h2>
<ol>
<li class="lvl-3">
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuamluZ2VnZS53YW5nLzIwMjEvMTAvMDEvaW1hZ2VqLSVlNyU5NCVhOCVlNiU4OCViNyVlNiU4YyU4NyVlNSU4ZCU5Ny85Lw==">https://www.jingege.wang/2021/10/01/imagej-用户指南/9/<i class="fa fa-external-link-alt"></i></span></p>
</li>
</ol>
]]></content>
      <categories>
        <category>笔记</category>
        <category>学习</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>ImageJ</tag>
        <tag>图像</tag>
        <tag>插件</tag>
        <tag>降噪</tag>
        <tag>Noise</tag>
        <tag>Filters</tag>
      </tags>
  </entry>
  <entry>
    <title>Web API--学习笔记（1）</title>
    <url>/2024/05/29/15d7b13129c0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="简介">简介</h2>
<p>应用程序接口（<strong>API</strong>，Application Programming Interface）是基于编程语言构建的结构，使开发人员更容易地创建复杂的功能。它们抽象了复杂的代码，并提供一些简单的接口规则直接使用。</p>
<span id="more"></span> 
<blockquote>
<p>通常分为两类：</p>
</blockquote>
<ul class="lvl-0">
<li class="lvl-2">
<p><strong>浏览器 API</strong>内置于 Web 浏览器中，能从浏览器和电脑周边环境中提取数据，并用来做有用的复杂的事情。例如<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0dlb2xvY2F0aW9uX0FQSQ==">Geolocation API<i class="fa fa-external-link-alt"></i></span>提供了一些简单的 JavaScript 结构以获得位置数据，因此你可以在 Google 地图上标示你的位置。在后台，浏览器确实使用一些复杂的低级代码（例如 C++）与设备的 GPS 硬件（或可以决定位置数据的任何设施）通信来获取位置数据并把这些数据返回给你的代码中使用浏览器环境；但是，这种复杂性通过 API 抽象出来，因而与你无关。</p>
</li>
<li class="lvl-2">
<p><strong>第三方 API</strong>缺省情况下不会内置于浏览器中，通常必须在 Web 中的某个地方获取代码和信息。例如<span class="exturl" data-url="aHR0cHM6Ly9kZXYudHdpdHRlci5jb20vb3ZlcnZpZXcvZG9jdW1lbnRhdGlvbg==">Twitter API<i class="fa fa-external-link-alt"></i></span> 使你能做一些显示最新推文这样的事情，它提供一系列特殊的结构，可以用来请求 Twitter 服务并返回特殊的信息。</p>
</li>
</ul>
<blockquote>
<p>浏览器 API 类别</p>
</blockquote>
<ul class="lvl-0">
<li class="lvl-2">
<p><strong>操作文档的 API</strong>内置于浏览器中。最明显的例子是<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0RvY3VtZW50X09iamVjdF9Nb2RlbA==">DOM（文档对象模型）<i class="fa fa-external-link-alt"></i></span>API，它允许你操作 HTML 和 CSS — 创建、移除以及修改 HTML，动态地将新样式应用到你的页面，等等。每当你看到一个弹出窗口出现在一个页面上，或者显示一些新的内容时，这都是 DOM 的行为。你可以在在<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9MZWFybi9KYXZhU2NyaXB0L0NsaWVudC1zaWRlX3dlYl9BUElzL01hbmlwdWxhdGluZ19kb2N1bWVudHM=">Manipulating documents<i class="fa fa-external-link-alt"></i></span>中找到关于这些类型的 API 的更多信息。</p>
</li>
<li class="lvl-2">
<p><strong>从服务器获取数据的 API</strong> 用于更新网页的一小部分是相当好用的。这个看似很小的细节能对网站的性能和行为产生巨大的影响 — 如果你只是更新一个股票列表或者一些可用的新故事而不需要从服务器重新加载整个页面将使网站或应用程序感觉更加敏感和“活泼”。使这成为可能的 API 包括<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1hNTEh0dHBSZXF1ZXN0">XMLHttpRequest<i class="fa fa-external-link-alt"></i></span>和<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0ZldGNoX0FQSQ==">Fetch API<i class="fa fa-external-link-alt"></i></span>。你也可能会遇到描述这种技术的术语<strong>Ajax</strong>。你可以在<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9MZWFybi9KYXZhU2NyaXB0L0NsaWVudC1zaWRlX3dlYl9BUElzL0ZldGNoaW5nX2RhdGE=">Fetching data from the server<i class="fa fa-external-link-alt"></i></span>找到关于类似的 API 的更多信息。</p>
</li>
<li class="lvl-2">
<p><strong>用于绘制和操作图形的 API</strong>目前已被浏览器广泛支持 — 最流行的是允许你以编程方式更新包含在 HTML <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/canvas"><canvas></a> 元素中的像素数据以创建 2D 和 3D 场景的<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0NhbnZhc19BUEk=">Canvas<i class="fa fa-external-link-alt"></i></span>和<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1dlYkdMX0FQSQ==">WebGL<i class="fa fa-external-link-alt"></i></span>。例如，你可以绘制矩形或圆形等形状，将图像导入到画布上，然后使用 Canvas API 对其应用滤镜（如棕褐色滤镜或灰度滤镜），或使用 WebGL 创建具有光照和纹理的复杂 3D 场景。这些 API 经常与用于创建动画循环的 API（例如<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1dpbmRvdy9yZXF1ZXN0QW5pbWF0aW9uRnJhbWU=">window.requestAnimationFrame()<i class="fa fa-external-link-alt"></i></span>）和其他 API 一起不断更新诸如动画和游戏之类的场景。</p>
</li>
<li class="lvl-2">
<p><strong>音频和视频 API</strong> 例如 <span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0hUTUxNZWRpYUVsZW1lbnQ=">HTMLMediaElement<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1dlYl9BdWRpb19BUEk=">Web Audio API<i class="fa fa-external-link-alt"></i></span> 和 <span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1dlYlJUQ19BUEk=">WebRTC<i class="fa fa-external-link-alt"></i></span> 允许你使用多媒体来做一些非常有趣的事情，比如创建用于播放音频和视频的自定义 UI 控件，显示字幕字幕和你的视频，从网络摄像机抓取视频，通过画布操纵（见上），或在网络会议中显示在别人的电脑上，或者添加效果到音轨（如增益、失真、平移等） 。</p>
</li>
<li class="lvl-2">
<p><strong>设备 API</strong>基本上是以对网络应用程序有用的方式操作和检索现代设备硬件中的数据的 API。我们已经讨论过访问设备位置数据的地理定位 API，因此你可以在地图上标注你的位置。其他示例还包括通过系统通知（参见<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL05vdGlmaWNhdGlvbnNfQVBJ">Notifications API<i class="fa fa-external-link-alt"></i></span>）或振动硬件（参见<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1ZpYnJhdGlvbl9BUEk=">Vibration API<i class="fa fa-external-link-alt"></i></span>）告诉用户 Web 应用程序有用的更新可用。</p>
</li>
<li class="lvl-2">
<p><strong>客户端存储 API</strong>在 Web 浏览器中的使用变得越来越普遍 - 如果你想创建一个应用程序来保存页面加载之间的状态，甚至让设备在处于脱机状态时可用，那么在客户端存储数据将会是非常有用的。例如使用<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL1dlYl9TdG9yYWdlX0FQSQ==">Web Storage API<i class="fa fa-external-link-alt"></i></span>的简单的键 - 值存储以及使用<span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0luZGV4ZWREQl9BUEk=">IndexedDB API<i class="fa fa-external-link-alt"></i></span>的更复杂的表格数据存储。</p>
</li>
</ul>
<blockquote>
<p>第三方 API</p>
</blockquote>
<h2 id="API-如何工作？">API 如何工作？</h2>
<p>API 使用一个或多个 JavaScript objects 在你的代码中进行交互，这些对象用作 API 使用的数据（包含在对象属性中）的容器以及 API 提供的功能（包含在对象方法中）。</p>
<h2 id="参考">参考</h2>
<ol>
<li class="lvl-3">
<p><span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9MZWFybi9KYXZhU2NyaXB0L0NsaWVudC1zaWRlX3dlYl9BUElzL0ludHJvZHVjdGlvbg==">https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Introduction<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li class="lvl-3">
<p><span class="exturl" data-url="aHR0cHM6Ly9zc3BhaS5jb20vcG9zdC84Nzg4NSMh">https://sspai.com/post/87885#!<i class="fa fa-external-link-alt"></i></span></p>
</li>
</ol>
]]></content>
      <categories>
        <category>笔记</category>
        <category>学习</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>笔记</tag>
        <tag>API</tag>
        <tag>建站</tag>
      </tags>
  </entry>
  <entry>
    <title>ImageJ--自动将源图或堆栈与目标图配准--StackReg插件</title>
    <url>/2024/05/23/d5d33bdaa68f/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a name="e05dce83"></a></p>
<h2 id="简介">简介</h2>
<p>StackReg，用于递归对齐图像堆栈（stack）的 ImageJ 插件。<br /><strong>作者：</strong> Philippe Thévenaz, Biomedical Imaging Group, Swiss Federal Institute of Technology Lausanne</p>
<span id="more"></span>
<p>该插件的目的是配准（换句话说，对齐或匹配）图像堆栈。每张图片用作下一张图片对齐的模板，以便通过转换进行对齐。当插件启动时，当前图片充当全局锚点。StackReg 插件要求安装有TurboReg 插件。该插件（<strong>StackReg</strong>）是<strong>TurboReg</strong> 插件的前端。这些插件之间有几种数据交换机制，其中之一是将临时文件写入 ImageJ 定义的临时目录。该目录的位置可以通过宏命令 &quot;<code>print(getDirectory(&quot;temp&quot;));</code> &quot;查看。文件名称是：StackRegSource，StackRegSourceR，StackRegSourceG，StackRegSourceB，StackRegTarget。</p>
<p>配准完成后，原始堆栈将被销毁，取而代之的是配准结果。堆栈的名称和类型保持不变；除 <strong>RGB 堆栈</strong>和 <strong>HSB 堆</strong>栈外，所有数据类型均可使用。(请注意，RGB-stack 是由三个颜色分量组成的堆栈，不应与 RGB 彩色图像堆栈混淆：后者可以使用，而前者不能使用。如有疑问，请尝试一下)。如果提供的是彩色图像堆栈，则会在灰度版本上进行配准，灰度版本是由红色、绿色和蓝色分量加权求和而成的，即使堆栈是伪彩色图像也是如此。权重取决于整个图像堆栈，并通过主成分分析确定，以提供最大可能的对比度。一旦根据中间灰度表示确定了几何图形，就可以重建真正的彩色图像，如果需要生成伪彩色图像，还可以重新量化。</p>
<p><a name="1a63ac23"></a></p>
<h2 id="示例">示例</h2>
<p><img src="https://cdn.nlark.com/yuque/0/2024/png/12885947/1716430374851-f6e0204e-c711-4eaf-8e10-dd2559bd26b2.png#averageHue=%23bdbbb0&amp;clientId=u2db50134-249f-4&amp;from=paste&amp;height=342&amp;id=LXm3J&amp;originHeight=788&amp;originWidth=1522&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=1428440&amp;status=done&amp;style=none&amp;taskId=u680c6b5e-8e69-4db7-ba5b-a91f3ac40ae&amp;title=&amp;width=661" alt="image.png"><br />原始图<br /><img src="https://cdn.nlark.com/yuque/0/2024/gif/12885947/1716434444337-f17c0e80-e8ff-43ce-bb2e-9855df60aced.gif#averageHue=%23bebfbd&amp;clientId=u2db50134-249f-4&amp;from=paste&amp;height=321&amp;id=u2a92047f&amp;originHeight=1000&amp;originWidth=2057&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=5059819&amp;status=done&amp;style=none&amp;taskId=ub9390e85-5478-4b32-9ef3-a9fade1b7b0&amp;title=&amp;width=661" alt="攀爬2-缩小.gif"><br />配准后(转换类型<strong>Scaled rotation</strong>)<br /><img src="https://cdn.nlark.com/yuque/0/2024/gif/12885947/1716438022750-6e21a2ae-fea6-497e-860e-d85616f849a9.gif#averageHue=%23c0c0be&amp;clientId=u89d4ed3b-c40f-4&amp;from=drop&amp;height=321&amp;id=kKliK&amp;originHeight=1960&amp;originWidth=4032&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=16556324&amp;status=done&amp;style=none&amp;taskId=u99a6e12e-93c9-4cd1-bf54-cc01b9e9b5b&amp;title=&amp;width=660" alt="WT-处-control-20211218-scaled.gif"></p>
<p><a name="AX0GW"></a></p>
<h2 id="参数">参数</h2>
<p>有四种类型的转换：</p>
<ul class="lvl-0">
<li class="lvl-2">
<p><strong>Translation</strong>：</p>
</li>
</ul>
<p>映射公式为 <img src="https://www.yuque.com/api/services/graph/generate_redirect/latex?x%20%3D%20u%20%2B%20%CE%94u#card=math&amp;code=x%20%3D%20u%20%2B%20%CE%94u&amp;id=I1f4r" alt="">。其中，输入坐标 <strong>u</strong> 映射到输出坐标 <strong>x</strong>，常数矢量 <strong>Δu</strong> 表示平移量。</p>
<ul class="lvl-0">
<li class="lvl-2">
<p><strong>Rigid Body</strong>：</p>
</li>
</ul>
<p>映射公式为 <br /><img src="https://cdn.nlark.com/yuque/__latex/e386340d2860de58527e61d4dc5de7cd.svg#card=math&amp;code=x%20%3D%20%5C%7B%20%5C%7Bcos%20%CE%B8%2C%20%E2%88%92sin%20%CE%B8%5C%7D%2C%20%5C%7Bsin%20%CE%B8%2C%20cos%20%CE%B8%5C%7D%20%5C%7D%20%E2%8B%85%20u%20%2B%20%CE%94u&amp;id=HGnJ1" alt=""><br />由于存在 <strong>Δu</strong> 项，因此除了旋转角度 <strong>θ</strong> 外，还考虑了平移。</p>
<ul class="lvl-0">
<li class="lvl-2">
<p><strong>Scaled rotation</strong>：</p>
</li>
</ul>
<p>映射公式为 <br /><img src="https://cdn.nlark.com/yuque/__latex/1678623c5ac84d63fb37a0c24914e4bf.svg#card=math&amp;code=x%20%3D%20%CE%BB%20%5C%7B%20%5C%7Bcos%20%CE%B8%2C%20%E2%88%92sin%20%CE%B8%5C%7D%2C%20%5C%7Bsin%20%CE%B8%2C%20cos%20%CE%B8%5C%7D%20%5C%7D%E2%8B%85%20u%20%2B%20%CE%94u&amp;id=HxAmA" alt=""><br />与<strong>Rigid Body</strong> 的区别在于存在标量调整因子 <strong>λ</strong>。</p>
<ul class="lvl-0">
<li class="lvl-2">
<p><strong>Affine</strong>：</p>
</li>
</ul>
<p>映射公式为 <br /><img src="https://cdn.nlark.com/yuque/__latex/56c72e021aeb8d05a197e959c33a45b2.svg#card=math&amp;code=x%20%3D%20%5C%7B%20%5C%7Ba_%7B11%7D%2C%20a_%7B12%7D%5C%7D%2C%20%5C%7Ba_%7B21%7D%2C%20a_%7B22%7D%5C%7D%20%5C%7D%20%E2%8B%85%20u%20%2B%20%CE%94u&amp;id=CCeB3" alt=""><br />由于四个系数 <img src="https://www.yuque.com/api/services/graph/generate_redirect/latex?a_%7B11%7D#card=math&amp;code=a_%7B11%7D&amp;id=NPdDU" alt="">、<img src="https://www.yuque.com/api/services/graph/generate_redirect/latex?a_%7B12%7D#card=math&amp;code=a_%7B12%7D&amp;id=X1Pob" alt="">、<img src="https://www.yuque.com/api/services/graph/generate_redirect/latex?a_%7B21%7D#card=math&amp;code=a_%7B21%7D&amp;id=Hro5t" alt=""> 和 <img src="https://www.yuque.com/api/services/graph/generate_redirect/latex?a_%7B22%7D#card=math&amp;code=a_%7B22%7D&amp;id=msruk" alt=""> 是独立的，因此仿射变换比按比例旋转具有更多的自由度。<br>
<a name="1c53b310"></a></p>
<h2 id="操作步骤">操作步骤</h2>
<p>使用的Fiji ImageJ</p>
<ol>
<li class="lvl-3">
<p>拖动图片文件夹到Fiji，默认为堆栈。</p>
</li>
</ol>
<p><img src="https://cdn.nlark.com/yuque/0/2024/png/12885947/1716433448190-6bcdcea1-090b-4b6e-844b-db57f09551a9.png#averageHue=%23eeeeed&amp;clientId=u2db50134-249f-4&amp;from=paste&amp;height=285&amp;id=R4VvP&amp;originHeight=424&amp;originWidth=428&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=14771&amp;status=done&amp;style=none&amp;taskId=ue08112ae-4ce1-4d16-97b5-adb9378c3cd&amp;title=&amp;width=287.3999938964844" alt="image.png"></p>
<ol start="2">
<li class="lvl-3">
<p>插件启动前，选择合适的图片，当前图片会被充当全局锚点。</p>
</li>
<li class="lvl-3">
<p>打开<strong>StackReg。</strong></p>
</li>
</ol>
<p><img src="https://cdn.nlark.com/yuque/0/2024/png/12885947/1716433608518-f4f2cfa8-5406-4ef7-876d-c4ffb225cf73.png#averageHue=%23b3a180&amp;clientId=u2db50134-249f-4&amp;from=paste&amp;height=313&amp;id=pzPnz&amp;originHeight=491&amp;originWidth=605&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=213183&amp;status=done&amp;style=none&amp;taskId=u427dd8d1-e0e2-49ce-9122-31b6a47e994&amp;title=&amp;width=386" alt="image.png"></p>
<ol start="4">
<li class="lvl-3">
<p>选择对齐方式，点击确定按钮。</p>
</li>
</ol>
<p><img src="https://cdn.nlark.com/yuque/0/2024/png/12885947/1716433643863-8b44a1f7-eb00-4ac3-9f28-b4da3cb4d467.png#averageHue=%23edebe9&amp;clientId=u2db50134-249f-4&amp;from=paste&amp;height=125&amp;id=cH9EB&amp;originHeight=156&amp;originWidth=236&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=7246&amp;status=done&amp;style=none&amp;taskId=u745533d0-9a3d-4fde-8597-410e8b9e3eb&amp;title=&amp;width=188.8" alt="image.png"><br>
<a name="zAAf8"></a></p>
<h4 id="配准结果展示">配准结果展示</h4>
<p><strong>Translation</strong><br /><img src="https://cdn.nlark.com/yuque/0/2024/gif/12885947/1716437482059-89fc3429-bad3-4efb-8f57-e2b6980bd685.gif#averageHue=%23bebfbd&amp;clientId=u89d4ed3b-c40f-4&amp;from=drop&amp;id=u815598a6&amp;originHeight=1000&amp;originWidth=2057&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=4864016&amp;status=done&amp;style=none&amp;taskId=ua36500ba-dce8-49d3-a2dd-78c2e561927&amp;title=" alt="攀爬2-移动-缩小.gif"><br /><strong>Rigid Body</strong><br /><img src="https://cdn.nlark.com/yuque/0/2024/gif/12885947/1716437732425-3650fea3-632c-496f-a40a-27c5a7adc316.gif#averageHue=%23bebfbd&amp;clientId=u89d4ed3b-c40f-4&amp;from=drop&amp;id=u66c7948b&amp;originHeight=1000&amp;originWidth=2057&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=4902674&amp;status=done&amp;style=none&amp;taskId=u45d2d0ba-9870-43ee-8089-153602f6b05&amp;title=" alt="攀爬2-rigid-缩小.gif"><br /><strong>Scaled rotation</strong><br /><img src="https://cdn.nlark.com/yuque/0/2024/gif/12885947/1716438022750-6e21a2ae-fea6-497e-860e-d85616f849a9.gif#averageHue=%23c0c0be&amp;clientId=u89d4ed3b-c40f-4&amp;from=drop&amp;id=u5e78df36&amp;originHeight=1960&amp;originWidth=4032&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=16556324&amp;status=done&amp;style=none&amp;taskId=u99a6e12e-93c9-4cd1-bf54-cc01b9e9b5b&amp;title=" alt="WT-处-control-20211218-scaled.gif"><br /><strong>Affine</strong><br /><img src="https://cdn.nlark.com/yuque/0/2024/gif/12885947/1716438247733-91b6a52e-7abe-4303-a27b-b9389f62063c.gif#averageHue=%23bebfbd&amp;clientId=u89d4ed3b-c40f-4&amp;from=drop&amp;id=uc96e2e67&amp;originHeight=1000&amp;originWidth=2057&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=4699672&amp;status=done&amp;style=none&amp;taskId=u77f49e48-451d-4b37-876b-5276b590ccd&amp;title=" alt="攀爬2-affine-缩小.gif"><br>
<a name="ba311d8a"></a></p>
<h2 id="脚本">脚本</h2>
<p>StackReg 是可编写脚本和使用宏记录的。下面是一个从宏调用 StackReg 的示例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">run(<span class="string">&quot;StackReg &quot;</span>, <span class="string">&quot;transformation=[Rigid Body]&quot;</span>);</span><br></pre></td></tr></table></figure>
<p><a name="d17a0f0b"></a></p>
<h2 id="参考">参考</h2>
<ol>
<li class="lvl-3">
<p><span class="exturl" data-url="aHR0cHM6Ly9iaWd3d3cuZXBmbC5jaC90aGV2ZW5hei9zdGFja3JlZy8=">https://bigwww.epfl.ch/thevenaz/stackreg/<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li class="lvl-3">
<p>P. Thévenaz, U.E. Ruttimann, M. Unser, “A Pyramid Approach to Subpixel Registration Based on Intensity,” IEEE Transactions on Image Processing, vol. 7, no. 1, pp. 27-41, January 1998. Other relevant on-line publications are available at <span class="exturl" data-url="aHR0cDovL2JpZ3d3dy5lcGZsLmNoL3B1YmxpY2F0aW9ucy8=">http://bigwww.epfl.ch/publications/<i class="fa fa-external-link-alt"></i></span>.</p>
</li>
</ol>
]]></content>
      <categories>
        <category>笔记</category>
        <category>学习</category>
      </categories>
      <tags>
        <tag>ImageJ</tag>
        <tag>图像</tag>
        <tag>图像配准</tag>
        <tag>stack</tag>
        <tag>StackReg</tag>
      </tags>
  </entry>
  <entry>
    <title>R语言--批量解压文件--示例</title>
    <url>/2024/05/23/979fc3b16655/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="目的">目的</h2>
<p>用R语言批量解压文件到指定目录</p>
<span id="more"></span> 
<h2 id="实例">实例</h2>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">library<span class="punctuation">(</span>tidyverse<span class="punctuation">)</span></span><br><span class="line"><span class="comment"># 工作文件夹</span></span><br><span class="line">setwd<span class="punctuation">(</span><span class="string">&quot;I:\\果蝇锻炼\\201803-不同浓度枸杞攀爬拍照&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 压缩文件列表</span></span><br><span class="line">filelist <span class="operator">&lt;-</span> dir<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">ziplist <span class="operator">&lt;-</span>  filelist<span class="punctuation">[</span>grepl<span class="punctuation">(</span><span class="string">&quot;zip&quot;</span><span class="punctuation">,</span>filelist<span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 循环解压到指定文件夹</span></span><br><span class="line"><span class="keyword">for</span> <span class="punctuation">(</span>i <span class="keyword">in</span> <span class="number">1</span><span class="operator">:</span><span class="built_in">length</span><span class="punctuation">(</span>ziplist<span class="punctuation">)</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  unzip<span class="punctuation">(</span>ziplist<span class="punctuation">[</span>i<span class="punctuation">]</span><span class="punctuation">,</span> exdir <span class="operator">=</span> paste0<span class="punctuation">(</span><span class="string">&quot;E:\\Desktop\\Fly-climb\\&quot;</span><span class="punctuation">,</span>substr<span class="punctuation">(</span>ziplist<span class="punctuation">[</span>i<span class="punctuation">]</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">,</span>str_length<span class="punctuation">(</span>ziplist<span class="punctuation">[</span>i<span class="punctuation">]</span><span class="punctuation">)</span><span class="operator">-</span><span class="number">4</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>原创</category>
        <category>科研</category>
      </categories>
      <tags>
        <tag>R语言</tag>
        <tag>批量</tag>
        <tag>实例</tag>
        <tag>解压</tag>
      </tags>
  </entry>
  <entry>
    <title>ImageJ--形态学数据挖掘、三维建模以及图像拼接、配准、编辑和注释-TrakEM2简介</title>
    <url>/2024/05/16/4681ff84ccf3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>TrakEM2 是一个 ImageJ 插件，用于形态学数据挖掘、三维建模以及图像拼接、配准、编辑和注释。</p>
<span id="more"></span> 
<h2 id="设备要求">设备要求</h2>
<p>要运行 TrakEM2，该为 Fiji 的 JVM 分配多少内存？<br>
取数据集中最大的单个二维图像，然后将其大小乘以 10，并确保 CPU 的每个内核至少有这么多可用内存。<br>
例如，对于 4096x4096 16 位图像，每个内核至少需要 335 Mb，因此 16 个内核至少需要 5.4 Gb 内存。8 Gb 可能会更好。32GB 的内存使用起来会很方便。<br>
至于显卡，在计算能力和内置内存方面都要买你能负担得起的最大显卡。</p>
<h2 id="特征">特征</h2>
<ul class="lvl-0">
<li class="lvl-2">
<p><strong>特征分割：</strong> 在堆栈(stack)上手动绘制区域，用球和管道勾勒结构。骨架化整个神经元轴突，用关系连接器对象表示突触。</p>
</li>
<li class="lvl-2">
<p><strong>测量：</strong> 体积、表面、长度，以及通过 ImageJ ROI 进行测量。</p>
</li>
<li class="lvl-2">
<p><strong>图像配准：</strong> 使用 SIFT 和全局优化算法将浮动图块相互配准。</p>
</li>
<li class="lvl-2">
<p><strong>三维可视化：</strong> 通过与三维浏览器插件交互，TrakEM2 可显示图像体积和各种三维网格。</p>
</li>
<li class="lvl-2">
<p><strong>图像注释：</strong> 浮动文本标签。</p>
</li>
<li class="lvl-2">
<p><strong>语义分割：</strong> 以树状层次排列分割，其模板可导出供其他类似项目重复使用。</p>
</li>
</ul>
<h2 id=""></h2>
<ul class="lvl-0">
<li class="lvl-2">
<p>通过 &quot;File - New - TrakEM2 (blank)&quot;创建新项目</p>
</li>
<li class="lvl-2">
<p>通过将 .xml 文件拖到工具栏上或通过 &quot;文件 - 打开 &quot;打开现有项目。</p>
</li>
</ul>
<h2 id="TrakEM2最佳性能设定">TrakEM2最佳性能设定</h2>
<h3 id="加快图层浏览">加快图层浏览</h3>
<p>右键单击画布，选择 “Display - Properties…”。然后确保</p>
<ul class="lvl-0">
<li class="lvl-2">
<p>&quot;snapshots mode &quot;设置为 “Disabled”，或最多设置为 “Outlines”。</p>
</li>
<li class="lvl-2">
<p>取消&quot;Prepaint&quot;，使其处于禁用状态。</p>
</li>
</ul>
<h3 id="导入大量图像，并在导入后立即进行编辑">导入大量图像，并在导入后立即进行编辑</h3>
<p>避免多次生成 mip，不启用 “enable mipmaps”，使其处于禁用状态。由于不会生成贴图，将无法在导入时快速浏览图层。现在要纠正对比度，首先要重新启用 mipmaps，方法是：&quot;Display - Properties&quot;并选中 “enable mipmaps” 复选框。然后有两个（非排他性）选项：</p>
<ul class="lvl-0">
<li class="lvl-2">
<p>A. 使用右键菜单中的内置命令，例如</p>
<ul class="lvl-2">
<li class="lvl-6">“Adjust images - Enhance contrast layer-wise”</li>
<li class="lvl-6">“Adjust images - Set min and max layer-wise”。</li>
</ul>
</li>
<li class="lvl-2">
<p>B. 创建一个预处理器脚本并将其设置为所有图像。例如，在每个图像上运行 CLAHE 的 beanshell 脚本。在脚本中，patch 和 imp 变量自动存在，分别代表 Patch 实例和 Patch 封装的 ImagePlus 实例。</p>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> ij.IJ;</span><br><span class="line">IJ.run(imp, <span class="string">&quot;Enhance Local Contrast (CLAHE)&quot;</span>, <span class="string">&quot;blocksize=127&quot;</span></span><br><span class="line">   + <span class="string">&quot; histogram=256 maximum=3 mask=*None* fast_(less_accurate)&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>要将脚本设置为所有图像，请将上述内容保存到名为 “whatever.bsh “的文件中（注意文件名扩展名为”.bsh”），然后右键单击 TrakEM2 画布，选择 “Script - Set preprocessor script layer-wise”，并选择整个图层范围。这会将脚本设置到每个图层的每个图像上，并触发每个图像的 mipmap 再生。当 TrakEM2 加载图像时，脚本将在 TrakEM2 看到图像内容之前在图像上运行。</p>
<h3 id="快速重新生成-mipmap">快速重新生成 mipmap</h3>
<p>mipmap 的默认生成方式是平均生成，速度相当快。不过，还可以考虑将其并行化：进入 “Project - Properties…”，将 mipmap 线程数设置为您机器的内核数，例如 12。如果选择使用高斯模式生成 mipmaps，请进入 “Project - Properties…”，将 mipmaps 模式设置为 “Gaussian”。必须注意以下事项：<br>
在 TrakEM2 0.9a 及更高版本中，mipmaps 机器可以使用最新 ImageJ 中的多线程高斯实现。这意味着现在有两组线程：</p>
<ul class="lvl-0">
<li class="lvl-2">
<p>线程集，每个线程重新生成单张图像的 mipmap 金字塔。</p>
</li>
<li class="lvl-2">
<p>在生成 mipmap 金字塔的过程中，每迭代一次缩放，就会有一组线程执行高斯模糊降采样。</p>
</li>
</ul>
<p>如果您的机器有 12 个内核，默认设置将使用 1 个线程处理 mipmap，12 个线程处理高斯模糊。这可能不符合您的数据属性：如果图像较小，您可能需要等待很长时间才能生成 mipmap。有两种策略可以加速基于高斯的 mipmaps 生成：</p>
<ul class="lvl-0">
<li class="lvl-2">
<p>策略 A：您的数据由大图像组成（超过 4000x4000）。右键单击 TrakEM2 显示屏，选择 “Project - Properties…”，将 mipmap 线程设置为 1（默认值）。现在，将使用 12 个线程（给定 12 个内核）计算高斯，每次为单个图像重新生成 mipmap。</p>
</li>
<li class="lvl-2">
<p>策略 B：您的数据由小图像组成（小于 4000x4000）。进入 Fiji 窗口，选择 “Edit - Options - Memory &amp; Threads…”，将线程数设为 1。 然后进入 “Project - Properties…”，将 mipmap 线程数设为 12。现在，mipmap 将一次生成 12 幅图像（给定 12 个内核），每幅图像使用一个线程计算高斯。</p>
</li>
</ul>
<p>如果您的电脑内存较少，或者访问图像的速度较慢（例如数据保存在 USB 硬盘中），也可以使用策略 A。这就是为什么默认情况下只用一个线程生成 mipmaps。<br>
如果将生成 mipmaps 的方法改为非高斯方法，就不会出现上述情况。将生成 mipmaps 的线程数设置为内核数，如果电脑内存不多，则设置为更少的线程数。</p>
<h3 id="使用更大的quadtree-buckets，XML-加载更快，内存消耗更少">使用更大的quadtree buckets，XML 加载更快，内存消耗更少</h3>
<p>除了为大图像选择合适的 mipmap 生成策略外，还要确保适当设置bucket的大小。<br>
<strong>什么是 TrakEM2 中的 “bucket”：</strong> 每个层（每个部分）都有一个内部四叉树，用于查找鼠标下的对象（如图像），或快速查找与其他图像重叠的图像。换句话说，就是能够执行快速空间查询，例如查找与给定矩形相交的所有图像列表。<br>
如果图像bucket的尺寸很小（默认边长为 4096 像素，那么一个图像桶就是一个 4096x4096 像素的正方形，这可以说是相当小了），再加上画布尺寸很大，生成的图像桶就会太多。这将耗费大量时间和内存。如果您的每个部分只有大约 100 张图片，而且图片都比较大（例如，每张图片的尺寸为 8096x8096 像素），那么请将bucket大小设置为比默认值大得多的值，例如 100000。这样实际上就只有一个bucket了。<br>
当一个图层中有许多小对象或许多小的 zdisplayable 对象时，就需要使用小的数据bucket。在这种情况下，例如每个图层只有一个图像，但其中有许多较小的 Ball 或 Pipe 或 AreaList 对象，那么可以使用默认的数据bucket大小（4096）或更小。否则，可以选择大尺寸甚至超大尺寸，这样就能有效地移除bucket功能，并简化为列表搜索，而列表搜索对于 100 张左右的小图像列表来说是没有问题的。    在配准/对齐分布在 5000 个部分的 400,000 张图片时，将图片桶设置为大（如 40960，默认值的 10 倍，甚至更大）是合理的。    将数据bucket大小设置为较大值将大大减少 XML 的加载时间。    要设置数据bucket大小，请右键单击并选择 “Display - Properties …”，然后写入数据桶大小值。</p>
<h2 id="TrakEM2-一些脚本">TrakEM2 一些脚本</h2>
<p>打开 “Plugins - Scripting - Jython Interpreter”（请参阅 “<span class="exturl" data-url="aHR0cHM6Ly9pbWFnZWoubmV0L3NjcmlwdGluZw==">脚本帮助<i class="fa fa-external-link-alt"></i></span>”），确保打开了 TrakEM2 项目，并打开显示图片。然后键入或粘贴下面的示例。或者使用 &quot;File - New - Script&quot;打开一个新的脚本编辑器窗口，然后粘贴示例，选择 “Language - Python”，并按下 &quot;Run &quot;按钮。基础：</p>
<ul class="lvl-0">
<li class="lvl-2">
<p>拖动图像并将其可视化的画布是显示对象的一部分。后者拥有访问其 &quot;选区 &quot;以及 &quot;显示 &quot;正在查看的 &quot;图层 &quot;和 &quot;图层集 &quot;的方法。</p>
</li>
<li class="lvl-2">
<p>图层包含 Patch（每个 Patch 都包裹着一幅图像）和 DLabel（浮动文本）等 2D 对象。</p>
</li>
<li class="lvl-2">
<p>LayerSet 包含三维对象，如 AreaList、Pipe、Polyline、Ball、Dissector、Treeline 和 Stack（后者封装了包含 ij.ImageStack 的 ij.ImagePlus）。</p>
</li>
</ul>
<h3 id="获取所选图像实例">获取所选图像实例</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>p = Display.getFront().getActive()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span> p</span><br><span class="line">    090504_0314_ex0768.mrc z=<span class="number">0.0</span> <span class="comment">#67398</span></span><br></pre></td></tr></table></figure>
<h3 id="获取选定图像的ImagePlus">获取选定图像的ImagePlus</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>p = Display.getFront().getActive()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>imp = p.getImagePlus()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span> imp.width, imp.height</span><br><span class="line">    <span class="number">2048</span> <span class="number">2048</span></span><br></pre></td></tr></table></figure>
<h2 id="访问图层和选择显示">访问图层和选择显示</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>front = Display.getFront()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>layer = front.getLayer()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>layer_set = front.getLayerSet()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sel = front.getSelection()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span> sel.getSelected().size()</span><br><span class="line">    <span class="number">10</span></span><br><span class="line">    &gt;&gt;&gt; <span class="built_in">print</span> sel.isEmpty()</span><br><span class="line">    <span class="number">0</span></span><br></pre></td></tr></table></figure>
<h2 id="参考">参考</h2>
<ol>
<li class="lvl-3">
<p><span class="exturl" data-url="aHR0cHM6Ly9pbWFnZWoubmV0L3BsdWdpbnMvdHJha2VtMi8=">https://imagej.net/plugins/trakem2/<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li class="lvl-3">
<p>Cardona, A., Saalfeld, S., Schindelin, J., Arganda-Carreras, I., Preibisch, S., Longair, M., … Douglas, R. J. (2012). TrakEM2 Software for Neural Circuit Reconstruction. PLoS ONE, 7(6), e38011. doi:10.1371/journal.pone.0038011</p>
</li>
<li class="lvl-3">
<p><span class="exturl" data-url="aHR0cHM6Ly9zeW4ubXJjLWxtYi5jYW0uYWMudWsvYWNhcmRvbmEvSU5JLTIwMDgtMjAxMS9kYXRhLmh0bWw=">https://syn.mrc-lmb.cam.ac.uk/acardona/INI-2008-2011/data.html<i class="fa fa-external-link-alt"></i></span></p>
</li>
</ol>
]]></content>
      <categories>
        <category>笔记</category>
        <category>学习</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>ImageJ</tag>
        <tag>图像拼接</tag>
        <tag>TrakEM2</tag>
        <tag>简介</tag>
        <tag>图像配准</tag>
      </tags>
  </entry>
  <entry>
    <title>R语言--SimpleITK</title>
    <url>/2024/05/16/ef7e309aa1eb/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>SimpleITK</strong> 是 Insight 工具包（ITK）算法和数据结构的简化编程接口。它支持多种编程语言的接口，包括 C++、Python、R、Java、C#、Lua、Ruby 和 TCL。这些绑定使科学家能够用他们最熟悉的编程语言开发图像分析工作流。该工具包支持 15 种以上不同的图像文件格式，提供 280 多种图像分析过滤器，并为 ITK 基于强度的配准框架实现了统一接口。</p>
<span id="more"></span>
<h2 id="特点">特点</h2>
<p>使用 Python、R、Java、C#、Lua、Ruby、TCL 和 C++ 进行开源多维图像分析。由 Insight 工具包社区为生物医学科学及其他领域开发。</p>
<ul class="lvl-0">
<li class="lvl-2">被视为空间对象而非像素阵列的图像。计算在二维或三维物理空间中进行。</li>
<li class="lvl-2">利用刚性或可变形变换快速配准二维和三维模内和模间图像的配准框架。</li>
<li class="lvl-2">从经典的Otsu thresholding到水平集(level sets) 和分水岭(watersheds)，为图像分割工作流程提供了丰富的过滤器。</li>
<li class="lvl-2">评估分割结果（豪斯多夫距离、雅卡德值和骰子值、表面距离等&lt;Hausdorff distance, Jaccard and Dice values, surface distances etc.&gt; ）和分析分割形状特征（定向边界框、主矩、周长、伸长率、费雷特直径等&lt;oriented bounding box, principal moments, perimeter, elongation, Feret diameter etc.&gt;）的工具。</li>
<li class="lvl-2">图像文件输入/输出，支持 20 多种图像文件格式（jpg、png、DICOM、TIFF 等），并可在不同格式间轻松转换。</li>
<li class="lvl-2">通过基于进程和线程的并行化，可随时集成到集群或台式机的并行处理框架中。</li>
</ul>
<h2 id="安装R包-SimpleITKRInstaller">安装R包-SimpleITKRInstaller</h2>
<p><code>devtools::install_github(&quot;SimpleITK/SimpleITKRInstaller&quot;)</code></p>
<h2 id="Fiji">Fiji</h2>
<p>SimpleITK 有一个内置函数 <code>itk::simple::Show()</code>，可用于在交互会话中查看图像。默认情况下，该 Show 函数会搜索已安装的 Fiji 来显示图像。如果找不到 Fiji，则会搜索 ImageJ。选择 Fiji/ImageJ 是因为它们可以处理 SimpleITK 支持的所有图像类型，包括每像素有 n 个分量的 3D 矢量图像。    Show 函数会在多个标准位置搜索 Fiji/ImageJ。具体位置取决于系统类型（Linux、Mac 或 Windows）。启用 &quot;Show &quot;的 &quot;debugOn &quot;选项后，用户可以看到 SimpleITK 正在搜索 Fiji（或其他查看应用程序）的位置，以及用于启动查看应用程序的实际命令。    Show 是 ImageViewer 类的功能接口。可以使用 ImageViewer 对象配置其他查看应用程序.</p>
<hr>
<h2 id="图片导入和导出">图片导入和导出</h2>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">library<span class="punctuation">(</span>SimpleITK<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">reader <span class="operator">&lt;-</span> ImageFileReader<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">reader<span class="operator">$</span>SetImageIO<span class="punctuation">(</span><span class="string">&quot;PNGImageIO&quot;</span><span class="punctuation">)</span></span><br><span class="line">reader<span class="operator">$</span>SetFileName<span class="punctuation">(</span>inputImageFileName<span class="punctuation">)</span></span><br><span class="line">image <span class="operator">&lt;-</span> reader<span class="operator">$</span>Execute<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">writer <span class="operator">&lt;-</span> ImageFileWriter<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">writer<span class="operator">$</span>SetFileName<span class="punctuation">(</span>outputImageFileName<span class="punctuation">)</span></span><br><span class="line">writer<span class="operator">$</span>Execute<span class="punctuation">(</span>image<span class="punctuation">)</span></span><br></pre></td></tr></table></figure>
<p>上面的示例指定使用 PNGImageIO 来读取文件。如果省略该行，SimpleITK 将根据文件名的后缀和/或文件头自动确定要使用哪个 IO。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">image <span class="operator">&lt;-</span> ReadImage<span class="punctuation">(</span>inputImageFileName<span class="punctuation">)</span></span><br><span class="line">WriteImage<span class="punctuation">(</span>image<span class="punctuation">,</span> outputImageFileName<span class="punctuation">)</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>笔记</category>
        <category>学习</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>ImageJ</tag>
        <tag>图像</tag>
        <tag>插件</tag>
        <tag>简介</tag>
      </tags>
  </entry>
  <entry>
    <title>从出生那天开始，你就是“局外人”</title>
    <url>/2024/05/10/51fa0d872217/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="你">你</h2>
<p>如果你是中国的90后，那你的出生就已经是个错误。这个错是谁跟你定的呢？谁管呢，谁让你赶在了这个糟糕的年代。</p>
<span id="more"></span>
<p>20世纪90年代正是计划生育实行最没“人性”的时代，你出生了。不是独生子，就是“计划外”。独生子的你以后要独自承担这个家，而计划外的你现在就要面临活下去的困难。好了，挨过了出生这道屏障。上小学到5年级，突然多了一个6年级。<br>
2003年，你又赶上了非典。接着又赶上了高考改革。后来你又赶上了考研公费取消。都这样了你还不死心考了博士，硕博的毕业条件一年比一年离谱，而教育水平似乎并没有改变。你迟迟没有毕业，等到的却是新冠肺炎。毕业条件提高，盲审条件提高，毕业难度加大。以后你将面临人口老龄化。这于你来说就是最糟糕的年代。你被抛弃之人，就没有家。却还要对这个屋檐感恩戴德。</p>
<hr>
<blockquote>
<p>智谱清言修改</p>
</blockquote>
<h1>90后的挑战与机遇</h1>
<h2 id="出生背景">出生背景</h2>
<p><strong>20世纪90年代的中国</strong>，你作为90后的一员，出生在一个社会变革的时期。计划生育政策在这一时期达到了严格的顶峰，你的出生或许被标记为“错误”，但这个“错误”并非由你造成，而是那个时代的社会环境所决定。作为独生子女，你将承担家庭的重任；若是“计划外”的孩子，你则面临更多的生存挑战。</p>
<h2 id="教育经历">教育经历</h2>
<p><strong>教育之路</strong>，从小学到五年级，教育体系的变化让你不得不适应新的六年级。2003年，非典疫情爆发，给你带来了关于生命和健康的新认知。随后，高考改革对你提出了新的要求，你需要适应新的考试制度和教育模式。</p>
<h2 id="高等教育">高等教育</h2>
<p><strong>高等教育的挑战</strong>，考研公费的取消增加了你的经济负担，但你仍选择继续深造，攻读硕士和博士学位。然而，毕业条件逐年提高，盲审制度变得更加严格，使得毕业难度不断加大。</p>
<h2 id="新冠肺炎疫情">新冠肺炎疫情</h2>
<p><strong>疫情的冲击</strong>，当你即将完成学业之际，新冠肺炎疫情爆发，就业市场急剧萎缩，你面临着更加激烈的竞争和不确定性。</p>
<h2 id="人口老龄化">人口老龄化</h2>
<p><strong>面对未来</strong>，中国正面临人口老龄化的挑战。随着生育率的下降和人口结构的变化，你需要在工作和生活中承担更多的责任，并为未来的养老问题做好准备。</p>
<h2 id="坚持与希望">坚持与希望</h2>
<p>在这个充满挑战的时代，90后似乎成了被抛弃的一代。然而，你们依然坚持着自己的梦想，努力寻找属于自己的位置。或许对现状感到不满，但你们明白，只有通过自己的努力，才能在这个不断变化的世界中找到属于自己的道路。</p>
<details open>
<summary><span class="pre-summary">&nbsp;</span><strong>修改前</strong></summary><p>在中国的90后，出生在一个特殊的历史时期，这个时期的社会变革和发展对他们的成长产生了深远的影响。20世纪90年代，中国实行了一项具有深远历史意义的人口政策——计划生育。这项政策旨在控制人口增长，提高人口素质，但由于其严格的实施方式，也引发了一系列社会问题。对于90后来说，他们的出生就伴随着这样的背景，这无疑是一个巨大的挑战。如果你是中国的90后，那么你的出生就已经是个错误。这个错误不是由你决定的，而是由那个时代的社会环境决定的。在当时，计划生育政策被视为控制人口增长的必要手段，但对于许多家庭来说，这却是一种痛苦的选择。如果你是独生子女，那么你将承担起家庭的重任，独自面对未来的挑战。如果你是“计划外”的孩子，那么你的出生将面临更多的困难和挑战，你可能需要为生存而奋斗。在度过了出生这道难关后，90后的孩子们开始接受教育。然而，他们又遇到了新的挑战。在上小学到5年级的过程中，突然多出了一个6年级。这一变化让许多学生感到困惑和不适，他们不得不适应新的教育体系。然而，这仅仅是他们成长过程中的一部分。<br>
2003年，中国爆发了非典疫情。这场突如其来的灾难对整个社会造成了巨大的冲击，也影响了90后的成长。他们不得不学会面对疾病和死亡，学会珍惜生命和健康。这场疫情也让人们意识到公共卫生的重要性，推动了中国医疗卫生体系的改革和发展。随着90后的成长，他们又迎来了高考改革。这一改革旨在减轻学生的学业压力，提高教育的公平性和质量。然而，对于90后来说，这又是一次挑战。他们需要适应新的考试制度和教育模式，努力提高自己的综合素质和能力。在经历了高考改革后，90后又迎来了考研公费的取消。这一政策变化使得研究生教育变得更加市场化，也增加了学生的经济负担。对于许多90后来说，这无疑是一个巨大的压力。他们需要为自己的未来付出更多的努力和汗水，才能实现自己的梦想。随着就业困难，物价疯涨，90后一代中很多的人选择继续深造，攻读硕士和博士学位。然而，他们发现，硕博的毕业条件逐年提高，盲审制度变得更加严格，毕业难度不断加大。这些变化对他们的学术生涯和心理健康都带来了巨大的压力。即便如此，他们依然坚持不懈地追求知识，希望能够在学术领域取得突破。然而，就在他们即将完成学业之际，新冠肺炎的爆发给了他们新的打击。疫情导致毕业生的就业市场急剧萎缩，许多行业受到重创，就业机会减少。对于即将步入社会的博士生来说，这意味着他们需要面对更加激烈的竞争和不确定性。与此同时，中国正面临着人口老龄化的严峻挑战。随着生育率的下降和人口结构的变化，年轻劳动力市场的供给将逐渐减少，而老年人口的比例将不断上升。这对于90后来说，不仅意味着他们需要在工作和生活中承担更多的责任，还意味着他们需要为未来的养老问题做好准备。在这个充满挑战的时代，90后似乎成了被抛弃的一代。他们不仅要应对现实的压力，还要为未来的不确定性做好准备。然而，他们依然坚持着自己的梦想，努力寻找属于自己的位置。他们或许对现状感到不满，但他们也明白，只有通过自己的努力，才能在这个不断变化的世界中找到属于自己的道路。</p>
</details>
]]></content>
      <categories>
        <category>原创</category>
        <category>生活</category>
      </categories>
      <tags>
        <tag>局外人</tag>
        <tag>随笔</tag>
        <tag>牢骚</tag>
        <tag>时代</tag>
      </tags>
  </entry>
  <entry>
    <title>ImageJ--Feature Finder插件</title>
    <url>/2024/05/09/0673e2301734/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="/images/feature-finder-screenshot.jpg=100x100" alt=""><br>
<strong>Feature Finder</strong> 是ImageJ 中的图像模板匹配（Template Matching）插件，用于查找与原型（模板）相同或相似的特征。&quot;相似 &quot;是指图像与原型之间的均方偏差应该很小。</p>
<span id="more"></span> 
<p><img src="/images/20240509_223918_00000.png" alt=""></p>
<h2 id="用途">用途</h2>
<blockquote>
<ul class="lvl-1">
<li class="lvl-2">
<p>目标检测：通过将已知目标作为模板，在图像中寻找与模板最相似的区域，从而实现目标的检测。</p>
</li>
<li class="lvl-2">
<p>物体跟踪：通过不断更新模板，可以实现对移动目标在视频序列中的跟踪。</p>
</li>
<li class="lvl-2">
<p>字符识别：通过利用字符的模板，可以识别文本中的字符或数字。</p>
</li>
</ul>
</blockquote>
<h2 id="特点">特点</h2>
<p><strong>优点：</strong></p>
<ul class="lvl-0">
<li class="lvl-2">
<p>经过（缓慢的）初始计算后，预览提供了一种快速确定相似度阈值的方法。</p>
</li>
<li class="lvl-2">
<p>亚像素精度。</p>
</li>
<li class="lvl-2">
<p>在预览过程中，可以通过对找到的特征进行平均来完善原型。</p>
</li>
</ul>
<p><strong>局限：</strong></p>
<ul class="lvl-0">
<li class="lvl-2">
<p>仅适用于灰度图像；像素值的任何校准都会被忽略。</p>
</li>
<li class="lvl-2">
<p>只能搜索未旋转（或圆形）和未缩放的特征。</p>
</li>
<li class="lvl-2">
<p>速度较慢，小原型除外（暴力算法，无 FFT）。</p>
</li>
<li class="lvl-2">
<p>预览期间，当进度条处于激活状态时：不要更改对话框中的任何输入，否则会重新启动，耗时更长。</p>
</li>
<li class="lvl-2">
<p>不处理堆栈。</p>
</li>
</ul>
<h2 id="安装">安装</h2>
<ul class="lvl-0">
<li class="lvl-2">
<p>下载<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2ltYWdlai9pbWFnZWouZ2l0aHViLmlvL2Jsb2IvbWFpbi9tZWRpYS9wbHVnaW5zL2ZlYXR1cmUtZmluZGVyL0ZlYXR1cmVfRmluZGVyLmphdmE=">Feature_Finder.java<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li class="lvl-2">
<p>将原始的 <code>Feature_Finder.java</code> 文件复制到 ImageJ 插件文件夹 (plugins) 或其子文件夹中。确保将下载的文件命名为 “Feature_Finder.java”；大写/小写都很重要。</p>
</li>
<li class="lvl-2">
<p>使用 &quot;编译并运行 (Compile and Run)&quot;进行编译，然后按 “确定”。请注意，&quot;编译并运行 &quot;功能目前在 Fiji 上无法使用；作为一种变通方法，请使用文件&gt;新建&gt;脚本，打开 Feature_Finder.java 文件并按 “运行”。</p>
</li>
<li class="lvl-2">
<p>使用 “帮助”&gt;&quot;更新菜单 &quot;或重新启动 ImageJ 使其出现在插件菜单中（如果您已使用 Fiji 脚本编辑器，则无需使用）。</p>
</li>
</ul>
<h2 id="参数选项-Dialog-Options">参数选项 (Dialog Options)</h2>
<ul class="lvl-0">
<li class="lvl-2">
<p><strong>Prototype from</strong> 选择原型 (prototype)。这可以是当前图像或不同图像的 ROI。</p>
</li>
<li class="lvl-2">
<p><strong>Output Type</strong> 可以是：</p>
<ul class="lvl-2">
<li class="lvl-6">点选择：所有特征中心的点 ROI。</li>
<li class="lvl-6">计数：找到的特征数量写入结果表。</li>
<li class="lvl-6">列表：中心的 x 和 y 像素坐标列表被写入结果表。</li>
<li class="lvl-6">列表（校准）：与“列表”类似，但将校准的 x 和 y 坐标写入结果表。</li>
<li class="lvl-6">点图：一个单独的二值图像，每个特征的中心有一个像素 = 255。</li>
<li class="lvl-6">偏差图：单独的浮点（32 位）图像。每个点的值表示原始图像中该位置的周围环境与原型的偏离程度。偏差图独立于“公差”设置。</li>
<li class="lvl-6">特征平均值：单独的浮点（32 位）输出图像，所有特征的平均值移动到同一位置。</li>
</ul>
</li>
<li class="lvl-2">
<p><strong>Subtract Background</strong>使用减去背景，特征被认为是相同的，独立于任何恒定（相加）背景。</p>
</li>
<li class="lvl-2">
<p><strong>Soft Edges</strong> 软边缘为原型的近边缘像素赋予的权重小于靠近中心的像素的权重。</p>
</li>
<li class="lvl-2">
<p><strong>Distance Min</strong>如果要素靠得很近，小于“最小距离”，则仅保留最匹配的要素。</p>
</li>
<li class="lvl-2">
<p><strong>Tolerance</strong>公差决定了特征与原型的偏差程度。值 0 表示完全匹配，100 表示偏差等于原型的方差。启用“减去背景”后，在公差为 100% 的情况下，原型区域上具有恒定值的图像区域也符合特征。</p>
</li>
<li class="lvl-2">
<p><strong>Refine</strong> 在预览过程中，设置容差后，您可以按“调整”按钮。这会根据当前选择的所有特征的平均值计算出新的原型。例如，如果原型受到噪声影响，“优化”很有用。在预览期间，该对话框还显示特征数量与原型偏差的直方图以及包含找到的特征数量的消息。</p>
</li>
</ul>
<h2 id="提示和技巧">提示和技巧</h2>
<ul class="lvl-0">
<li class="lvl-2">
<p>在预览过程中，直方图右侧经常会出现一个宽阔的峰值。这就是假匹配。请将阈值保持在该峰值以下。</p>
</li>
<li class="lvl-2">
<p>特征应与原型具有相同的灰度对比度。如果不是这种情况，建议选择图像中可能出现的对比度最高的模板。</p>
</li>
<li class="lvl-2">
<p>如果阈值法失败，也可以尝试创建偏差图并对其进行处理（背景减除、高通滤波器、查找最大值…）。</p>
</li>
</ul>
<h2 id="参考">参考</h2>
<ol>
<li class="lvl-3">
<p><span class="exturl" data-url="aHR0cHM6Ly9pbWFnZWouZ2l0aHViLmlvL3BsdWdpbnMvZmVhdHVyZS1maW5kZXI=">https://imagej.github.io/plugins/feature-finder<i class="fa fa-external-link-alt"></i></span></p>
</li>
<li class="lvl-3">
<p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3R3bmtpZS9hcnRpY2xlL2RldGFpbHMvMTMyMTU0MjUz">https://blog.csdn.net/twnkie/article/details/132154253<i class="fa fa-external-link-alt"></i></span></p>
</li>
</ol>
]]></content>
      <categories>
        <category>笔记</category>
        <category>学习</category>
      </categories>
      <tags>
        <tag>ImageJ</tag>
        <tag>图像</tag>
        <tag>特征匹配</tag>
        <tag>Feature Finder</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo新建文章及发布指令--笔记</title>
    <url>/2024/05/08/eda54285e852/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote>
<h1>完成后部署</h1>
<p>您可执行下列的其中一个命令，让 Hexo 在生成完毕后自动部署网站，两个命令的作用是相同的。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt;$ hexo generate --deploy</span><br><span class="line">&gt;$ hexo deploy --generate</span><br><span class="line"></span><br><span class="line">**简写**</span><br><span class="line">&gt;$ hexo g -d</span><br><span class="line">&gt;$ hexo d -g</span><br></pre></td></tr></table></figure>
</blockquote>
<span id="more"></span> 
<h2 id="新建">新建</h2>
<p><code>hexo new [layout] &lt;title&gt;</code><br>
布局（Layout）有三种：post、page 和 draft。</p>
<table>
<thead>
<tr>
<th>布局</th>
<th>路径</th>
</tr>
</thead>
<tbody>
<tr>
<td>post</td>
<td>source/_posts</td>
</tr>
<tr>
<td>page</td>
<td>source</td>
</tr>
<tr>
<td>draft</td>
<td>source/_drafts</td>
</tr>
</tbody>
</table>
<h3 id="新建文章">新建文章</h3>
<p>windows下使用命令行创建新的博客文章如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。<br>
<code>hexo new &quot;post title with whitespace&quot;</code></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">参数	描述</span><br><span class="line">-<span class="selector-tag">p</span>, <span class="attr">--path</span>	自定义新文章的路径</span><br><span class="line">-<span class="attribute">r</span>, <span class="attr">--replace</span>	如果存在同名文章，将其替换</span><br><span class="line">-s, <span class="attr">--slug</span>	文章的 Slug，作为新文章的文件名和发布后的 URL</span><br></pre></td></tr></table></figure>
<p>Hexo 主页文章列表默认会显示文章全文，浏览时很不方便，可以在文章中插入 <!--more--> 进行分段。</p>
<h3 id="新建独立页面">新建独立页面</h3>
<p><code>hexo new page --path about/me &quot;About me&quot;</code><br>
以上命令会创建一个 source/about/me.md 文件，同时 Front Matter 中的 title 为 “About me”</p>
<h3 id="新建草稿">新建草稿</h3>
<p><code>hexo new draft &quot;draft&quot;</code></p>
<h2 id="生成静态网页">生成静态网页</h2>
<p><code>hexo generate</code><br>
可简写为<code>hexo g</code></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">选项	描述</span><br><span class="line">-d, <span class="attr">--deploy</span>	文件生成后立即部署网站</span><br><span class="line">-w, <span class="attr">--watch</span>	监视文件变动</span><br><span class="line">-<span class="selector-tag">b</span>, <span class="attr">--bail</span>	生成过程中如果发生任何未处理的异常则抛出异常</span><br><span class="line">-f, <span class="attr">--force</span>	强制重新生成文件Hexo 引入了差分机制，如果 public 目录存在，那么 hexo <span class="selector-tag">g</span> 只会重新生成改动的文件。使用该参数的效果接近 hexo clean &amp;&amp; hexo generate</span><br><span class="line">-c, <span class="attr">--concurrency</span>	最大同时生成文件的数量，默认无限制</span><br></pre></td></tr></table></figure>
<h2 id="发布">发布</h2>
<p>发表草稿。<br>
<code>hexo publish [layout] &lt;filename&gt;</code></p>
<h2 id="server">server</h2>
<p>启动服务器。默认情况下，访问网址为： <span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdDo0MDAwLyVFMyU4MCU4Mg==">http://localhost:4000/。<i class="fa fa-external-link-alt"></i></span><br>
<code>hexo server</code></p>
<h2 id="布署-deploy">布署(deploy)</h2>
<p><code>hexo deploy</code><br>
可简写为<code>hexo d</code></p>
<h2 id="渲染文件">渲染文件</h2>
<p><code>hexo render &lt;file1&gt; [file2] ...</code></p>
<h2 id="迁移">迁移</h2>
<p><code>hexo migrate &lt;type&gt;</code></p>
<h2 id="清除缓存和已生成的静态文件">清除缓存和已生成的静态文件</h2>
<p>清除缓存文件 (db.json) 和已生成的静态文件 (public)。<br>
<code>hexo clean</code></p>
<h2 id="list">list</h2>
<p>列出网站数据。<br>
<code>hexo list &lt;type&gt;</code></p>
<h2 id="显示草稿">显示草稿</h2>
<p><code>hexo --draft</code><br>
显示 <code>source/_drafts</code> 文件夹中的草稿文章。</p>
]]></content>
      <categories>
        <category>笔记</category>
        <category>其他</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>Hexo</tag>
        <tag>指令</tag>
        <tag>部署</tag>
      </tags>
  </entry>
  <entry>
    <title>RNA-Seq Count数据的标准化(RPKM, FPKM, TPM)-学习笔记</title>
    <url>/2023/09/21/037b43cd53d9/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>测序得到的 <strong>read counts</strong> 数量会受到多种因素的影响，如 <strong>测序深度</strong> 和 <strong>基因长度</strong> 。除了上述两个主要因素外，还会有其他因素对read counts的检测有所影响，例如转录组的组成，GC含量，random hexamers引起的测序偏好等等。因此测序得到的read counts需要标准化后才能进行比较。标准化的方式有 <strong>RPKM</strong> ， <strong>FPKM</strong>， <strong>TPM</strong> 。其中TPM被更多人认可。</p>
<span id="more"></span> 
<p><strong>RPKM:</strong> Reads per kilo base per million mapped reads (single-end sequencing)</p>
<p><strong>FPKM:</strong> Fragments per kilo base per million mapped reads (paired-end sequencing)</p>
<p>RPKM与FPKM实际上一样的单位，只不过RPKM是在单端测序文库中使用，而FPKM是双端测序所用的。对基因长度（gene length）以及测序深度（mapped reads from library）都进行了校正。<br>
<img src="https://thereallda.github.io/2022/01/24/%E7%90%86%E8%AE%BA-%E7%AE%80%E8%BF%B0RPKM-FPKM-AND-TPM/image-20220124111816290.png" alt="公式1"></p>
<h3 id="RPKM，FPKM">RPKM，FPKM</h3>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">#x为一个向量存储了每个基因的counts，而gene.length是相应于x中每个基因的长度的一个向量.</span></span><br><span class="line">RPKM <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>x<span class="punctuation">,</span> gene.length<span class="punctuation">)</span><span class="punctuation">&#123;</span> </span><br><span class="line">  lib.size <span class="operator">&lt;-</span> <span class="built_in">sum</span><span class="punctuation">(</span>x<span class="punctuation">)</span></span><br><span class="line">  rpm <span class="operator">&lt;-</span> 1e6 <span class="operator">*</span> x<span class="operator">/</span>lib.size</span><br><span class="line">  rpkm <span class="operator">&lt;-</span> 1e3 <span class="operator">*</span> rpm<span class="operator">/</span>gene.length</span><br><span class="line">  <span class="built_in">return</span><span class="punctuation">(</span>rpkm<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line">FPKM <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>x<span class="punctuation">,</span> gene.length<span class="punctuation">)</span><span class="punctuation">&#123;</span> </span><br><span class="line">  lib.size <span class="operator">&lt;-</span> <span class="built_in">sum</span><span class="punctuation">(</span>x<span class="punctuation">)</span></span><br><span class="line">  rpm <span class="operator">&lt;-</span> 1e6 <span class="operator">*</span> x<span class="operator">/</span>lib.size</span><br><span class="line">  rpkm <span class="operator">&lt;-</span> 1e3 <span class="operator">*</span> rpm<span class="operator">/</span>gene.length</span><br><span class="line">  <span class="built_in">return</span><span class="punctuation">(</span>fpkm<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<h3 id="TPM">TPM</h3>
<p>TPM: Transcript per million<br>
<img src="https://thereallda.github.io/2022/01/24/%E7%90%86%E8%AE%BA-%E7%AE%80%E8%BF%B0RPKM-FPKM-AND-TPM/image-20220124111831499.png" alt="公式2"></p>
<p>TPM对基因的长度进行了校正，计算比对到基因上的reads/基因长度得到长度校正的表达量 reads per kilobase (RPK)。再以文库中RPK之和作为Scale Factor求出TPM。</p>
<figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">TPM &lt;- function(x, gene.<span class="built_in">length</span>)&#123;</span><br><span class="line">  rpk &lt;- <span class="number">1e3</span> * x/gene.<span class="built_in">length</span></span><br><span class="line">  <span class="built_in">scale</span>.<span class="built_in">factor</span> &lt;- <span class="built_in">sum</span>(rpk)</span><br><span class="line">  tpm &lt;- <span class="number">1e6</span> * rpk/<span class="built_in">scale</span>.<span class="built_in">factor</span></span><br><span class="line">  <span class="built_in">return</span>(tpm)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>相比于RPKM使用文库大小（read counts之和）来作为文库校正因子，TPM使用RPK之和作为文库校正因子的好处是考虑了不同样本间的基因长度的分布。因为RPK是一个对基因长度进行校正后的表达量单位，所以RPK之和也不会再带入基因长度的bias。因此，如果需要比较的样本之间转录本分布不一致时（例如不同物种RNA-seq的比较），使用TPM是一个较佳的normalization方案。</p>
<p>RPKM和TPM这类方法就是为了使不同样本间的总体表达量趋于一致，让不同样本间的基因表达量有可比较性，而TPM能够更好地校正样本间的差异。</p>
<p>常用的Normalization 方法总结</p>
<table>
<thead>
<tr>
<th>Normalization method</th>
<th>描述</th>
<th>考虑因素</th>
<th>使用场景</th>
</tr>
</thead>
<tbody>
<tr>
<td>CPM (counts per million)</td>
<td>使用read counts的总和校正counts</td>
<td>测序深度</td>
<td>同一样本组重复样本之间的基因counts比较；不适用于样品内的比较或差异分析</td>
</tr>
<tr>
<td>TPM (transcripts per kilobase million)</td>
<td>每百万mapped reads中每kb转录本上的reads数</td>
<td>测序深度和基因长度</td>
<td>样本内或同一样本组样本之间的基因counts比较； 不适用于差异分析</td>
</tr>
<tr>
<td>RPKM/FPKM (reads/fragments per kilobase of exon per million reads/fragments mapped)</td>
<td>如TPM</td>
<td>测序深度和基因长度</td>
<td>样本内基因间的counts比较; 不适用于样本间比较和差异分析</td>
</tr>
<tr>
<td>DESeq2’s median of ratios [1]</td>
<td>counts除以样本特异的校正因子，该因子由基因计数相对于每个基因的几何平均值的中位数比率确定</td>
<td>测序深度及RNA组成</td>
<td>样本之间的基因counts比较以及差异分析; 不适用于样本内比较</td>
</tr>
<tr>
<td>EdgeR’s trimmed mean of M values (TMM) [2]</td>
<td>使用样本之间的加权截尾的对数表达量比值的均值进行TMM校正</td>
<td>测序深度，RNA组成以及基因长度</td>
<td>样品之间和样品内部的基因counts比较，适用于差异分析</td>
</tr>
</tbody>
</table>
<p>在进行差异表达分析时，我们实际上并不会用到RPKM/FPKM, TPM，而是使用raw counts给到差异分析的工具。这是由于RPKM/FPKM和TPM都没有考虑到样本间文库组成的差异，因而不适合用于样本间差异分析。</p>
<h2 id="获取基因长度">获取基因长度</h2>
<p>计算TPM或RPKM/FPKM等基因表达量时，除了基因的counts信息外，我们还需要知道基因的长度。由于可变剪接的存在，一个基因可能会有多个转录本，在进行基因水平的表达分析时，我们并不会区分各个转录本剪接变体的表达量，而是以基因为单位进行统计。目前，对于基因长度有多种定义，包括：</p>
<ul class="lvl-0">
<li class="lvl-2">
<p>基因最长转录本；</p>
</li>
<li class="lvl-2">
<p>多个转录本长度的平均值；</p>
</li>
<li class="lvl-2">
<p>非重叠外显子长度之和：</p>
</li>
<li class="lvl-2">
<p>非重叠CDS序列长度之和。</p>
</li>
</ul>
<p><img src="https://thereallda.github.io/2022/02/07/R-Retrieve-Gene-Length/paste-CBFC7C07.png" alt="3"></p>
<p>Figure Source: Gene structure</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#使用gtf文件在R中获取基因长度（非重叠外显子长度之和）</span><br><span class="line">#首先，读取计算基因counts时用的GTF文件，并将其转换为TxDb对象；</span><br><span class="line">library(GenomicFeatures)</span><br><span class="line">#一般常用的物种基因注释信息都已经有人构建好TxDb对象，以R包的形式上传到Bioconductor里。我们使用时直接加载、赋值即可。BiocManager::install(&quot;TxDb.Dmelanogaster.UCSC.dm6.ensGene&quot;)</span><br><span class="line">#从本地读取数据库文件 txdb &lt;- makeTxDbFromGFF(&#x27;gencode.vM23.annotation.gtf&#x27;, format=&#x27;gtf&#x27;)</span><br><span class="line">#然后，提取每个基因的外显子注释信息；exons.list.per.gene &lt;- exonsBy(txdb, by=&quot;gene&quot;)</span><br><span class="line">library(TxDb.Dmelanogaster.UCSC.dm6.ensGene)</span><br><span class="line">exons.list.per.gene &lt;- exonsBy(TxDb.Dmelanogaster.UCSC.dm6.ensGene, by=&quot;gene&quot;)</span><br><span class="line">#最后，合并重叠的外显子，计算非重叠外显子的长度作为基因长度（bp）</span><br><span class="line">exonic.gene.sizes &lt;- sum(width(reduce(exons.list.per.gene)))</span><br></pre></td></tr></table></figure>
<p><code>GenomicFeatures</code>还支持自己手动从指定数据库中构建TxDb对象，例如从 UCSC提取构建的<code>makeTxDbFromUCSC()</code>函数；从BioMart提取构建的<code>makeTxDbFromBiomart()</code>函数等方法可以用作替补方案（没有对应TXDB的R包时）。</p>
<p><code>tureCounts</code>统计基因counts时，其输出的counts.txt文件中通常会包含一列长度信息Length。也是采用非重叠外显子作为基因长度。</p>
<h2 id="参考：">参考：</h2>
<ol>
<li class="lvl-3">
<p>理论-简述RPKM-FPKM-AND-TPM | Dean’s blog (<span class="exturl" data-url="aHR0cDovL3RoZXJlYWxsZGEuZ2l0aHViLmlv">thereallda.github.io<i class="fa fa-external-link-alt"></i></span>)</p>
</li>
<li class="lvl-3">
<p>R-获取基因长度 | Dean’s blog (<span class="exturl" data-url="aHR0cDovL3RoZXJlYWxsZGEuZ2l0aHViLmlv">thereallda.github.io<i class="fa fa-external-link-alt"></i></span>)</p>
</li>
<li class="lvl-3">
<p>[R]bioconductor之GenomicFeatures学习 - 简书 (<span class="exturl" data-url="aHR0cDovL2ppYW5zaHUuY29t">jianshu.com<i class="fa fa-external-link-alt"></i></span>)</p>
</li>
</ol>
]]></content>
      <categories>
        <category>笔记</category>
        <category>科研</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>RNA-seq</tag>
        <tag>生信</tag>
        <tag>R语言</tag>
        <tag>测序</tag>
        <tag>标准化</tag>
      </tags>
  </entry>
  <entry>
    <title>R语言--爬取小说-战略级天使</title>
    <url>/2021/05/04/290fbc002946/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="目的">目的</h2>
<p>小说离线阅读,保存。练习R语言。示例网站：https://www.-----.com/yuedu/15111/</p>
<span id="more"></span> 
<h2 id="实例">实例</h2>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">library<span class="punctuation">(</span><span class="string">&quot;stringr&quot;</span><span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span><span class="string">&quot;rvest&quot;</span><span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span><span class="string">&#x27;RCurl&#x27;</span><span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span><span class="string">&#x27;curl&#x27;</span><span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span><span class="string">&#x27;downloader&#x27;</span><span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span><span class="string">&#x27;RSelenium&#x27;</span><span class="punctuation">)</span></span><br><span class="line">setwd<span class="punctuation">(</span><span class="string">&#x27;H:\\R\\R脚本\\爬虫&#x27;</span><span class="punctuation">)</span></span><br><span class="line">url <span class="operator">&lt;-</span> <span class="string">&quot;https://www.-----.com/yuedu/15111/&quot;</span></span><br><span class="line">htmlpage <span class="operator">&lt;-</span> read_html<span class="punctuation">(</span>url<span class="punctuation">)</span></span><br><span class="line">xs_chapter <span class="operator">&lt;-</span> htmlpage <span class="operator">%&gt;%</span> html_nodes<span class="punctuation">(</span><span class="string">&#x27;div#wrapper div.box_con div#list dl dd a&#x27;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> html_text<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">head<span class="punctuation">(</span>xs_chapter<span class="punctuation">)</span><span class="comment">#观察数据形式</span></span><br><span class="line">xs_link <span class="operator">&lt;-</span> htmlpage <span class="operator">%&gt;%</span> html_nodes<span class="punctuation">(</span><span class="string">&#x27;div#wrapper div.box_con div#list dl dd a&#x27;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> html_attrs<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">head<span class="punctuation">(</span>xs_link<span class="punctuation">)</span><span class="comment">#观察数据形式</span></span><br><span class="line">xs_link <span class="operator">&lt;-</span> paste<span class="punctuation">(</span><span class="string">&quot;https://www.-----.com&quot;</span><span class="punctuation">,</span>unlist<span class="punctuation">(</span>xs_link<span class="punctuation">)</span><span class="punctuation">,</span>sep <span class="operator">=</span> <span class="string">&#x27;&#x27;</span><span class="punctuation">)</span><span class="comment">#构建章节链接</span></span><br><span class="line">xs_content <span class="operator">&lt;-</span> cbind<span class="punctuation">(</span>xs_chapter<span class="punctuation">[</span><span class="operator">-</span><span class="punctuation">(</span><span class="number">1</span><span class="operator">:</span><span class="number">10</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">,</span>xs_link<span class="punctuation">[</span><span class="operator">-</span><span class="punctuation">(</span><span class="number">1</span><span class="operator">:</span><span class="number">10</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">)</span><span class="comment">#合并目录链接</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#尝试获取小说内容，并提取。</span></span><br><span class="line">ms_f1 <span class="operator">&lt;-</span> read_html<span class="punctuation">(</span>xs_content<span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span><span class="punctuation">,</span> encoding <span class="operator">=</span> <span class="string">&quot;GB18030&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> html_nodes<span class="punctuation">(</span><span class="string">&#x27;div#content&#x27;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> html_text<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">ms_f2 <span class="operator">&lt;-</span> read_html<span class="punctuation">(</span>xs_content<span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span><span class="punctuation">,</span> encoding <span class="operator">=</span> <span class="string">&quot;GB18030&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> html_nodes<span class="punctuation">(</span><span class="string">&#x27;div#content&#x27;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> html_text<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">ms_f <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span>xs_content<span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">,</span>ms_f1<span class="punctuation">,</span>xs_content<span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">,</span>ms_f2<span class="punctuation">)</span></span><br><span class="line">write<span class="punctuation">(</span>gsub<span class="punctuation">(</span><span class="string">&quot;\u00A0&quot;</span><span class="punctuation">,</span><span class="string">&quot; &quot;</span><span class="punctuation">,</span> ms_f<span class="punctuation">)</span><span class="punctuation">,</span>file <span class="operator">=</span> <span class="string">&quot;1.txt&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#自定义下载函数</span></span><br><span class="line">xs_down <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>x<span class="punctuation">)</span><span class="punctuation">&#123;</span></span><br><span class="line">  xs <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">  <span class="keyword">for</span> <span class="punctuation">(</span>i <span class="keyword">in</span> <span class="number">1</span><span class="operator">:</span><span class="built_in">length</span><span class="punctuation">(</span>x<span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">  xm <span class="operator">&lt;-</span> read_html<span class="punctuation">(</span>x<span class="punctuation">[</span>i<span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span><span class="punctuation">,</span> encoding <span class="operator">=</span> <span class="string">&quot;GB18030&quot;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> html_nodes<span class="punctuation">(</span><span class="string">&#x27;div#content&#x27;</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> html_text<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">  xs <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span>xs<span class="punctuation">,</span> x<span class="punctuation">[</span>i<span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">,</span> xm<span class="punctuation">)</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line">  xs</span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="comment">#导出小说</span></span><br><span class="line">write<span class="punctuation">(</span>gsub<span class="punctuation">(</span><span class="string">&quot;\u00A0&quot;</span><span class="punctuation">,</span><span class="string">&quot; &quot;</span><span class="punctuation">,</span> xs_down<span class="punctuation">(</span>xs_content<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span>file <span class="operator">=</span> <span class="string">&quot;战略级天使.txt&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>原创</category>
        <category>其他</category>
      </categories>
      <tags>
        <tag>R语言</tag>
        <tag>实例</tag>
        <tag>爬虫</tag>
        <tag>小说</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/01/01/145a1920f348/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvLw==">Hexo<i class="fa fa-external-link-alt"></i></span>! This is your very first post. Check <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv">documentation<i class="fa fa-external-link-alt"></i></span> for more info. If you get any problems when using Hexo, you can find the answer in <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=">troubleshooting<i class="fa fa-external-link-alt"></i></span> or you can ask me on <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==">GitHub<i class="fa fa-external-link-alt"></i></span>.</p>
<span id="more"></span> 
<h2 id="快速开始">快速开始</h2>
<h3 id="创建文章">创建文章</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s">Writing<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="查看效果">查看效果</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=">Server<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="生成静态">生成静态</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s">Generating<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="部署到远程">部署到远程</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s">Deployment<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>笔记</category>
        <category>其他</category>
      </categories>
      <tags>
        <tag>默认</tag>
        <tag>你好</tag>
      </tags>
  </entry>
</search>
