{"title":"R语言中多重序列比对（MultipleAlignment）结果导出到文件（fasta文件和Phylip文件）","slug":"R语言中多重序列比对（MultipleAlignment）结果导出到文件（fasta文件和Phylip文件）","date":"2024-12-05T03:23:22.000Z","updated":"2024-12-05T05:21:31.168Z","comments":true,"path":"api/articles/R语言中多重序列比对（MultipleAlignment）结果导出到文件（fasta文件和Phylip文件）.json","excerpt":"​ [Figure] ​这里是使用Biostrings​包导入fasta格式的多重比对序列，并导出多重序列比对后的数据为fasta和phylip文件。","covers":["https://cdn.jsdelivr.net/gh/leafminer/tuchuang@master/2024/12/20241205102457133.png"],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><div id=\"vip-container\"><p>​<img data-src=\"https://cdn.jsdelivr.net/gh/leafminer/tuchuang@master/2024/12/20241205102457133.png\" alt=\"\">​</p>\n<p>这里是使用<code>Biostrings</code>​包导入fasta格式的多重比对序列，并导出多重序列比对后的数据为fasta和phylip文件。</p>\n<span id=\"more\"></span>\n<h2 id=\"导入多重比对序列\">导入多重比对序列</h2>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">readDNAMultipleAlignment<span class=\"punctuation\">(</span>filepath<span class=\"punctuation\">,</span> format<span class=\"punctuation\">)</span> <span class=\"comment\">#DNA</span></span><br><span class=\"line\">readRNAMultipleAlignment<span class=\"punctuation\">(</span>filepath<span class=\"punctuation\">,</span> format<span class=\"punctuation\">)</span> <span class=\"comment\">#RNA</span></span><br><span class=\"line\">readAAMultipleAlignment<span class=\"punctuation\">(</span>AAMultipleAlignment<span class=\"punctuation\">,</span> format<span class=\"punctuation\">)</span> <span class=\"comment\">#蛋白序列</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"导出多重比对序列\">导出多重比对序列</h2>\n<h3 id=\"核酸序列\">核酸序列</h3>\n<ol>\n<li class=\"lvl-3\">\n<p><strong>导出到fasta文件</strong>：</p>\n</li>\n</ol>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>如果你需要将你的多重序列比对对象（MultipleAlignment object）导出为fasta文件，你可以将其转换为<code>DNAStringSet</code>​对象，然后像下面这样将其写入fasta文件：</p>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DNAStr <span class=\"operator\">&lt;-</span> as<span class=\"punctuation\">(</span>origMAlign<span class=\"punctuation\">,</span> <span class=\"string\">&quot;DNAStringSet&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">writeXStringSet<span class=\"punctuation\">(</span>DNAStr<span class=\"punctuation\">,</span> file<span class=\"operator\">=</span><span class=\"string\">&quot;myFile.fa&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>这里的<code>as(origMAlign, &quot;DNAStringSet&quot;)</code>​是将<code>origMAlign</code>​（原始的多重序列比对对象）转换为<code>DNAStringSet</code>​类型。<code>writeXStringSet(DNAStr, file=&quot;myFile.fa&quot;)</code>​则是将转换后的<code>DNAStringSet</code>​对象<code>DNAStr</code>​写入名为<code>myFile.fa</code>​的fasta文件中。</p>\n</li>\n</ul>\n<ol start=\"2\">\n<li class=\"lvl-3\">\n<p><strong>导出到Phylip文件</strong>：</p>\n</li>\n</ol>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>Phylip格式不仅存储你正在导出的序列，还存储对象的列掩码（column masking）。如果你对序列进行了掩码处理，并且在导出Phylip文件时，这个掩码会被记录到你导出的文件中。</p>\n</li>\n<li class=\"lvl-2\">\n<p>与上面的fasta文件示例类似，任何被你掩码掉的行（rows）也会从导出的文件中移除。</p>\n</li>\n<li class=\"lvl-2\">\n<p>导出Phylip文件的代码如下：</p>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">write.phylip<span class=\"punctuation\">(</span>phylipMAlign<span class=\"punctuation\">,</span> filepath<span class=\"operator\">=</span><span class=\"string\">&quot;myFile.txt&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>这里的<code>write.phylip(phylipMAlign, filepath=&quot;myFile.txt&quot;)</code>​是将<code>phylipMAlign</code>​（可能是已经进行了某些处理的多重序列比对对象）写入名为<code>myFile.txt</code>​的Phylip文件中。</p>\n</li>\n</ul>\n<h3 id=\"蛋白序列\">蛋白序列</h3>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AA_MA <span class=\"operator\">&lt;-</span> as<span class=\"punctuation\">(</span>AAMultipleAlignment<span class=\"punctuation\">,</span> <span class=\"string\">&quot;AAStringSet&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">writeXStringSet<span class=\"punctuation\">(</span>AA_MA<span class=\"punctuation\">,</span> file<span class=\"operator\">=</span><span class=\"string\">&quot;AAMultipleAlignment.fasta&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>这里的<code>as(AAMultipleAlignment, &quot;AAStringSet&quot;)</code>是将<code>AAMultipleAlignment</code>（原始的多重序列比对对象）转换为<code>AAStringSet</code>类型。<code>writeXStringSet(AA_MA, file=&quot;AAMultipleAlignment.fasta&quot;)</code>则是将转换后的<code>AAStringSet</code>对象AA_MA写入名为<code>AAMultipleAlignment</code>的<code>fasta</code>文件中。</p>\n</li>\n</ul>\n<h2 id=\"参考\">参考</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iaW9jb25kdWN0b3Iub3JnL3BhY2thZ2VzL2RldmVsL2Jpb2MvdmlnbmV0dGVzL0Jpb3N0cmluZ3MvaW5zdC9kb2MvTXVsdGlwbGVBbGlnbm1lbnRzLmh0bWwjZXhwb3J0aW5nLXRvLWZpbGU=\">https://bioconductor.org/packages/devel/bioc/vignettes/Biostrings/inst/doc/MultipleAlignments.html#exporting-to-file<i class=\"fa fa-external-link-alt\"></i></span></p>\n</div>\n\n\t\t\t<script src=\"https://my.openwrite.cn/js/readmore.js\" type=\"text/javascript\"></script>\n\t\t\t<script>\n\t\t\tvar isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);\n\t\t\tif (!isMobile) {\n\t\t\t    var btw = new BTWPlugin();\n\t\t\t    btw.init({\n\t\t\t        \"id\": \"vip-container\",\n\t\t\t        \"blogId\": \"33502-1730425843713-524\",\n\t\t\t        \"name\": \"虫子的生存笔记\",\n\t\t\t        \"qrcode\": \"https://leaf-miner.pages.dev/image/%E5%85%AC%E4%BC%97%E5%8F%B7.png\",\n\t\t\t        \"keyword\": \"more\"\n\t\t\t    });\n\t\t\t}\n\t\t\t</script>\n\t\t","more":"<h2 id=\"导入多重比对序列\">导入多重比对序列</h2>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">readDNAMultipleAlignment<span class=\"punctuation\">(</span>filepath<span class=\"punctuation\">,</span> format<span class=\"punctuation\">)</span> <span class=\"comment\">#DNA</span></span><br><span class=\"line\">readRNAMultipleAlignment<span class=\"punctuation\">(</span>filepath<span class=\"punctuation\">,</span> format<span class=\"punctuation\">)</span> <span class=\"comment\">#RNA</span></span><br><span class=\"line\">readAAMultipleAlignment<span class=\"punctuation\">(</span>AAMultipleAlignment<span class=\"punctuation\">,</span> format<span class=\"punctuation\">)</span> <span class=\"comment\">#蛋白序列</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"导出多重比对序列\">导出多重比对序列</h2>\n<h3 id=\"核酸序列\">核酸序列</h3>\n<ol>\n<li class=\"lvl-3\">\n<p><strong>导出到fasta文件</strong>：</p>\n</li>\n</ol>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>如果你需要将你的多重序列比对对象（MultipleAlignment object）导出为fasta文件，你可以将其转换为<code>DNAStringSet</code>​对象，然后像下面这样将其写入fasta文件：</p>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DNAStr <span class=\"operator\">&lt;-</span> as<span class=\"punctuation\">(</span>origMAlign<span class=\"punctuation\">,</span> <span class=\"string\">&quot;DNAStringSet&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">writeXStringSet<span class=\"punctuation\">(</span>DNAStr<span class=\"punctuation\">,</span> file<span class=\"operator\">=</span><span class=\"string\">&quot;myFile.fa&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>这里的<code>as(origMAlign, &quot;DNAStringSet&quot;)</code>​是将<code>origMAlign</code>​（原始的多重序列比对对象）转换为<code>DNAStringSet</code>​类型。<code>writeXStringSet(DNAStr, file=&quot;myFile.fa&quot;)</code>​则是将转换后的<code>DNAStringSet</code>​对象<code>DNAStr</code>​写入名为<code>myFile.fa</code>​的fasta文件中。</p>\n</li>\n</ul>\n<ol start=\"2\">\n<li class=\"lvl-3\">\n<p><strong>导出到Phylip文件</strong>：</p>\n</li>\n</ol>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>Phylip格式不仅存储你正在导出的序列，还存储对象的列掩码（column masking）。如果你对序列进行了掩码处理，并且在导出Phylip文件时，这个掩码会被记录到你导出的文件中。</p>\n</li>\n<li class=\"lvl-2\">\n<p>与上面的fasta文件示例类似，任何被你掩码掉的行（rows）也会从导出的文件中移除。</p>\n</li>\n<li class=\"lvl-2\">\n<p>导出Phylip文件的代码如下：</p>\n</li>\n</ul>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">write.phylip<span class=\"punctuation\">(</span>phylipMAlign<span class=\"punctuation\">,</span> filepath<span class=\"operator\">=</span><span class=\"string\">&quot;myFile.txt&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>这里的<code>write.phylip(phylipMAlign, filepath=&quot;myFile.txt&quot;)</code>​是将<code>phylipMAlign</code>​（可能是已经进行了某些处理的多重序列比对对象）写入名为<code>myFile.txt</code>​的Phylip文件中。</p>\n</li>\n</ul>\n<h3 id=\"蛋白序列\">蛋白序列</h3>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AA_MA <span class=\"operator\">&lt;-</span> as<span class=\"punctuation\">(</span>AAMultipleAlignment<span class=\"punctuation\">,</span> <span class=\"string\">&quot;AAStringSet&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">writeXStringSet<span class=\"punctuation\">(</span>AA_MA<span class=\"punctuation\">,</span> file<span class=\"operator\">=</span><span class=\"string\">&quot;AAMultipleAlignment.fasta&quot;</span><span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>这里的<code>as(AAMultipleAlignment, &quot;AAStringSet&quot;)</code>是将<code>AAMultipleAlignment</code>（原始的多重序列比对对象）转换为<code>AAStringSet</code>类型。<code>writeXStringSet(AA_MA, file=&quot;AAMultipleAlignment.fasta&quot;)</code>则是将转换后的<code>AAStringSet</code>对象AA_MA写入名为<code>AAMultipleAlignment</code>的<code>fasta</code>文件中。</p>\n</li>\n</ul>\n<h2 id=\"参考\">参考</h2>\n<p><a href=\"https://bioconductor.org/packages/devel/bioc/vignettes/Biostrings/inst/doc/MultipleAlignments.html#exporting-to-file\">https://bioconductor.org/packages/devel/bioc/vignettes/Biostrings/inst/doc/MultipleAlignments.html#exporting-to-file</a></p>","categories":[{"name":"原创","path":"api/categories/原创.json"},{"name":"科研","path":"api/categories/科研.json"}],"tags":[{"name":"R语言","path":"api/tags/R语言.json"},{"name":"多重序列比对","path":"api/tags/多重序列比对.json"},{"name":"MultipleAlignment","path":"api/tags/MultipleAlignment.json"},{"name":"fasta","path":"api/tags/fasta.json"},{"name":"保存","path":"api/tags/保存.json"},{"name":"Biostrings包","path":"api/tags/Biostrings包.json"}]}