{"name":"图像","postlist":[{"title":"Process-->Noise\\Filters笔记","slug":"ImageJ--图像去噪--Process中的Noise和Filters","date":"2024-06-11T13:53:40.000Z","updated":"2024-10-18T19:53:16.718Z","comments":true,"path":"api/articles/ImageJ--图像去噪--Process中的Noise和Filters.json","excerpt":null,"keywords":"Hexo, 科研, 生物, R语言, 爬虫, 生信, 中药, 果蝇, 笔记, 教程, 虫子, 潜叶虫, leafminer, leaf-miner, 生活, 随笔, 原创","cover":"./imgs/20240605_223251_00000.png","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><div id=\"vip-container\"><h1>Process–&gt;Noise\\Filters笔记</h1>\n<h2 id=\"Noise\">Noise</h2>\n<p><img data-src=\"./imgs/20240605_223251_00000.png\" alt=\"\"><br>\n<strong>Add noise</strong> 对图片增加随机噪声，噪声服从均值为0、标准差为25的高斯分布。<br>\n<strong>Add Specified Noise</strong> 增加一个均值为0、手动输入标准差的高斯噪声。</p>\n<span id=\"more\"></span> \n<p><strong>Salt and Pepper</strong> 通过随机替换2.5%的黑色像素和2.5%的白色像素来增加椒盐噪声。该命令仅适用于8-bit图片。<br>\n<strong>Despeckle</strong> 这是一种中值滤波器，它将像素值替换为它周围3*3的像素点的均值。中值滤波器对于去掉上面的椒盐噪声很有用。<br>\n<strong>Remove Outliers</strong> 如果一个像素点离它周围点的均值超过一定数值，该命令就会去除这个像素点。该命令对CCD相机的hot pixels或dead pixels很有用。</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\"><strong>Radius</strong>：决定计算均值的范围（单位是像素）。使用Process-Filter-Show Circular Masks来显示半径是如何转变为面积的。</li>\n<li class=\"lvl-2\"><strong>Threshold</strong>：决定阈值（单位是像素）</li>\n<li class=\"lvl-2\"><strong>Which Outliers</strong>：决定比均值更亮还是更暗的像素点去除。</li>\n</ul>\n<p><strong>Remove NANs</strong> 该滤波器将32-bit图片中的NaN像素点替换成由Radius定义的圆形kernel区域内部的像素点的平均值。<br>\n<strong>ROF Denoise</strong> 降噪</p>\n<h2 id=\"Filters\">Filters</h2>\n<p>该菜单包含五花八门的滤波器。<br>\n<strong>Convolve</strong> 使用填入文本区域的kernel进行空间卷积。一个kernel就是一个矩阵，它的中心是源像素，其他的元素是该像素的邻居。通过对像素点乘以相应的kernel中的系数然后相加得到结果。对kernel的尺寸没有限制，但它必须是方形，且必须是奇数宽度。勾选<code>Normalize Kernel</code>可以使得每个系数都除以所有系数的和，从而保持图片的亮度。<br>\n<strong>Gaussian Blur</strong> 该过滤器使用一个高斯函数进行卷积，从而实现平滑效果。<br>\n<strong>Gaussian Blur 3D</strong> 计算一个三维高斯低通滤波。<br>\n<strong>Median</strong> 将像素替换为周围点的平均像素值，从而实现<strong>降噪</strong>效果。<br>\n<strong>Mean</strong> 怎么感觉跟上面的Median是一个意思呢。<br>\n<strong>Minimum</strong> 将像素替换为周围点的最小值，从而实现灰度腐蚀。<br>\n<strong>Maximum</strong> 将像素替换为周围点的最大值，从而实现灰度膨胀。<br>\n<strong>Unsharp Mas</strong>k 通过从原图片中提出一个模糊的版本，从而锐化和加强边缘。<br>\n<strong>Variance</strong> 将每个像素替换为邻居的方差，从而高亮边缘。<br>\n<strong>Show Circular Masks</strong> 产生一个包含上面Median、Mean、Minimum、Maximum和Variance滤波器使用的圆形mask产生的事例。</p>\n<h2 id=\"参考\">参考</h2>\n<ol>\n<li class=\"lvl-3\">\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamluZ2VnZS53YW5nLzIwMjEvMTAvMDEvaW1hZ2VqLSVlNyU5NCVhOCVlNiU4OCViNyVlNiU4YyU4NyVlNSU4ZCU5Ny85Lw==\">https://www.jingege.wang/2021/10/01/imagej-用户指南/9/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n</ol>\n</div>\n\n\t\t\t<script src=\"https://my.openwrite.cn/js/readmore.js\" type=\"text/javascript\"></script>\n\t\t\t<script>\n\t\t\tvar isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);\n\t\t\tif (!isMobile) {\n\t\t\t    var btw = new BTWPlugin();\n\t\t\t    btw.init({\n\t\t\t        \"id\": \"vip-container\",\n\t\t\t        \"blogId\": \"33502-1730425843713-524\",\n\t\t\t        \"name\": \"虫子的生存笔记\",\n\t\t\t        \"qrcode\": \"https://leaf-miner.pages.dev/image/%E5%85%AC%E4%BC%97%E5%8F%B7.png\",\n\t\t\t        \"keyword\": \"more\"\n\t\t\t    });\n\t\t\t}\n\t\t\t</script>\n\t\t","raw":null,"categories":[{"name":"笔记","path":"api/categories/笔记.json"},{"name":"笔记/学习","path":"api/categories/笔记/学习.json"}],"tags":[{"name":"插件","path":"api/tags/插件.json"},{"name":"笔记","path":"api/tags/笔记.json"},{"name":"ImageJ","path":"api/tags/ImageJ.json"},{"name":"图像","path":"api/tags/图像.json"},{"name":"降噪","path":"api/tags/降噪.json"},{"name":"Noise","path":"api/tags/Noise.json"},{"name":"Filters","path":"api/tags/Filters.json"}]},{"title":"ImageJ--自动将源图或堆栈与目标图配准--StackReg插件","slug":"ImageJ--自动将源图或堆栈与目标图配准--StackReg插件","date":"2024-05-23T08:56:40.000Z","updated":"2024-10-18T19:50:46.634Z","comments":true,"path":"api/articles/ImageJ--自动将源图或堆栈与目标图配准--StackReg插件.json","excerpt":null,"keywords":"Hexo, 科研, 生物, R语言, 爬虫, 生信, 中药, 果蝇, 笔记, 教程, 虫子, 潜叶虫, leafminer, leaf-miner, 生活, 随笔, 原创","cover":"https://cdn.nlark.com/yuque/0/2024/png/12885947/1716430374851-f6e0204e-c711-4eaf-8e10-dd2559bd26b2.png#averageHue=%23bdbbb0&amp;clientId=u2db50134-249f-4&amp;from=paste&amp;height=342&amp;id=LXm3J&amp;originHeight=788&amp;originWidth=1522&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=1428440&amp;status=done&amp;style=none&amp;taskId=u680c6b5e-8e69-4db7-ba5b-a91f3ac40ae&amp;title=&amp;width=661","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><div id=\"vip-container\"><p><a name=\"e05dce83\"></a></p>\n<h2 id=\"简介\">简介</h2>\n<p>StackReg，用于递归对齐图像堆栈（stack）的 ImageJ 插件。<br /><strong>作者：</strong> Philippe Thévenaz, Biomedical Imaging Group, Swiss Federal Institute of Technology Lausanne</p>\n<span id=\"more\"></span>\n<p>该插件的目的是配准（换句话说，对齐或匹配）图像堆栈。每张图片用作下一张图片对齐的模板，以便通过转换进行对齐。当插件启动时，当前图片充当全局锚点。StackReg 插件要求安装有TurboReg 插件。该插件（<strong>StackReg</strong>）是<strong>TurboReg</strong> 插件的前端。这些插件之间有几种数据交换机制，其中之一是将临时文件写入 ImageJ 定义的临时目录。该目录的位置可以通过宏命令 &quot;<code>print(getDirectory(&quot;temp&quot;));</code> &quot;查看。文件名称是：StackRegSource，StackRegSourceR，StackRegSourceG，StackRegSourceB，StackRegTarget。</p>\n<p>配准完成后，原始堆栈将被销毁，取而代之的是配准结果。堆栈的名称和类型保持不变；除 <strong>RGB 堆栈</strong>和 <strong>HSB 堆</strong>栈外，所有数据类型均可使用。(请注意，RGB-stack 是由三个颜色分量组成的堆栈，不应与 RGB 彩色图像堆栈混淆：后者可以使用，而前者不能使用。如有疑问，请尝试一下)。如果提供的是彩色图像堆栈，则会在灰度版本上进行配准，灰度版本是由红色、绿色和蓝色分量加权求和而成的，即使堆栈是伪彩色图像也是如此。权重取决于整个图像堆栈，并通过主成分分析确定，以提供最大可能的对比度。一旦根据中间灰度表示确定了几何图形，就可以重建真正的彩色图像，如果需要生成伪彩色图像，还可以重新量化。</p>\n<p><a name=\"1a63ac23\"></a></p>\n<h2 id=\"示例\">示例</h2>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2024/png/12885947/1716430374851-f6e0204e-c711-4eaf-8e10-dd2559bd26b2.png#averageHue=%23bdbbb0&amp;clientId=u2db50134-249f-4&amp;from=paste&amp;height=342&amp;id=LXm3J&amp;originHeight=788&amp;originWidth=1522&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=1428440&amp;status=done&amp;style=none&amp;taskId=u680c6b5e-8e69-4db7-ba5b-a91f3ac40ae&amp;title=&amp;width=661\" alt=\"image.png\"><br />原始图<br /><img data-src=\"https://cdn.nlark.com/yuque/0/2024/gif/12885947/1716434444337-f17c0e80-e8ff-43ce-bb2e-9855df60aced.gif#averageHue=%23bebfbd&amp;clientId=u2db50134-249f-4&amp;from=paste&amp;height=321&amp;id=u2a92047f&amp;originHeight=1000&amp;originWidth=2057&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=5059819&amp;status=done&amp;style=none&amp;taskId=ub9390e85-5478-4b32-9ef3-a9fade1b7b0&amp;title=&amp;width=661\" alt=\"攀爬2-缩小.gif\"><br />配准后(转换类型<strong>Scaled rotation</strong>)<br /><img data-src=\"https://cdn.nlark.com/yuque/0/2024/gif/12885947/1716438022750-6e21a2ae-fea6-497e-860e-d85616f849a9.gif#averageHue=%23c0c0be&amp;clientId=u89d4ed3b-c40f-4&amp;from=drop&amp;height=321&amp;id=kKliK&amp;originHeight=1960&amp;originWidth=4032&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=16556324&amp;status=done&amp;style=none&amp;taskId=u99a6e12e-93c9-4cd1-bf54-cc01b9e9b5b&amp;title=&amp;width=660\" alt=\"WT-处-control-20211218-scaled.gif\"></p>\n<p><a name=\"AX0GW\"></a></p>\n<h2 id=\"参数\">参数</h2>\n<p>有四种类型的转换：</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><strong>Translation</strong>：</p>\n</li>\n</ul>\n<p>映射公式为 <img data-src=\"https://www.yuque.com/api/services/graph/generate_redirect/latex?x%20%3D%20u%20%2B%20%CE%94u#card=math&amp;code=x%20%3D%20u%20%2B%20%CE%94u&amp;id=I1f4r\" alt=\"\">。其中，输入坐标 <strong>u</strong> 映射到输出坐标 <strong>x</strong>，常数矢量 <strong>Δu</strong> 表示平移量。</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><strong>Rigid Body</strong>：</p>\n</li>\n</ul>\n<p>映射公式为 <br /><img data-src=\"https://cdn.nlark.com/yuque/__latex/e386340d2860de58527e61d4dc5de7cd.svg#card=math&amp;code=x%20%3D%20%5C%7B%20%5C%7Bcos%20%CE%B8%2C%20%E2%88%92sin%20%CE%B8%5C%7D%2C%20%5C%7Bsin%20%CE%B8%2C%20cos%20%CE%B8%5C%7D%20%5C%7D%20%E2%8B%85%20u%20%2B%20%CE%94u&amp;id=HGnJ1\" alt=\"\"><br />由于存在 <strong>Δu</strong> 项，因此除了旋转角度 <strong>θ</strong> 外，还考虑了平移。</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><strong>Scaled rotation</strong>：</p>\n</li>\n</ul>\n<p>映射公式为 <br /><img data-src=\"https://cdn.nlark.com/yuque/__latex/1678623c5ac84d63fb37a0c24914e4bf.svg#card=math&amp;code=x%20%3D%20%CE%BB%20%5C%7B%20%5C%7Bcos%20%CE%B8%2C%20%E2%88%92sin%20%CE%B8%5C%7D%2C%20%5C%7Bsin%20%CE%B8%2C%20cos%20%CE%B8%5C%7D%20%5C%7D%E2%8B%85%20u%20%2B%20%CE%94u&amp;id=HxAmA\" alt=\"\"><br />与<strong>Rigid Body</strong> 的区别在于存在标量调整因子 <strong>λ</strong>。</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><strong>Affine</strong>：</p>\n</li>\n</ul>\n<p>映射公式为 <br /><img data-src=\"https://cdn.nlark.com/yuque/__latex/56c72e021aeb8d05a197e959c33a45b2.svg#card=math&amp;code=x%20%3D%20%5C%7B%20%5C%7Ba_%7B11%7D%2C%20a_%7B12%7D%5C%7D%2C%20%5C%7Ba_%7B21%7D%2C%20a_%7B22%7D%5C%7D%20%5C%7D%20%E2%8B%85%20u%20%2B%20%CE%94u&amp;id=CCeB3\" alt=\"\"><br />由于四个系数 <img data-src=\"https://www.yuque.com/api/services/graph/generate_redirect/latex?a_%7B11%7D#card=math&amp;code=a_%7B11%7D&amp;id=NPdDU\" alt=\"\">、<img data-src=\"https://www.yuque.com/api/services/graph/generate_redirect/latex?a_%7B12%7D#card=math&amp;code=a_%7B12%7D&amp;id=X1Pob\" alt=\"\">、<img data-src=\"https://www.yuque.com/api/services/graph/generate_redirect/latex?a_%7B21%7D#card=math&amp;code=a_%7B21%7D&amp;id=Hro5t\" alt=\"\"> 和 <img data-src=\"https://www.yuque.com/api/services/graph/generate_redirect/latex?a_%7B22%7D#card=math&amp;code=a_%7B22%7D&amp;id=msruk\" alt=\"\"> 是独立的，因此仿射变换比按比例旋转具有更多的自由度。<br>\n<a name=\"1c53b310\"></a></p>\n<h2 id=\"操作步骤\">操作步骤</h2>\n<p>使用的Fiji ImageJ</p>\n<ol>\n<li class=\"lvl-3\">\n<p>拖动图片文件夹到Fiji，默认为堆栈。</p>\n</li>\n</ol>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2024/png/12885947/1716433448190-6bcdcea1-090b-4b6e-844b-db57f09551a9.png#averageHue=%23eeeeed&amp;clientId=u2db50134-249f-4&amp;from=paste&amp;height=285&amp;id=R4VvP&amp;originHeight=424&amp;originWidth=428&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=14771&amp;status=done&amp;style=none&amp;taskId=ue08112ae-4ce1-4d16-97b5-adb9378c3cd&amp;title=&amp;width=287.3999938964844\" alt=\"image.png\"></p>\n<ol start=\"2\">\n<li class=\"lvl-3\">\n<p>插件启动前，选择合适的图片，当前图片会被充当全局锚点。</p>\n</li>\n<li class=\"lvl-3\">\n<p>打开<strong>StackReg。</strong></p>\n</li>\n</ol>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2024/png/12885947/1716433608518-f4f2cfa8-5406-4ef7-876d-c4ffb225cf73.png#averageHue=%23b3a180&amp;clientId=u2db50134-249f-4&amp;from=paste&amp;height=313&amp;id=pzPnz&amp;originHeight=491&amp;originWidth=605&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=213183&amp;status=done&amp;style=none&amp;taskId=u427dd8d1-e0e2-49ce-9122-31b6a47e994&amp;title=&amp;width=386\" alt=\"image.png\"></p>\n<ol start=\"4\">\n<li class=\"lvl-3\">\n<p>选择对齐方式，点击确定按钮。</p>\n</li>\n</ol>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2024/png/12885947/1716433643863-8b44a1f7-eb00-4ac3-9f28-b4da3cb4d467.png#averageHue=%23edebe9&amp;clientId=u2db50134-249f-4&amp;from=paste&amp;height=125&amp;id=cH9EB&amp;originHeight=156&amp;originWidth=236&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=7246&amp;status=done&amp;style=none&amp;taskId=u745533d0-9a3d-4fde-8597-410e8b9e3eb&amp;title=&amp;width=188.8\" alt=\"image.png\"><br>\n<a name=\"zAAf8\"></a></p>\n<h4 id=\"配准结果展示\">配准结果展示</h4>\n<p><strong>Translation</strong><br /><img data-src=\"https://cdn.nlark.com/yuque/0/2024/gif/12885947/1716437482059-89fc3429-bad3-4efb-8f57-e2b6980bd685.gif#averageHue=%23bebfbd&amp;clientId=u89d4ed3b-c40f-4&amp;from=drop&amp;id=u815598a6&amp;originHeight=1000&amp;originWidth=2057&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=4864016&amp;status=done&amp;style=none&amp;taskId=ua36500ba-dce8-49d3-a2dd-78c2e561927&amp;title=\" alt=\"攀爬2-移动-缩小.gif\"><br /><strong>Rigid Body</strong><br /><img data-src=\"https://cdn.nlark.com/yuque/0/2024/gif/12885947/1716437732425-3650fea3-632c-496f-a40a-27c5a7adc316.gif#averageHue=%23bebfbd&amp;clientId=u89d4ed3b-c40f-4&amp;from=drop&amp;id=u66c7948b&amp;originHeight=1000&amp;originWidth=2057&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=4902674&amp;status=done&amp;style=none&amp;taskId=u45d2d0ba-9870-43ee-8089-153602f6b05&amp;title=\" alt=\"攀爬2-rigid-缩小.gif\"><br /><strong>Scaled rotation</strong><br /><img data-src=\"https://cdn.nlark.com/yuque/0/2024/gif/12885947/1716438022750-6e21a2ae-fea6-497e-860e-d85616f849a9.gif#averageHue=%23c0c0be&amp;clientId=u89d4ed3b-c40f-4&amp;from=drop&amp;id=u5e78df36&amp;originHeight=1960&amp;originWidth=4032&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=16556324&amp;status=done&amp;style=none&amp;taskId=u99a6e12e-93c9-4cd1-bf54-cc01b9e9b5b&amp;title=\" alt=\"WT-处-control-20211218-scaled.gif\"><br /><strong>Affine</strong><br /><img data-src=\"https://cdn.nlark.com/yuque/0/2024/gif/12885947/1716438247733-91b6a52e-7abe-4303-a27b-b9389f62063c.gif#averageHue=%23bebfbd&amp;clientId=u89d4ed3b-c40f-4&amp;from=drop&amp;id=uc96e2e67&amp;originHeight=1000&amp;originWidth=2057&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=4699672&amp;status=done&amp;style=none&amp;taskId=u77f49e48-451d-4b37-876b-5276b590ccd&amp;title=\" alt=\"攀爬2-affine-缩小.gif\"><br>\n<a name=\"ba311d8a\"></a></p>\n<h2 id=\"脚本\">脚本</h2>\n<p>StackReg 是可编写脚本和使用宏记录的。下面是一个从宏调用 StackReg 的示例：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">run(<span class=\"string\">&quot;StackReg &quot;</span>, <span class=\"string\">&quot;transformation=[Rigid Body]&quot;</span>);</span><br></pre></td></tr></table></figure>\n<p><a name=\"d17a0f0b\"></a></p>\n<h2 id=\"参考\">参考</h2>\n<ol>\n<li class=\"lvl-3\">\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iaWd3d3cuZXBmbC5jaC90aGV2ZW5hei9zdGFja3JlZy8=\">https://bigwww.epfl.ch/thevenaz/stackreg/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li class=\"lvl-3\">\n<p>P. Thévenaz, U.E. Ruttimann, M. Unser, “A Pyramid Approach to Subpixel Registration Based on Intensity,” IEEE Transactions on Image Processing, vol. 7, no. 1, pp. 27-41, January 1998. Other relevant on-line publications are available at <span class=\"exturl\" data-url=\"aHR0cDovL2JpZ3d3dy5lcGZsLmNoL3B1YmxpY2F0aW9ucy8=\">http://bigwww.epfl.ch/publications/<i class=\"fa fa-external-link-alt\"></i></span>.</p>\n</li>\n</ol>\n</div>\n\n\t\t\t<script src=\"https://my.openwrite.cn/js/readmore.js\" type=\"text/javascript\"></script>\n\t\t\t<script>\n\t\t\tvar isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);\n\t\t\tif (!isMobile) {\n\t\t\t    var btw = new BTWPlugin();\n\t\t\t    btw.init({\n\t\t\t        \"id\": \"vip-container\",\n\t\t\t        \"blogId\": \"33502-1730425843713-524\",\n\t\t\t        \"name\": \"虫子的生存笔记\",\n\t\t\t        \"qrcode\": \"https://leaf-miner.pages.dev/image/%E5%85%AC%E4%BC%97%E5%8F%B7.png\",\n\t\t\t        \"keyword\": \"more\"\n\t\t\t    });\n\t\t\t}\n\t\t\t</script>\n\t\t","raw":null,"categories":[{"name":"笔记","path":"api/categories/笔记.json"},{"name":"笔记/学习","path":"api/categories/笔记/学习.json"}],"tags":[{"name":"ImageJ","path":"api/tags/ImageJ.json"},{"name":"图像","path":"api/tags/图像.json"},{"name":"stack","path":"api/tags/stack.json"},{"name":"StackReg","path":"api/tags/StackReg.json"},{"name":"图像配准","path":"api/tags/图像配准.json"}]},{"title":"R语言--SimpleITK","slug":"R语言-SIMPLEITK","date":"2024-05-16T09:02:40.000Z","updated":"2024-10-18T19:40:58.802Z","comments":true,"path":"api/articles/R语言-SIMPLEITK.json","excerpt":null,"keywords":"Hexo, 科研, 生物, R语言, 爬虫, 生信, 中药, 果蝇, 笔记, 教程, 虫子, 潜叶虫, leafminer, leaf-miner, 生活, 随笔, 原创","cover":null,"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><div id=\"vip-container\"><p><strong>SimpleITK</strong> 是 Insight 工具包（ITK）算法和数据结构的简化编程接口。它支持多种编程语言的接口，包括 C++、Python、R、Java、C#、Lua、Ruby 和 TCL。这些绑定使科学家能够用他们最熟悉的编程语言开发图像分析工作流。该工具包支持 15 种以上不同的图像文件格式，提供 280 多种图像分析过滤器，并为 ITK 基于强度的配准框架实现了统一接口。</p>\n<span id=\"more\"></span>\n<h2 id=\"特点\">特点</h2>\n<p>使用 Python、R、Java、C#、Lua、Ruby、TCL 和 C++ 进行开源多维图像分析。由 Insight 工具包社区为生物医学科学及其他领域开发。</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">被视为空间对象而非像素阵列的图像。计算在二维或三维物理空间中进行。</li>\n<li class=\"lvl-2\">利用刚性或可变形变换快速配准二维和三维模内和模间图像的配准框架。</li>\n<li class=\"lvl-2\">从经典的Otsu thresholding到水平集(level sets) 和分水岭(watersheds)，为图像分割工作流程提供了丰富的过滤器。</li>\n<li class=\"lvl-2\">评估分割结果（豪斯多夫距离、雅卡德值和骰子值、表面距离等&lt;Hausdorff distance, Jaccard and Dice values, surface distances etc.&gt; ）和分析分割形状特征（定向边界框、主矩、周长、伸长率、费雷特直径等&lt;oriented bounding box, principal moments, perimeter, elongation, Feret diameter etc.&gt;）的工具。</li>\n<li class=\"lvl-2\">图像文件输入/输出，支持 20 多种图像文件格式（jpg、png、DICOM、TIFF 等），并可在不同格式间轻松转换。</li>\n<li class=\"lvl-2\">通过基于进程和线程的并行化，可随时集成到集群或台式机的并行处理框架中。</li>\n</ul>\n<h2 id=\"安装R包-SimpleITKRInstaller\">安装R包-SimpleITKRInstaller</h2>\n<p><code>devtools::install_github(&quot;SimpleITK/SimpleITKRInstaller&quot;)</code></p>\n<h2 id=\"Fiji\">Fiji</h2>\n<p>SimpleITK 有一个内置函数 <code>itk::simple::Show()</code>，可用于在交互会话中查看图像。默认情况下，该 Show 函数会搜索已安装的 Fiji 来显示图像。如果找不到 Fiji，则会搜索 ImageJ。选择 Fiji/ImageJ 是因为它们可以处理 SimpleITK 支持的所有图像类型，包括每像素有 n 个分量的 3D 矢量图像。    Show 函数会在多个标准位置搜索 Fiji/ImageJ。具体位置取决于系统类型（Linux、Mac 或 Windows）。启用 &quot;Show &quot;的 &quot;debugOn &quot;选项后，用户可以看到 SimpleITK 正在搜索 Fiji（或其他查看应用程序）的位置，以及用于启动查看应用程序的实际命令。    Show 是 ImageViewer 类的功能接口。可以使用 ImageViewer 对象配置其他查看应用程序.</p>\n<hr>\n<h2 id=\"图片导入和导出\">图片导入和导出</h2>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">library<span class=\"punctuation\">(</span>SimpleITK<span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">reader <span class=\"operator\">&lt;-</span> ImageFileReader<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">reader<span class=\"operator\">$</span>SetImageIO<span class=\"punctuation\">(</span><span class=\"string\">&quot;PNGImageIO&quot;</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">reader<span class=\"operator\">$</span>SetFileName<span class=\"punctuation\">(</span>inputImageFileName<span class=\"punctuation\">)</span></span><br><span class=\"line\">image <span class=\"operator\">&lt;-</span> reader<span class=\"operator\">$</span>Execute<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\"></span><br><span class=\"line\">writer <span class=\"operator\">&lt;-</span> ImageFileWriter<span class=\"punctuation\">(</span><span class=\"punctuation\">)</span></span><br><span class=\"line\">writer<span class=\"operator\">$</span>SetFileName<span class=\"punctuation\">(</span>outputImageFileName<span class=\"punctuation\">)</span></span><br><span class=\"line\">writer<span class=\"operator\">$</span>Execute<span class=\"punctuation\">(</span>image<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n<p>上面的示例指定使用 PNGImageIO 来读取文件。如果省略该行，SimpleITK 将根据文件名的后缀和/或文件头自动确定要使用哪个 IO。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">image <span class=\"operator\">&lt;-</span> ReadImage<span class=\"punctuation\">(</span>inputImageFileName<span class=\"punctuation\">)</span></span><br><span class=\"line\">WriteImage<span class=\"punctuation\">(</span>image<span class=\"punctuation\">,</span> outputImageFileName<span class=\"punctuation\">)</span></span><br></pre></td></tr></table></figure>\n</div>\n\n\t\t\t<script src=\"https://my.openwrite.cn/js/readmore.js\" type=\"text/javascript\"></script>\n\t\t\t<script>\n\t\t\tvar isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);\n\t\t\tif (!isMobile) {\n\t\t\t    var btw = new BTWPlugin();\n\t\t\t    btw.init({\n\t\t\t        \"id\": \"vip-container\",\n\t\t\t        \"blogId\": \"33502-1730425843713-524\",\n\t\t\t        \"name\": \"虫子的生存笔记\",\n\t\t\t        \"qrcode\": \"https://leaf-miner.pages.dev/image/%E5%85%AC%E4%BC%97%E5%8F%B7.png\",\n\t\t\t        \"keyword\": \"more\"\n\t\t\t    });\n\t\t\t}\n\t\t\t</script>\n\t\t","raw":null,"categories":[{"name":"笔记","path":"api/categories/笔记.json"},{"name":"笔记/学习","path":"api/categories/笔记/学习.json"}],"tags":[{"name":"插件","path":"api/tags/插件.json"},{"name":"笔记","path":"api/tags/笔记.json"},{"name":"ImageJ","path":"api/tags/ImageJ.json"},{"name":"图像","path":"api/tags/图像.json"},{"name":"简介","path":"api/tags/简介.json"}]},{"title":"ImageJ--Feature Finder插件","slug":"ImageJ--图像模板匹配-Feature Finder插件","date":"2024-05-09T13:53:40.000Z","updated":"2024-10-18T19:52:40.700Z","comments":true,"path":"api/articles/ImageJ--图像模板匹配-Feature Finder插件.json","excerpt":null,"keywords":"Hexo, 科研, 生物, R语言, 爬虫, 生信, 中药, 果蝇, 笔记, 教程, 虫子, 潜叶虫, leafminer, leaf-miner, 生活, 随笔, 原创","cover":"/images/feature-finder-screenshot.jpg=100x100","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><div id=\"vip-container\"><p><img data-src=\"/images/feature-finder-screenshot.jpg=100x100\" alt=\"\"><br>\n<strong>Feature Finder</strong> 是ImageJ 中的图像模板匹配（Template Matching）插件，用于查找与原型（模板）相同或相似的特征。&quot;相似 &quot;是指图像与原型之间的均方偏差应该很小。</p>\n<span id=\"more\"></span> \n<p><img data-src=\"/images/20240509_223918_00000.png\" alt=\"\"></p>\n<h2 id=\"用途\">用途</h2>\n<blockquote>\n<ul class=\"lvl-1\">\n<li class=\"lvl-2\">\n<p>目标检测：通过将已知目标作为模板，在图像中寻找与模板最相似的区域，从而实现目标的检测。</p>\n</li>\n<li class=\"lvl-2\">\n<p>物体跟踪：通过不断更新模板，可以实现对移动目标在视频序列中的跟踪。</p>\n</li>\n<li class=\"lvl-2\">\n<p>字符识别：通过利用字符的模板，可以识别文本中的字符或数字。</p>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"特点\">特点</h2>\n<p><strong>优点：</strong></p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>经过（缓慢的）初始计算后，预览提供了一种快速确定相似度阈值的方法。</p>\n</li>\n<li class=\"lvl-2\">\n<p>亚像素精度。</p>\n</li>\n<li class=\"lvl-2\">\n<p>在预览过程中，可以通过对找到的特征进行平均来完善原型。</p>\n</li>\n</ul>\n<p><strong>局限：</strong></p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>仅适用于灰度图像；像素值的任何校准都会被忽略。</p>\n</li>\n<li class=\"lvl-2\">\n<p>只能搜索未旋转（或圆形）和未缩放的特征。</p>\n</li>\n<li class=\"lvl-2\">\n<p>速度较慢，小原型除外（暴力算法，无 FFT）。</p>\n</li>\n<li class=\"lvl-2\">\n<p>预览期间，当进度条处于激活状态时：不要更改对话框中的任何输入，否则会重新启动，耗时更长。</p>\n</li>\n<li class=\"lvl-2\">\n<p>不处理堆栈。</p>\n</li>\n</ul>\n<h2 id=\"安装\">安装</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>下载<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ltYWdlai9pbWFnZWouZ2l0aHViLmlvL2Jsb2IvbWFpbi9tZWRpYS9wbHVnaW5zL2ZlYXR1cmUtZmluZGVyL0ZlYXR1cmVfRmluZGVyLmphdmE=\">Feature_Finder.java<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li class=\"lvl-2\">\n<p>将原始的 <code>Feature_Finder.java</code> 文件复制到 ImageJ 插件文件夹 (plugins) 或其子文件夹中。确保将下载的文件命名为 “Feature_Finder.java”；大写/小写都很重要。</p>\n</li>\n<li class=\"lvl-2\">\n<p>使用 &quot;编译并运行 (Compile and Run)&quot;进行编译，然后按 “确定”。请注意，&quot;编译并运行 &quot;功能目前在 Fiji 上无法使用；作为一种变通方法，请使用文件&gt;新建&gt;脚本，打开 Feature_Finder.java 文件并按 “运行”。</p>\n</li>\n<li class=\"lvl-2\">\n<p>使用 “帮助”&gt;&quot;更新菜单 &quot;或重新启动 ImageJ 使其出现在插件菜单中（如果您已使用 Fiji 脚本编辑器，则无需使用）。</p>\n</li>\n</ul>\n<h2 id=\"参数选项-Dialog-Options\">参数选项 (Dialog Options)</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><strong>Prototype from</strong> 选择原型 (prototype)。这可以是当前图像或不同图像的 ROI。</p>\n</li>\n<li class=\"lvl-2\">\n<p><strong>Output Type</strong> 可以是：</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-6\">点选择：所有特征中心的点 ROI。</li>\n<li class=\"lvl-6\">计数：找到的特征数量写入结果表。</li>\n<li class=\"lvl-6\">列表：中心的 x 和 y 像素坐标列表被写入结果表。</li>\n<li class=\"lvl-6\">列表（校准）：与“列表”类似，但将校准的 x 和 y 坐标写入结果表。</li>\n<li class=\"lvl-6\">点图：一个单独的二值图像，每个特征的中心有一个像素 = 255。</li>\n<li class=\"lvl-6\">偏差图：单独的浮点（32 位）图像。每个点的值表示原始图像中该位置的周围环境与原型的偏离程度。偏差图独立于“公差”设置。</li>\n<li class=\"lvl-6\">特征平均值：单独的浮点（32 位）输出图像，所有特征的平均值移动到同一位置。</li>\n</ul>\n</li>\n<li class=\"lvl-2\">\n<p><strong>Subtract Background</strong>使用减去背景，特征被认为是相同的，独立于任何恒定（相加）背景。</p>\n</li>\n<li class=\"lvl-2\">\n<p><strong>Soft Edges</strong> 软边缘为原型的近边缘像素赋予的权重小于靠近中心的像素的权重。</p>\n</li>\n<li class=\"lvl-2\">\n<p><strong>Distance Min</strong>如果要素靠得很近，小于“最小距离”，则仅保留最匹配的要素。</p>\n</li>\n<li class=\"lvl-2\">\n<p><strong>Tolerance</strong>公差决定了特征与原型的偏差程度。值 0 表示完全匹配，100 表示偏差等于原型的方差。启用“减去背景”后，在公差为 100% 的情况下，原型区域上具有恒定值的图像区域也符合特征。</p>\n</li>\n<li class=\"lvl-2\">\n<p><strong>Refine</strong> 在预览过程中，设置容差后，您可以按“调整”按钮。这会根据当前选择的所有特征的平均值计算出新的原型。例如，如果原型受到噪声影响，“优化”很有用。在预览期间，该对话框还显示特征数量与原型偏差的直方图以及包含找到的特征数量的消息。</p>\n</li>\n</ul>\n<h2 id=\"提示和技巧\">提示和技巧</h2>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>在预览过程中，直方图右侧经常会出现一个宽阔的峰值。这就是假匹配。请将阈值保持在该峰值以下。</p>\n</li>\n<li class=\"lvl-2\">\n<p>特征应与原型具有相同的灰度对比度。如果不是这种情况，建议选择图像中可能出现的对比度最高的模板。</p>\n</li>\n<li class=\"lvl-2\">\n<p>如果阈值法失败，也可以尝试创建偏差图并对其进行处理（背景减除、高通滤波器、查找最大值…）。</p>\n</li>\n</ul>\n<h2 id=\"参考\">参考</h2>\n<ol>\n<li class=\"lvl-3\">\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9pbWFnZWouZ2l0aHViLmlvL3BsdWdpbnMvZmVhdHVyZS1maW5kZXI=\">https://imagej.github.io/plugins/feature-finder<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n<li class=\"lvl-3\">\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3R3bmtpZS9hcnRpY2xlL2RldGFpbHMvMTMyMTU0MjUz\">https://blog.csdn.net/twnkie/article/details/132154253<i class=\"fa fa-external-link-alt\"></i></span></p>\n</li>\n</ol>\n</div>\n\n\t\t\t<script src=\"https://my.openwrite.cn/js/readmore.js\" type=\"text/javascript\"></script>\n\t\t\t<script>\n\t\t\tvar isMobile = navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i);\n\t\t\tif (!isMobile) {\n\t\t\t    var btw = new BTWPlugin();\n\t\t\t    btw.init({\n\t\t\t        \"id\": \"vip-container\",\n\t\t\t        \"blogId\": \"33502-1730425843713-524\",\n\t\t\t        \"name\": \"虫子的生存笔记\",\n\t\t\t        \"qrcode\": \"https://leaf-miner.pages.dev/image/%E5%85%AC%E4%BC%97%E5%8F%B7.png\",\n\t\t\t        \"keyword\": \"more\"\n\t\t\t    });\n\t\t\t}\n\t\t\t</script>\n\t\t","raw":null,"categories":[{"name":"笔记","path":"api/categories/笔记.json"},{"name":"笔记/学习","path":"api/categories/笔记/学习.json"}],"tags":[{"name":"ImageJ","path":"api/tags/ImageJ.json"},{"name":"图像","path":"api/tags/图像.json"},{"name":"特征匹配","path":"api/tags/特征匹配.json"},{"name":"Feature-Finder","path":"api/tags/Feature-Finder.json"}]}]}